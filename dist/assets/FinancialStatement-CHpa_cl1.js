import { _ as ft, r as B, c as m, o as bt, q as mt, d as o, e as t, g as _, i as E, h as u, F as g, k as h, f as D, w as K, j as gt, v as nt, t as n, S as ot, p as l } from "./index-Fk_fMhvq.js"; const ht = { class: "d-flex flex-column gap-5 h-100" }, yt = { class: "card card-flush border-0 shadow-sm" }, xt = { class: "card-body p-4" }, _t = { class: "d-flex justify-content-between align-items-center mb-4" }, wt = { class: "d-flex gap-2" }, kt = ["disabled"], Dt = { class: "btn-group w-100", role: "group" }, Ct = ["onClick"], St = { key: 0, class: "path3" }, Et = { class: "d-none d-md-flex align-items-center gap-2" }, It = { key: 0, class: "path3" }, Pt = { class: "fw-bold" }, At = { key: 0, class: "card card-flush" }, $t = { class: "card-body" }, Lt = { class: "row g-4 mb-6" }, Ft = { class: "col-12" }, Mt = ["value"], Tt = { class: "row g-4 mb-6" }, jt = { class: "col-12 col-md-6" }, Bt = { class: "col-12 col-md-6" }, Rt = { class: "d-flex flex-wrap gap-3 mb-6" }, Vt = ["onClick"], Ot = { class: "row g-3 mb-6" }, Nt = { class: "card card-flush bg-light-primary h-100" }, qt = { class: "card-body text-center p-3" }, Ut = { class: "fs-7 fw-bold text-primary" }, Gt = { class: "fs-8 text-muted" }, Wt = { class: "alert alert-light-info d-flex align-items-center mb-6" }, Ht = { class: "flex-grow-1" }, Yt = { class: "text-muted" }, zt = { class: "d-flex justify-content-end" }, Qt = { key: 1, class: "d-flex flex-column gap-5" }, Xt = { class: "card card-flush" }, Jt = { class: "card-body p-4" }, Kt = { class: "d-flex gap-3" }, Zt = ["onClick"], ts = { class: "fw-bold d-none d-md-inline" }, ss = { key: 0, class: "card card-flush" }, es = { class: "card-body text-center py-10" }, as = { class: "mt-3 fw-bold text-muted" }, ns = { key: 1, class: "row g-5" }, os = { class: "col-12 col-lg-4" }, ls = { class: "card card-flush h-100 border-success" }, is = { class: "card-header bg-light-success" }, ds = { class: "card-toolbar" }, cs = { class: "badge badge-success fs-6 fw-bold" }, rs = { class: "card-body" }, us = { key: 0, class: "mb-6" }, vs = { class: "text-gray-800 fw-semibold" }, ps = { class: "text-muted fs-7" }, fs = { class: "fw-bold text-success" }, bs = { key: 1 }, ms = { class: "text-gray-800 fw-semibold" }, gs = { class: "text-muted fs-7" }, hs = { class: "fw-bold text-success" }, ys = { class: "d-flex justify-content-between align-items-center pt-4 mt-4 border-top border-gray-300" }, xs = { class: "fs-4 fw-bold text-success" }, _s = { class: "col-12 col-lg-4" }, ws = { class: "card card-flush h-100 border-warning" }, ks = { class: "card-header bg-light-warning" }, Ds = { class: "card-toolbar" }, Cs = { class: "badge badge-warning fs-6 fw-bold" }, Ss = { class: "card-body" }, Es = { key: 0, class: "mb-6" }, Is = { class: "text-gray-800 fw-semibold" }, Ps = { class: "text-muted fs-7" }, As = { class: "fw-bold text-warning" }, $s = { key: 1 }, Ls = { class: "text-gray-800 fw-semibold" }, Fs = { class: "text-muted fs-7" }, Ms = { class: "fw-bold text-warning" }, Ts = { class: "d-flex justify-content-between align-items-center pt-4 mt-4 border-top border-gray-300" }, js = { class: "fs-4 fw-bold text-warning" }, Bs = { class: "col-12 col-lg-4" }, Rs = { class: "card card-flush h-100 border-info" }, Vs = { class: "card-header bg-light-info" }, Os = { class: "card-toolbar" }, Ns = { class: "badge badge-info fs-6 fw-bold" }, qs = { class: "card-body" }, Us = { key: 0 }, Gs = { class: "text-gray-800 fw-semibold" }, Ws = { class: "text-muted fs-7" }, Hs = { class: "fw-bold text-info" }, Ys = { class: "d-flex justify-content-between align-items-center py-3 border-bottom border-gray-200" }, zs = { class: "text-muted fs-7" }, Qs = { class: "d-flex justify-content-between align-items-center pt-4 mt-4 border-top border-gray-300" }, Xs = { class: "fs-4 fw-bold text-info" }, Js = { class: "col-12" }, Ks = { class: "card card-flush border-primary" }, Zs = { class: "card-body" }, te = { class: "d-flex align-items-center justify-content-between" }, se = { class: "d-flex align-items-center gap-3" }, ee = { class: "text-end" }, ae = { key: 2, class: "card card-flush" }, ne = { class: "card-header" }, oe = { class: "card-toolbar" }, le = { class: "badge badge-light-primary fs-6 fw-bold" }, ie = { class: "card-body" }, de = { class: "mb-8" }, ce = { class: "d-flex justify-content-between align-items-center mb-4 pb-3 border-bottom border-primary" }, re = { class: "fs-3 fw-bold text-success" }, ue = { key: 0, class: "ps-4" }, ve = { class: "text-gray-800 fw-semibold" }, pe = { class: "text-muted ms-2 fs-7" }, fe = { class: "fw-bold" }, be = { key: 1, class: "ps-4 text-muted fs-6" }, me = { class: "mb-8" }, ge = { class: "d-flex justify-content-between align-items-center mb-4 pb-3 border-bottom border-danger" }, he = { class: "fs-3 fw-bold text-danger" }, ye = { key: 0, class: "ps-4" }, xe = { class: "text-gray-800 fw-semibold" }, _e = { class: "text-muted ms-2 fs-7" }, we = { class: "fw-bold" }, ke = { key: 1, class: "ps-4 text-muted fs-6" }, De = { class: "d-flex justify-content-between align-items-center py-4 mb-6 bg-light-primary rounded" }, Ce = { class: "fs-2 fw-bold text-primary m-0 ps-4" }, Se = { class: "mb-8" }, Ee = { class: "d-flex justify-content-between align-items-center mb-4 pb-3 border-bottom border-warning" }, Ie = { class: "fs-3 fw-bold text-warning" }, Pe = { key: 0, class: "ps-4" }, Ae = { class: "text-gray-800 fw-semibold" }, $e = { class: "text-muted ms-2 fs-7" }, Le = { class: "fw-bold" }, Fe = { key: 1, class: "ps-4 text-muted fs-6" }, Me = { class: "mt-6 p-4 bg-light-info rounded" }, Te = { class: "row g-4 text-center" }, je = { class: "col-6 col-md-3" }, Be = { class: "fs-4 fw-bold text-info" }, Re = { class: "col-6 col-md-3" }, Ve = { class: "fs-4 fw-bold text-info" }, Oe = { class: "col-6 col-md-3" }, Ne = { class: "fs-4 fw-bold text-info" }, qe = { class: "col-6 col-md-3" }, Ue = { class: "fs-4 fw-bold text-info" }, Ge = { key: 3, class: "card card-flush" }, We = { class: "card-header" }, He = { class: "card-toolbar" }, Ye = { class: "d-flex gap-2" }, ze = { class: "badge badge-light-primary fs-6 fw-bold" }, Qe = { class: "badge badge-light-info fs-6 fw-bold" }, Xe = { class: "card-body" }, Je = { class: "table-responsive" }, Ke = { class: "table table-row-dashed align-middle" }, Ze = { class: "fw-bold text-primary" }, ta = { class: "text-end fw-semibold" }, sa = { key: 0, class: "text-dark" }, ea = { key: 1, class: "text-muted" }, aa = { class: "text-end fw-semibold" }, na = { key: 0, class: "text-dark" }, oa = { key: 1, class: "text-muted" }, la = { class: "text-end fw-semibold" }, ia = { class: "fw-bold fs-4 text-gray-900 border-top-2 border-gray-400" }, da = { class: "text-end text-primary fs-3" }, ca = { class: "text-end text-primary fs-3" }, ra = { class: "text-end" }, ua = { class: "mt-6" }, va = { class: "flex-grow-1" }, pa = { class: "fw-bold" }, fa = { class: "text-muted" }, ba = { class: "d-flex justify-content-between" }, ma = { key: 2, class: "d-flex flex-column gap-5" }, ga = { class: "row g-5" }, ha = { class: "col-12 col-md-6" }, ya = { class: "card card-flush h-100" }, xa = { class: "card-header" }, _a = { class: "card-toolbar" }, wa = { class: "card-body" }, ka = { class: "d-flex justify-content-between align-items-center py-3 border-bottom border-gray-200" }, Da = { class: "fw-bold text-success" }, Ca = { class: "d-flex justify-content-between align-items-center py-3 border-bottom border-gray-200" }, Sa = { class: "text-muted fs-7" }, Ea = { class: "fw-bold text-primary" }, Ia = { class: "mt-4 p-3 bg-light rounded" }, Pa = { class: "fs-7 text-muted" }, Aa = { class: "col-12 col-md-6" }, $a = { class: "card card-flush h-100" }, La = { class: "card-header" }, Fa = { class: "card-toolbar" }, Ma = { class: "card-body" }, Ta = { class: "d-flex justify-content-between align-items-center py-3 border-bottom border-gray-200" }, ja = { class: "fw-bold text-success" }, Ba = { class: "d-flex justify-content-between align-items-center py-3 border-bottom border-gray-200" }, Ra = { class: "fw-bold text-primary" }, Va = { class: "d-flex justify-content-between align-items-center py-3 border-bottom border-gray-200" }, Oa = { class: "mt-4 p-3 bg-light-success rounded" }, Na = { class: "fs-7 text-success" }, qa = { class: "card card-flush" }, Ua = { class: "card-header" }, Ga = { class: "card-toolbar" }, Wa = { class: "badge badge-light-primary fs-6 fw-bold" }, Ha = { class: "card-body" }, Ya = { class: "row g-4 text-center" }, za = { class: "col-6 col-md-3" }, Qa = { class: "p-4 bg-light-success rounded" }, Xa = { class: "fs-2 fw-bold text-success" }, Ja = { class: "col-6 col-md-3" }, Ka = { class: "p-4 bg-light-primary rounded" }, Za = { class: "col-6 col-md-3" }, tn = { class: "p-4 bg-light-warning rounded" }, sn = { class: "col-6 col-md-3" }, en = { class: "p-4 bg-light-info rounded" }, an = { class: "mt-8" }, nn = { class: "row g-4" }, on = { class: "col-12 col-md-4" }, ln = { class: "card card-flush bg-light-success" }, dn = { class: "card-body text-center p-6" }, cn = { class: "fs-1 fw-bold text-success" }, rn = { class: "col-12 col-md-4" }, un = { class: "card card-flush bg-light-warning" }, vn = { class: "card-body text-center p-6" }, pn = { class: "col-12 col-md-4" }, fn = { class: "card card-flush bg-light-info" }, bn = { class: "card-body text-center p-6" }, mn = { class: "fs-1 fw-bold text-info" }, gn = { class: "d-flex justify-content-start" }, $ = "https://backend.cloudfuelstationmis.com/api/records/v1", hn = { __name: "FinancialStatement", setup(yn) { const F = B(!1), k = B(1), M = B("balance-sheet"), r = B({ startDate: new Date(new Date().getFullYear(), 0, 1).toISOString().split("T")[0], endDate: new Date().toISOString().split("T")[0], stationId: "", period: "ytd" }), x = B({ ledgerEntries: [], transactions: [], cashDrawers: [], stationInventory: [], stations: [], products: [], inventoryHistory: [] }), lt = localStorage.getItem("kigrama_auth_token"), G = a => ({ 4e3: "Sales Revenue", 4100: "Service Revenue", 4200: "Other Revenue", 1e3: "Cash and Cash Equivalents", 1100: "Accounts Receivable", 1200: "Inventory", 1300: "Prepaid Expenses", 1500: "Property, Plant & Equipment", 2e3: "Accounts Payable", 2100: "VAT Payable", 2200: "Accrued Expenses", 3e3: "Share Capital", 3100: "Retained Earnings", 5e3: "Cost of Fuel Sales", 5100: "Cost of Non-Fuel Sales", 6e3: "Operating Expenses", 6100: "Utilities", 6200: "Maintenance", 6300: "Insurance", 6400: "Depreciation" })[a] || `Account ${a}`, W = a => a.startsWith("1") ? ["1000", "1100", "1200", "1300"].includes(a) ? { type: "Asset", category: "Current Assets" } : { type: "Asset", category: "Non-Current Assets" } : a.startsWith("2") ? ["2000", "2100", "2200"].includes(a) ? { type: "Liability", category: "Current Liabilities" } : { type: "Liability", category: "Non-Current Liabilities" } : a.startsWith("3") ? { type: "Equity", category: "Equity" } : a.startsWith("4") ? { type: "Revenue", category: "Revenue" } : a.startsWith("5") ? { type: "Expense", category: "Cost of Goods Sold" } : a.startsWith("6") ? { type: "Expense", category: "Operating Expenses" } : { type: "Unknown", category: "Other" }, it = [{ id: 1, label: "Filters", icon: "calendar-2" }, { id: 2, label: "Statements", icon: "chart-line-up" }, { id: 3, label: "Reconciliation", icon: "chart-pie-simple" }], dt = [{ key: "today", label: "Today" }, { key: "week", label: "This Week" }, { key: "month", label: "This Month" }, { key: "quarter", label: "This Quarter" }, { key: "ytd", label: "Year to Date" }], ct = [{ key: "balance-sheet", label: "Balance Sheet", icon: "abstract-26" }, { key: "income-statement", label: "Income Statement", icon: "chart-line-up" }, { key: "trial-balance", label: "Trial Balance", icon: "abstract-14" }], Z = async () => { F.value = !0; try { const a = { Authorization: `Bearer ${lt}`, "Content-Type": "application/json" }, [s, e, i, v, y, P, S] = await Promise.all([fetch(`${$}/LedgerEntries`, { headers: a }), fetch(`${$}/Transactions`, { headers: a }), fetch(`${$}/CashDrawers`, { headers: a }), fetch(`${$}/StationInventory`, { headers: a }), fetch(`${$}/Stations`, { headers: a }), fetch(`${$}/Products`, { headers: a }), fetch(`${$}/InventoryHistory`, { headers: a })]), b = [s, e, i, v, y, P, S]; for (const A of b) if (!A.ok) throw new Error(`API request failed: ${A.status} ${A.statusText}`); const [L, N, q, U, w, X, J] = await Promise.all(b.map(A => A.json())); x.value = { ledgerEntries: L.records || [], transactions: N.records || [], cashDrawers: q.records || [], stationInventory: U.records || [], stations: w.records || [], products: X.records || [], inventoryHistory: J.records || [] } } catch (a) { console.error("Error fetching financial data:", a), await ot.fire({ title: "Error!", text: `Failed to load financial data: ${a.message}`, icon: "error", confirmButtonColor: "#f1416c" }) } finally { F.value = !1 } }, tt = m(() => x.value.stations || []), T = m(() => x.value.ledgerEntries.filter(a => { const s = new Date(a.TransactionDate), e = new Date(r.value.startDate), i = new Date(r.value.endDate); return !(s < e || s > i || r.value.stationId && a.StationID != r.value.stationId) })), H = m(() => x.value.cashDrawers.filter(a => { const s = new Date(a.ShiftDate), e = new Date(r.value.startDate), i = new Date(r.value.endDate); return !(s < e || s > i || r.value.stationId && a.StationID != r.value.stationId) })), rt = m(() => [{ table: "LedgerEntries", label: "Ledger", count: T.value.length, status: "loaded" }, { table: "CashDrawers", label: "Cash", count: H.value.length, status: "loaded" }, { table: "StationInventory", label: "Inventory", count: x.value.stationInventory.length, status: "loaded" }, { table: "Products", label: "Products", count: x.value.products.length, status: "loaded" }, { table: "Transactions", label: "Sales", count: x.value.transactions.length, status: "loaded" }, { table: "Stations", label: "Stations", count: x.value.stations.length, status: "loaded" }]), R = m(() => { const a = {}; return T.value.forEach(s => { const e = s.AccountCode, i = parseFloat(s.DebitAmount || "0.00"), v = parseFloat(s.CreditAmount || "0.00"); a[e] || (a[e] = 0); const y = W(e); y.type === "Asset" || y.type === "Expense" ? a[e] += i - v : a[e] += v - i }), a }), p = m(() => { const a = { assets: { current: [], nonCurrent: [], total: 0 }, liabilities: { current: [], nonCurrent: [], total: 0 }, equity: { items: [], total: 0 } }; return Object.entries(R.value).forEach(([s, e]) => { if (Math.abs(e) < .01) return; const i = W(s), v = { code: s, name: G(s), balance: Math.abs(e) }; i.type === "Asset" ? (i.category === "Current Assets" ? a.assets.current.push(v) : a.assets.nonCurrent.push(v), a.assets.total += Math.abs(e)) : i.type === "Liability" ? (i.category === "Current Liabilities" ? a.liabilities.current.push(v) : a.liabilities.nonCurrent.push(v), a.liabilities.total += Math.abs(e)) : i.type === "Equity" && (a.equity.items.push(v), a.equity.total += Math.abs(e)) }), a }), c = m(() => { const a = { revenue: { items: [], total: 0 }, cogs: { items: [], total: 0 }, operatingExpenses: { items: [], total: 0 }, grossProfit: 0, operatingIncome: 0, netIncome: 0 }; return Object.entries(R.value).forEach(([s, e]) => { if (Math.abs(e) < .01) return; const i = W(s), v = { code: s, name: G(s), balance: Math.abs(e) }; i.type === "Revenue" ? (a.revenue.items.push(v), a.revenue.total += Math.abs(e)) : i.category === "Cost of Goods Sold" ? (a.cogs.items.push(v), a.cogs.total += Math.abs(e)) : i.category === "Operating Expenses" && (a.operatingExpenses.items.push(v), a.operatingExpenses.total += Math.abs(e)) }), a.grossProfit = a.revenue.total - a.cogs.total, a.operatingIncome = a.grossProfit - a.operatingExpenses.total, a.netIncome = a.operatingIncome, a }), V = m(() => { const a = {}; return T.value.forEach(s => { const e = s.AccountCode, i = parseFloat(s.DebitAmount || "0.00"), v = parseFloat(s.CreditAmount || "0.00"); a[e] || (a[e] = { debits: 0, credits: 0, netBalance: 0 }), a[e].debits += i, a[e].credits += v, a[e].netBalance = a[e].debits - a[e].credits }), a }), C = m(() => { const a = Object.values(V.value).reduce((e, i) => e + i.debits, 0), s = Object.values(V.value).reduce((e, i) => e + i.credits, 0); return { totalDebits: a, totalCredits: s } }), Y = m(() => { const a = p.value.assets.total, s = p.value.liabilities.total + p.value.equity.total + c.value.netIncome; return Math.abs(a - s) < 100 }), st = m(() => { const a = p.value.assets.total, s = p.value.liabilities.total + p.value.equity.total + c.value.netIncome; return a - s }), j = m(() => Math.abs(C.value.totalDebits - C.value.totalCredits) < 100), f = m(() => { const a = R.value[1e3] || 0, s = H.value.filter(b => b.Status === "Closed").reduce((b, L) => b + parseFloat(L.ActualCash || "0.00"), 0), e = a - s, i = R.value[1200] || 0, v = x.value.stationInventory.filter(b => r.value.stationId ? b.StationID == r.value.stationId : !0); let y = 0, P = 0; v.forEach(b => { const L = parseFloat(b.CurrentStock || "0.00"), N = x.value.products.find(w => w.ProductID == b.ProductID), q = N ? parseFloat(N.UnitPrice || "0.00") : 0; y += L * q; const U = x.value.inventoryHistory.filter(w => w.ProductID == b.ProductID && w.StationID == b.StationID && w.UnitPrice && parseFloat(w.UnitPrice) > 0); if (U.length > 0) { const w = U.sort((A, pt) => new Date(pt.ChangeDate) - new Date(A.ChangeDate))[0], X = parseFloat(w.UnitPrice || "0.00"), J = q - X; P += L * J } }); const S = i - y; return { cash: { bookBalance: a, physicalCash: s, variance: e, status: Math.abs(e) < 1e3 ? "balanced" : "variance", drawerCount: H.value.filter(b => b.Status === "Closed").length }, inventory: { bookValue: i, physicalValue: y, variance: S, expectedProfit: P, status: Math.abs(S) < 1e4 ? "balanced" : "variance", itemCount: v.length } } }), I = m(() => { const a = c.value.revenue.total, s = c.value.grossProfit, e = c.value.netIncome, i = p.value.assets.current.reduce((S, b) => S + b.balance, 0), v = p.value.liabilities.current.reduce((S, b) => S + b.balance, 0), y = p.value.liabilities.total, P = p.value.assets.total; return { grossMargin: a > 0 ? (s / a * 100).toFixed(1) : "0.0", netMargin: a > 0 ? (e / a * 100).toFixed(1) : "0.0", currentRatio: v > 0 ? (i / v).toFixed(2) : "0.00", debtRatio: P > 0 ? (y / P * 100).toFixed(1) : "0.0" } }), ut = a => { const s = new Date; let e, i = s.toISOString().split("T")[0]; switch (a) { case "today": e = s.toISOString().split("T")[0]; break; case "week": const v = new Date(s); v.setDate(s.getDate() - s.getDay()), e = v.toISOString().split("T")[0]; break; case "month": e = new Date(s.getFullYear(), s.getMonth(), 1).toISOString().split("T")[0]; break; case "quarter": const y = Math.floor(s.getMonth() / 3); e = new Date(s.getFullYear(), y * 3, 1).toISOString().split("T")[0]; break; case "ytd": e = new Date(s.getFullYear(), 0, 1).toISOString().split("T")[0]; break }r.value = { ...r.value, startDate: e, endDate: i, period: a } }, z = () => { console.log("Filters applied:", r.value) }, vt = async () => { await Z(), await ot.fire({ title: "Success!", text: "Financial data refreshed from database", icon: "success", toast: !0, position: "top-end", timer: 2e3, showConfirmButton: !1 }) }, d = a => new Intl.NumberFormat("en-UG", { style: "currency", currency: "UGX", minimumFractionDigits: 0, maximumFractionDigits: 0 }).format(Math.abs(a || 0)), et = a => parseFloat(a || 0).toFixed(1), Q = a => new Date(a).toLocaleDateString("en-UG", { year: "numeric", month: "long", day: "numeric" }), O = () => { var i; const a = Q(r.value.startDate), s = Q(r.value.endDate), e = r.value.stationId ? ((i = tt.value.find(v => v.StationID == r.value.stationId)) == null ? void 0 : i.StationName) || `Station ${r.value.stationId}` : "All Stations"; return `${a} - ${s} • ${e}` }, at = () => { const a = new Date(r.value.startDate), s = new Date(r.value.endDate), e = Math.abs(s - a), i = Math.ceil(e / (1e3 * 60 * 60 * 24)); return Math.max(i, 1) }; return bt(() => { Z() }), mt(r, () => { }, { deep: !0 }), (a, s) => (l(), o("div", ht, [t("div", yt, [t("div", xt, [t("div", _t, [s[10] || (s[10] = t("h1", { class: "fs-2 fw-bold text-gray-900 m-0" }, [t("i", { class: "ki-duotone ki-chart-line-up fs-1 text-primary me-2" }, [t("span", { class: "path1" }), t("span", { class: "path2" })]), E(" Financial Statements ")], -1)), t("div", wt, [t("button", { onClick: vt, disabled: F.value, class: "btn btn-light-primary btn-sm d-flex align-items-center gap-2" }, [t("i", { class: u(`ki-duotone ki-arrows-circle fs-3 ${F.value ? "spinner-border spinner-border-sm" : ""}`) }, s[7] || (s[7] = [t("span", { class: "path1" }, null, -1), t("span", { class: "path2" }, null, -1)]), 2), s[8] || (s[8] = t("span", { class: "d-none d-md-inline fw-bold" }, "Refresh", -1))], 8, kt), s[9] || (s[9] = t("span", { class: "badge badge-light-success fs-7 d-flex align-items-center" }, [t("i", { class: "ki-duotone ki-shield-check fs-4 me-1" }, [t("span", { class: "path1" }), t("span", { class: "path2" })]), E(" Schema Compliant ")], -1))])]), t("div", Dt, [(l(), o(g, null, h(it, e => t("button", { key: e.id, onClick: i => k.value = e.id, class: u(`btn ${k.value === e.id ? "btn-primary" : "btn-light"} flex-fill py-3`) }, [t("i", { class: u(`ki-duotone ki-${e.icon} fs-3 d-block d-md-none`) }, [s[11] || (s[11] = t("span", { class: "path1" }, null, -1)), s[12] || (s[12] = t("span", { class: "path2" }, null, -1)), e.icon === "calendar-2" ? (l(), o("span", St)) : _("", !0)], 2), t("div", Et, [t("i", { class: u(`ki-duotone ki-${e.icon} fs-4`) }, [s[13] || (s[13] = t("span", { class: "path1" }, null, -1)), s[14] || (s[14] = t("span", { class: "path2" }, null, -1)), e.icon === "calendar-2" ? (l(), o("span", It)) : _("", !0)], 2), t("span", Pt, n(e.label), 1)])], 10, Ct)), 64))])])]), k.value === 1 ? (l(), o("div", At, [s[24] || (s[24] = D('<div class="card-header" data-v-4c7e2da5><h3 class="card-title fw-bold" data-v-4c7e2da5><i class="ki-duotone ki-calendar-2 fs-2 text-primary me-2" data-v-4c7e2da5><span class="path1" data-v-4c7e2da5></span><span class="path2" data-v-4c7e2da5></span><span class="path3" data-v-4c7e2da5></span></i> Filters &amp; Data Selection </h3></div>', 1)), t("div", $t, [s[23] || (s[23] = D('<div class="alert alert-light-success d-flex align-items-center mb-6" data-v-4c7e2da5><i class="ki-duotone ki-shield-check fs-2 text-success me-3" data-v-4c7e2da5><span class="path1" data-v-4c7e2da5></span><span class="path2" data-v-4c7e2da5></span></i><div data-v-4c7e2da5><div class="fw-bold" data-v-4c7e2da5>Database Schema Compliant</div><div class="text-muted" data-v-4c7e2da5> All data sourced exclusively from your LedgerEntries table - No phantom logic </div></div></div>', 1)), t("div", Lt, [t("div", Ft, [s[16] || (s[16] = t("label", { class: "form-label fw-bold fs-6" }, "Station Filter", -1)), K(t("select", { "onUpdate:modelValue": s[0] || (s[0] = e => r.value.stationId = e), class: "form-select form-select-lg", onChange: z }, [s[15] || (s[15] = t("option", { value: "" }, "All Stations", -1)), (l(!0), o(g, null, h(tt.value, e => (l(), o("option", { key: e.StationID, value: e.StationID }, n(e.StationName), 9, Mt))), 128))], 544), [[gt, r.value.stationId]])])]), t("div", Tt, [t("div", jt, [s[17] || (s[17] = t("label", { class: "form-label fw-bold fs-6" }, "Start Date", -1)), K(t("input", { "onUpdate:modelValue": s[1] || (s[1] = e => r.value.startDate = e), type: "date", class: "form-control form-control-lg", onChange: z }, null, 544), [[nt, r.value.startDate]])]), t("div", Bt, [s[18] || (s[18] = t("label", { class: "form-label fw-bold fs-6" }, "End Date", -1)), K(t("input", { "onUpdate:modelValue": s[2] || (s[2] = e => r.value.endDate = e), type: "date", class: "form-control form-control-lg", onChange: z }, null, 544), [[nt, r.value.endDate]])])]), t("div", Rt, [(l(), o(g, null, h(dt, e => t("button", { key: e.key, onClick: i => ut(e.key), class: u(`btn ${r.value.period === e.key ? "btn-primary" : "btn-light-primary"} px-4 py-3 fw-bold`) }, n(e.label), 11, Vt)), 64))]), t("div", Ot, [s[19] || (s[19] = t("div", { class: "col-12" }, [t("h5", { class: "fw-bold text-gray-900 mb-3" }, "Database Tables Status")], -1)), (l(!0), o(g, null, h(rt.value, e => (l(), o("div", { key: e.table, class: "col-6 col-md-4 col-lg-2" }, [t("div", Nt, [t("div", qt, [t("div", { class: u(`badge badge-circle badge-${e.status === "loaded" ? "success" : "warning"} w-15px h-15px mb-2`) }, null, 2), t("div", Ut, n(e.label), 1), t("div", Gt, n(e.count) + " records", 1)])])]))), 128))]), t("div", Wt, [s[21] || (s[21] = t("i", { class: "ki-duotone ki-information-5 fs-2 text-info me-3" }, [t("span", { class: "path1" }), t("span", { class: "path2" }), t("span", { class: "path3" })], -1)), t("div", Ht, [s[20] || (s[20] = t("div", { class: "fw-bold" }, "Current Filter Settings", -1)), t("div", Yt, n(O()) + " • " + n(T.value.length) + " ledger entries ", 1)])]), t("div", zt, [t("button", { onClick: s[3] || (s[3] = e => k.value = 2), class: "btn btn-primary px-6 py-3" }, s[22] || (s[22] = [t("span", { class: "fw-bold" }, "Continue to Statements", -1), t("i", { class: "ki-duotone ki-arrow-right fs-3 ms-2" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1)]))])])])) : _("", !0), k.value === 2 ? (l(), o("div", Qt, [t("div", Xt, [t("div", Jt, [t("div", Kt, [(l(), o(g, null, h(ct, e => t("button", { key: e.key, onClick: i => M.value = e.key, class: u(`btn ${M.value === e.key ? "btn-primary" : "btn-light"} flex-fill d-flex align-items-center justify-content-center gap-2 py-4`) }, [t("i", { class: u(`ki-duotone ki-${e.icon} fs-2`) }, s[25] || (s[25] = [t("span", { class: "path1" }, null, -1), t("span", { class: "path2" }, null, -1)]), 2), t("span", ts, n(e.label), 1)], 10, Zt)), 64))])])]), F.value ? (l(), o("div", ss, [t("div", es, [s[26] || (s[26] = t("div", { class: "spinner-border text-primary", role: "status" }, [t("span", { class: "visually-hidden" }, "Processing ledger entries...")], -1)), t("div", as, " Processing " + n(T.value.length) + " ledger entries... ", 1)])])) : M.value === "balance-sheet" ? (l(), o("div", ns, [t("div", os, [t("div", ls, [t("div", is, [s[27] || (s[27] = t("h3", { class: "card-title fw-bold text-success" }, [t("i", { class: "ki-duotone ki-abstract-26 fs-2 me-2" }, [t("span", { class: "path1" }), t("span", { class: "path2" })]), E(" Assets ")], -1)), t("div", ds, [t("span", cs, n(d(p.value.assets.total)), 1)])]), t("div", rs, [p.value.assets.current.length > 0 ? (l(), o("div", us, [s[28] || (s[28] = t("h4", { class: "fs-5 fw-bold text-gray-700 mb-4" }, "Current Assets", -1)), (l(!0), o(g, null, h(p.value.assets.current, e => (l(), o("div", { key: e.code, class: "d-flex justify-content-between align-items-center py-3 border-bottom border-gray-200" }, [t("div", null, [t("div", vs, n(e.name), 1), t("div", ps, n(e.code) + " • LedgerEntries Only", 1)]), t("span", fs, n(d(e.balance)), 1)]))), 128))])) : _("", !0), p.value.assets.nonCurrent.length > 0 ? (l(), o("div", bs, [s[29] || (s[29] = t("h4", { class: "fs-5 fw-bold text-gray-700 mb-4" }, "Non-Current Assets", -1)), (l(!0), o(g, null, h(p.value.assets.nonCurrent, e => (l(), o("div", { key: e.code, class: "d-flex justify-content-between align-items-center py-3 border-bottom border-gray-200" }, [t("div", null, [t("div", ms, n(e.name), 1), t("div", gs, n(e.code) + " • LedgerEntries Only", 1)]), t("span", hs, n(d(e.balance)), 1)]))), 128))])) : _("", !0), t("div", ys, [s[30] || (s[30] = t("span", { class: "fs-4 fw-bold text-gray-900" }, "Total Assets", -1)), t("span", xs, n(d(p.value.assets.total)), 1)])])])]), t("div", _s, [t("div", ws, [t("div", ks, [s[31] || (s[31] = t("h3", { class: "card-title fw-bold text-warning" }, [t("i", { class: "ki-duotone ki-abstract-44 fs-2 me-2" }, [t("span", { class: "path1" }), t("span", { class: "path2" })]), E(" Liabilities ")], -1)), t("div", Ds, [t("span", Cs, n(d(p.value.liabilities.total)), 1)])]), t("div", Ss, [p.value.liabilities.current.length > 0 ? (l(), o("div", Es, [s[32] || (s[32] = t("h4", { class: "fs-5 fw-bold text-gray-700 mb-4" }, "Current Liabilities", -1)), (l(!0), o(g, null, h(p.value.liabilities.current, e => (l(), o("div", { key: e.code, class: "d-flex justify-content-between align-items-center py-3 border-bottom border-gray-200" }, [t("div", null, [t("div", Is, n(e.name), 1), t("div", Ps, n(e.code) + " • LedgerEntries Only", 1)]), t("span", As, n(d(e.balance)), 1)]))), 128))])) : _("", !0), p.value.liabilities.nonCurrent.length > 0 ? (l(), o("div", $s, [s[33] || (s[33] = t("h4", { class: "fs-5 fw-bold text-gray-700 mb-4" }, "Non-Current Liabilities", -1)), (l(!0), o(g, null, h(p.value.liabilities.nonCurrent, e => (l(), o("div", { key: e.code, class: "d-flex justify-content-between align-items-center py-3 border-bottom border-gray-200" }, [t("div", null, [t("div", Ls, n(e.name), 1), t("div", Fs, n(e.code) + " • LedgerEntries Only", 1)]), t("span", Ms, n(d(e.balance)), 1)]))), 128))])) : _("", !0), t("div", Ts, [s[34] || (s[34] = t("span", { class: "fs-4 fw-bold text-gray-900" }, "Total Liabilities", -1)), t("span", js, n(d(p.value.liabilities.total)), 1)])])])]), t("div", Bs, [t("div", Rs, [t("div", Vs, [s[35] || (s[35] = t("h3", { class: "card-title fw-bold text-info" }, [t("i", { class: "ki-duotone ki-abstract-39 fs-2 me-2" }, [t("span", { class: "path1" }), t("span", { class: "path2" })]), E(" Equity & Earnings ")], -1)), t("div", Os, [t("span", Ns, n(d(p.value.equity.total + c.value.netIncome)), 1)])]), t("div", qs, [p.value.equity.items.length > 0 ? (l(), o("div", Us, [(l(!0), o(g, null, h(p.value.equity.items, e => (l(), o("div", { key: e.code, class: "d-flex justify-content-between align-items-center py-3 border-bottom border-gray-200" }, [t("div", null, [t("div", Gs, n(e.name), 1), t("div", Ws, n(e.code) + " • LedgerEntries Only", 1)]), t("span", Hs, n(d(e.balance)), 1)]))), 128))])) : _("", !0), t("div", Ys, [t("div", null, [s[36] || (s[36] = t("div", { class: "text-gray-800 fw-semibold" }, "Current Year Earnings", -1)), t("div", zs, "Calculated • " + n(O()), 1)]), t("span", { class: u(`fw-bold ${c.value.netIncome >= 0 ? "text-success" : "text-danger"}`) }, n(d(c.value.netIncome)), 3)]), t("div", Qs, [s[37] || (s[37] = t("span", { class: "fs-4 fw-bold text-gray-900" }, "Total Equity", -1)), t("span", Xs, n(d(p.value.equity.total + c.value.netIncome)), 1)])])])]), t("div", Js, [t("div", Ks, [t("div", Zs, [t("div", te, [t("div", se, [t("i", { class: u(`ki-duotone ki-shield-tick fs-2x ${Y.value ? "text-success" : "text-danger"}`) }, s[38] || (s[38] = [t("span", { class: "path1" }, null, -1), t("span", { class: "path2" }, null, -1)]), 2), t("div", null, [s[39] || (s[39] = t("div", { class: "fs-4 fw-bold text-gray-900" }, "Double-Entry Verification", -1)), t("div", { class: u(`text-${Y.value ? "success" : "danger"} fw-semibold`) }, n(Y.value ? "Assets = Liabilities + Equity ✓" : "Balance sheet variance detected!"), 3), s[40] || (s[40] = t("div", { class: "text-muted fs-7" }, " Source: LedgerEntries AccountCode • No Phantom Logic ", -1))])]), t("div", ee, [s[41] || (s[41] = t("div", { class: "fs-6 text-muted" }, "Variance", -1)), t("div", { class: u(`fs-4 fw-bold text-${Math.abs(st.value) < 100 ? "success" : "danger"}`) }, n(d(st.value)), 3)])])])])])])) : M.value === "income-statement" ? (l(), o("div", ae, [t("div", ne, [s[42] || (s[42] = t("h3", { class: "card-title fw-bold" }, [t("i", { class: "ki-duotone ki-chart-line-up fs-2 text-primary me-2" }, [t("span", { class: "path1" }), t("span", { class: "path2" })]), E(" Income Statement (Profit & Loss) ")], -1)), t("div", oe, [t("span", le, n(O()), 1)])]), t("div", ie, [s[50] || (s[50] = D('<div class="alert alert-light-success d-flex align-items-center mb-6" data-v-4c7e2da5><i class="ki-duotone ki-shield-check fs-3 text-success me-2" data-v-4c7e2da5><span class="path1" data-v-4c7e2da5></span><span class="path2" data-v-4c7e2da5></span></i><div class="fs-7 text-success" data-v-4c7e2da5> All amounts from LedgerEntries table DebitAmount/CreditAmount fields - 100% schema compliant </div></div>', 1)), t("div", de, [t("div", ce, [s[43] || (s[43] = t("h4", { class: "fs-3 fw-bold text-success m-0" }, "Revenue", -1)), t("span", re, n(d(c.value.revenue.total)), 1)]), c.value.revenue.items.length > 0 ? (l(), o("div", ue, [(l(!0), o(g, null, h(c.value.revenue.items, e => (l(), o("div", { key: e.code, class: "d-flex justify-content-between align-items-center py-2" }, [t("div", null, [t("span", ve, n(e.name), 1), t("span", pe, "(" + n(e.code) + ") • LedgerEntries", 1)]), t("span", fe, n(d(e.balance)), 1)]))), 128))])) : (l(), o("div", be, " No revenue entries found in LedgerEntries for selected period "))]), t("div", me, [t("div", ge, [s[44] || (s[44] = t("h4", { class: "fs-3 fw-bold text-danger m-0" }, "Cost of Goods Sold", -1)), t("span", he, n(d(c.value.cogs.total)), 1)]), c.value.cogs.items.length > 0 ? (l(), o("div", ye, [(l(!0), o(g, null, h(c.value.cogs.items, e => (l(), o("div", { key: e.code, class: "d-flex justify-content-between align-items-center py-2" }, [t("div", null, [t("span", xe, n(e.name), 1), t("span", _e, "(" + n(e.code) + ") • LedgerEntries", 1)]), t("span", we, n(d(e.balance)), 1)]))), 128))])) : (l(), o("div", ke, " No COGS entries found in LedgerEntries for selected period "))]), t("div", De, [t("h4", Ce, " Gross " + n(c.value.grossProfit >= 0 ? "Profit" : "Loss"), 1), t("span", { class: u(`fs-2 fw-bold ${c.value.grossProfit >= 0 ? "text-primary" : "text-danger"} pe-4`) }, n(d(c.value.grossProfit)), 3)]), t("div", Se, [t("div", Ee, [s[45] || (s[45] = t("h4", { class: "fs-3 fw-bold text-warning m-0" }, "Operating Expenses", -1)), t("span", Ie, n(d(c.value.operatingExpenses.total)), 1)]), c.value.operatingExpenses.items.length > 0 ? (l(), o("div", Pe, [(l(!0), o(g, null, h(c.value.operatingExpenses.items, e => (l(), o("div", { key: e.code, class: "d-flex justify-content-between align-items-center py-2" }, [t("div", null, [t("span", Ae, n(e.name), 1), t("span", $e, "(" + n(e.code) + ") • LedgerEntries", 1)]), t("span", Le, n(d(e.balance)), 1)]))), 128))])) : (l(), o("div", Fe, " No operating expense entries found in LedgerEntries for selected period "))]), t("div", { class: u(`d-flex justify-content-between align-items-center py-4 rounded ${c.value.netIncome >= 0 ? "bg-light-success" : "bg-light-danger"}`) }, [t("h3", { class: u(`fs-1 fw-bold ${c.value.netIncome >= 0 ? "text-success" : "text-danger"} m-0 ps-4`) }, " Net " + n(c.value.netIncome >= 0 ? "Income" : "Loss"), 3), t("span", { class: u(`fs-1 fw-bold ${c.value.netIncome >= 0 ? "text-success" : "text-danger"} pe-4`) }, n(d(c.value.netIncome)), 3)], 2), t("div", Me, [t("div", Te, [t("div", je, [t("div", Be, n(et(c.value.revenue.total > 0 ? c.value.grossProfit / c.value.revenue.total * 100 : 0)) + "% ", 1), s[46] || (s[46] = t("div", { class: "text-muted fw-semibold" }, "Gross Margin", -1))]), t("div", Re, [t("div", Ve, n(et(c.value.revenue.total > 0 ? c.value.netIncome / c.value.revenue.total * 100 : 0)) + "% ", 1), s[47] || (s[47] = t("div", { class: "text-muted fw-semibold" }, "Net Margin", -1))]), t("div", Oe, [t("div", Ne, n(d(c.value.revenue.total / at())), 1), s[48] || (s[48] = t("div", { class: "text-muted fw-semibold" }, "Daily Revenue", -1))]), t("div", qe, [t("div", Ue, n(at()), 1), s[49] || (s[49] = t("div", { class: "text-muted fw-semibold" }, "Days in Period", -1))])])])])])) : M.value === "trial-balance" ? (l(), o("div", Ge, [t("div", We, [s[51] || (s[51] = t("h3", { class: "card-title fw-bold" }, [t("i", { class: "ki-duotone ki-abstract-14 fs-2 text-primary me-2" }, [t("span", { class: "path1" }), t("span", { class: "path2" })]), E(" Trial Balance (Actual Debit/Credit Totals) ")], -1)), t("div", He, [t("div", Ye, [t("span", ze, " As of " + n(Q(r.value.endDate)), 1), t("span", Qe, n(Object.keys(V.value).length) + " accounts ", 1)])])]), t("div", Xe, [s[55] || (s[55] = D('<div class="alert alert-light-success d-flex align-items-center mb-6" data-v-4c7e2da5><i class="ki-duotone ki-shield-check fs-3 text-success me-2" data-v-4c7e2da5><span class="path1" data-v-4c7e2da5></span><span class="path2" data-v-4c7e2da5></span></i><div class="fs-7 text-success" data-v-4c7e2da5> Trial Balance shows actual DebitAmount/CreditAmount totals from LedgerEntries table </div></div>', 1)), t("div", Je, [t("table", Ke, [s[53] || (s[53] = t("thead", null, [t("tr", { class: "fw-bold fs-6 text-gray-800 border-bottom-2 border-gray-200" }, [t("th", { class: "min-w-100px" }, "Account Code"), t("th", { class: "min-w-200px" }, "Account Name"), t("th", { class: "text-end min-w-120px" }, "Total Debits"), t("th", { class: "text-end min-w-120px" }, "Total Credits"), t("th", { class: "text-end min-w-100px" }, "Net Balance")])], -1)), t("tbody", null, [(l(!0), o(g, null, h(V.value, (e, i) => (l(), o("tr", { key: i, class: "border-bottom border-gray-200" }, [t("td", Ze, n(i), 1), t("td", null, n(G(i)), 1), t("td", ta, [e.debits > 0 ? (l(), o("span", sa, n(d(e.debits)), 1)) : (l(), o("span", ea, "-"))]), t("td", aa, [e.credits > 0 ? (l(), o("span", na, n(d(e.credits)), 1)) : (l(), o("span", oa, "-"))]), t("td", la, [t("span", { class: u(`${e.netBalance >= 0 ? "text-success" : "text-danger"}`) }, n(d(e.netBalance)), 3)])]))), 128))]), t("tfoot", null, [t("tr", ia, [s[52] || (s[52] = t("td", { colspan: "2", class: "fs-3 fw-bold" }, "TOTALS", -1)), t("td", da, n(d(C.value.totalDebits)), 1), t("td", ca, n(d(C.value.totalCredits)), 1), t("td", ra, [t("span", { class: u(`badge badge-light-${j.value ? "success" : "danger"} fs-6 fw-bold`) }, n(j.value ? "Balanced" : "Variance"), 3)])])])])]), t("div", ua, [t("div", { class: u(`alert ${j.value ? "alert-light-success" : "alert-light-danger"} d-flex align-items-center`) }, [t("i", { class: u(`ki-duotone ki-shield-tick fs-2 ${j.value ? "text-success" : "text-danger"} me-3`) }, s[54] || (s[54] = [t("span", { class: "path1" }, null, -1), t("span", { class: "path2" }, null, -1)]), 2), t("div", va, [t("div", pa, " Trial Balance " + n(j.value ? "Balanced ✓" : "Out of Balance ❌"), 1), t("div", fa, " Total Debits: " + n(d(C.value.totalDebits)) + " | Total Credits: " + n(d(C.value.totalCredits)) + " | Variance: " + n(d(Math.abs(C.value.totalDebits - C.value.totalCredits))), 1)])], 2)])])])) : _("", !0), t("div", ba, [t("button", { onClick: s[4] || (s[4] = e => k.value = 1), class: "btn btn-light px-6 py-3" }, s[56] || (s[56] = [t("i", { class: "ki-duotone ki-arrow-left fs-3 me-2" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1), t("span", { class: "fw-bold" }, "Back to Filters", -1)])), t("button", { onClick: s[5] || (s[5] = e => k.value = 3), class: "btn btn-primary px-6 py-3" }, s[57] || (s[57] = [t("span", { class: "fw-bold" }, "View Reconciliation", -1), t("i", { class: "ki-duotone ki-arrow-right fs-3 ms-2" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1)]))])])) : _("", !0), k.value === 3 ? (l(), o("div", ma, [s[85] || (s[85] = D('<div class="alert alert-light-primary d-flex align-items-center" data-v-4c7e2da5><i class="ki-duotone ki-information-5 fs-2 text-primary me-3" data-v-4c7e2da5><span class="path1" data-v-4c7e2da5></span><span class="path2" data-v-4c7e2da5></span><span class="path3" data-v-4c7e2da5></span></i><div data-v-4c7e2da5><div class="fw-bold" data-v-4c7e2da5>Pure Reconciliation Analysis</div><div class="text-muted" data-v-4c7e2da5> Comparing LedgerEntries (book) vs. CashDrawers &amp; StationInventory (physical) </div></div></div>', 1)), t("div", ga, [t("div", ha, [t("div", ya, [t("div", xa, [s[58] || (s[58] = D('<h3 class="card-title fw-bold text-success" data-v-4c7e2da5><i class="ki-duotone ki-dollar fs-2 me-2" data-v-4c7e2da5><span class="path1" data-v-4c7e2da5></span><span class="path2" data-v-4c7e2da5></span><span class="path3" data-v-4c7e2da5></span></i> Cash Reconciliation </h3>', 1)), t("div", _a, [t("span", { class: u(`badge badge-light-${f.value.cash.status === "balanced" ? "success" : "danger"} fs-6 fw-bold`) }, n(f.value.cash.status === "balanced" ? "Balanced" : "Variance"), 3)])]), t("div", wa, [t("div", ka, [s[59] || (s[59] = t("div", null, [t("span", { class: "text-gray-700 fw-semibold" }, "Book Balance"), t("div", { class: "text-muted fs-7" }, "LedgerEntries AccountCode 1000")], -1)), t("span", Da, n(d(f.value.cash.bookBalance)), 1)]), t("div", Ca, [t("div", null, [s[60] || (s[60] = t("span", { class: "text-gray-700 fw-semibold" }, "Physical Cash", -1)), t("div", Sa, " CashDrawers.ActualCash (" + n(f.value.cash.drawerCount) + " drawers) ", 1)]), t("span", Ea, n(d(f.value.cash.physicalCash)), 1)]), t("div", { class: u(`d-flex justify-content-between align-items-center py-3 fw-bold ${Math.abs(f.value.cash.variance) < 1e3 ? "text-success" : "text-danger"}`) }, [s[61] || (s[61] = t("span", null, "Reconciliation Variance", -1)), t("span", null, n(d(f.value.cash.variance)), 1)], 2), t("div", Ia, [t("div", Pa, " Status: " + n(Math.abs(f.value.cash.variance) < 1e3 ? "Within tolerance (< UGX 1,000)" : "Requires investigation"), 1)])])])]), t("div", Aa, [t("div", $a, [t("div", La, [s[62] || (s[62] = D('<h3 class="card-title fw-bold text-warning" data-v-4c7e2da5><i class="ki-duotone ki-package fs-2 me-2" data-v-4c7e2da5><span class="path1" data-v-4c7e2da5></span><span class="path2" data-v-4c7e2da5></span><span class="path3" data-v-4c7e2da5></span></i> Inventory Reconciliation </h3>', 1)), t("div", Fa, [t("span", { class: u(`badge badge-light-${Math.abs(f.value.inventory.variance) < 1e4 ? "success" : "warning"} fs-6 fw-bold`) }, n(Math.abs(f.value.inventory.variance) < 1e4 ? "Balanced" : "Variance"), 3)])]), t("div", Ma, [t("div", Ta, [s[63] || (s[63] = t("div", null, [t("span", { class: "text-gray-700 fw-semibold" }, "Book Value"), t("div", { class: "text-muted fs-7" }, "LedgerEntries AccountCode 1200")], -1)), t("span", ja, n(d(f.value.inventory.bookValue)), 1)]), t("div", Ba, [s[64] || (s[64] = t("div", null, [t("span", { class: "text-gray-700 fw-semibold" }, "Physical Value"), t("div", { class: "text-muted fs-7" }, "StationInventory × Products.UnitPrice")], -1)), t("span", Ra, n(d(f.value.inventory.physicalValue)), 1)]), t("div", { class: u(`d-flex justify-content-between align-items-center py-3 border-bottom border-gray-200 fw-bold ${Math.abs(f.value.inventory.variance) < 1e4 ? "text-success" : "text-danger"}`) }, [s[65] || (s[65] = t("span", null, "Reconciliation Variance", -1)), t("span", null, n(d(f.value.inventory.variance)), 1)], 2), t("div", Va, [s[66] || (s[66] = t("div", null, [t("span", { class: "text-gray-700 fw-semibold" }, "Expected Profit"), t("div", { class: "text-muted fs-7" }, "Physical stock × profit margin")], -1)), t("span", { class: u(`fw-bold ${f.value.inventory.expectedProfit >= 0 ? "text-success" : "text-danger"}`) }, n(d(f.value.inventory.expectedProfit)), 3)]), t("div", Oa, [t("div", Na, " ✓ Complete pricing mechanism: " + n(f.value.inventory.itemCount) + " items valued at selling prices ", 1)])])])])]), t("div", qa, [t("div", Ua, [s[67] || (s[67] = D('<h3 class="card-title fw-bold" data-v-4c7e2da5><i class="ki-duotone ki-chart-pie-simple fs-2 text-primary me-2" data-v-4c7e2da5><span class="path1" data-v-4c7e2da5></span><span class="path2" data-v-4c7e2da5></span><span class="path3" data-v-4c7e2da5></span></i> Financial Performance Analysis </h3>', 1)), t("div", Ga, [t("span", Wa, n(O()), 1)])]), t("div", Ha, [t("div", Ya, [t("div", za, [t("div", Qa, [t("div", Xa, n(I.value.grossMargin) + "%", 1), s[68] || (s[68] = t("div", { class: "text-muted fw-semibold" }, "Gross Margin", -1)), s[69] || (s[69] = t("div", { class: "fs-8 text-muted mt-1" }, "From LedgerEntries Only", -1))])]), t("div", Ja, [t("div", Ka, [t("div", { class: u(`fs-2 fw-bold ${parseFloat(I.value.netMargin) >= 0 ? "text-primary" : "text-danger"}`) }, n(I.value.netMargin) + "% ", 3), s[70] || (s[70] = t("div", { class: "text-muted fw-semibold" }, "Net Margin", -1)), s[71] || (s[71] = t("div", { class: "fs-8 text-muted mt-1" }, "From LedgerEntries Only", -1))])]), t("div", Za, [t("div", tn, [t("div", { class: u(`fs-2 fw-bold ${parseFloat(I.value.currentRatio) >= 1 ? "text-warning" : "text-danger"}`) }, n(I.value.currentRatio), 3), s[72] || (s[72] = t("div", { class: "text-muted fw-semibold" }, "Current Ratio", -1)), s[73] || (s[73] = t("div", { class: "fs-8 text-muted mt-1" }, "From LedgerEntries Only", -1))])]), t("div", sn, [t("div", en, [t("div", { class: u(`fs-2 fw-bold ${parseFloat(I.value.debtRatio) <= 50 ? "text-info" : "text-warning"}`) }, n(I.value.debtRatio) + "% ", 3), s[74] || (s[74] = t("div", { class: "text-muted fw-semibold" }, "Debt Ratio", -1)), s[75] || (s[75] = t("div", { class: "fs-8 text-muted mt-1" }, "From LedgerEntries Only", -1))])])]), t("div", an, [s[82] || (s[82] = t("h4", { class: "fs-3 fw-bold text-gray-900 mb-6" }, [t("i", { class: "ki-duotone ki-chart-line-up fs-2 text-success me-2" }, [t("span", { class: "path1" }), t("span", { class: "path2" })]), E(" Inventory Profit Analysis ")], -1)), t("div", nn, [t("div", on, [t("div", ln, [t("div", dn, [t("div", cn, n(d(f.value.inventory.physicalValue)), 1), s[76] || (s[76] = t("div", { class: "text-muted fw-semibold mt-2" }, "Physical Inventory Value", -1)), s[77] || (s[77] = t("div", { class: "fs-8 text-muted" }, "CurrentStock × Products.UnitPrice", -1))])])]), t("div", rn, [t("div", un, [t("div", vn, [t("div", { class: u(`fs-1 fw-bold ${f.value.inventory.expectedProfit >= 0 ? "text-warning" : "text-danger"}`) }, n(d(f.value.inventory.expectedProfit)), 3), s[78] || (s[78] = t("div", { class: "text-muted fw-semibold mt-2" }, "Expected Profit", -1)), s[79] || (s[79] = t("div", { class: "fs-8 text-muted" }, "(Selling - Cost) × Stock", -1))])])]), t("div", pn, [t("div", fn, [t("div", bn, [t("div", mn, n(f.value.inventory.physicalValue > 0 ? (f.value.inventory.expectedProfit / f.value.inventory.physicalValue * 100).toFixed(1) : "0.0") + "% ", 1), s[80] || (s[80] = t("div", { class: "text-muted fw-semibold mt-2" }, "Profit Margin", -1)), s[81] || (s[81] = t("div", { class: "fs-8 text-muted" }, "Expected Profit / Physical Value", -1))])])])])]), s[83] || (s[83] = D('<div class="mt-6 p-4 bg-light-success rounded" data-v-4c7e2da5><div class="row g-4" data-v-4c7e2da5><div class="col-12" data-v-4c7e2da5><h5 class="fw-bold text-success mb-3" data-v-4c7e2da5>100% Database Schema Compliance ✓</h5></div><div class="col-12 col-md-6" data-v-4c7e2da5><div class="d-flex align-items-center gap-2" data-v-4c7e2da5><i class="ki-duotone ki-check-circle fs-4 text-success" data-v-4c7e2da5><span class="path1" data-v-4c7e2da5></span><span class="path2" data-v-4c7e2da5></span></i><span class="text-gray-700" data-v-4c7e2da5>Single source: LedgerEntries table only</span></div></div><div class="col-12 col-md-6" data-v-4c7e2da5><div class="d-flex align-items-center gap-2" data-v-4c7e2da5><i class="ki-duotone ki-check-circle fs-4 text-success" data-v-4c7e2da5><span class="path1" data-v-4c7e2da5></span><span class="path2" data-v-4c7e2da5></span></i><span class="text-gray-700" data-v-4c7e2da5>Exact field names: DebitAmount, CreditAmount</span></div></div><div class="col-12 col-md-6" data-v-4c7e2da5><div class="d-flex align-items-center gap-2" data-v-4c7e2da5><i class="ki-duotone ki-check-circle fs-4 text-success" data-v-4c7e2da5><span class="path1" data-v-4c7e2da5></span><span class="path2" data-v-4c7e2da5></span></i><span class="text-gray-700" data-v-4c7e2da5>Complete pricing: Products.UnitPrice + InventoryHistory.UnitPrice</span></div></div><div class="col-12 col-md-6" data-v-4c7e2da5><div class="d-flex align-items-center gap-2" data-v-4c7e2da5><i class="ki-duotone ki-check-circle fs-4 text-success" data-v-4c7e2da5><span class="path1" data-v-4c7e2da5></span><span class="path2" data-v-4c7e2da5></span></i><span class="text-gray-700" data-v-4c7e2da5>Expected profit calculations from actual cost data</span></div></div></div></div>', 1))])]), t("div", gn, [t("button", { onClick: s[6] || (s[6] = e => k.value = 2), class: "btn btn-light px-6 py-3" }, s[84] || (s[84] = [t("i", { class: "ki-duotone ki-arrow-left fs-3 me-2" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1), t("span", { class: "fw-bold" }, "Back to Statements", -1)]))])])) : _("", !0)])) } }, _n = ft(hn, [["__scopeId", "data-v-4c7e2da5"]]); export { _n as default };
