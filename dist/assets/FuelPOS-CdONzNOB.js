import { _ as Pe, r as d, a as Fe, c as O, o as Te, d as i, e as t, g as u, t as l, i as w, h as S, f as J, w as it, v as rt, F as j, k as q, S as _, p as r, y as $e } from "./index-Fk_fMhvq.js"; const Ae = { class: "d-flex flex-column min-vh-100 bg-light" }, Ne = { class: "card border-0 rounded-0 bg-gradient-primary shadow-sm" }, Oe = { class: "card-body px-4 py-4" }, Le = { class: "d-flex align-items-center justify-content-between mb-3" }, Re = { class: "d-flex align-items-center gap-3" }, Be = { class: "text-white opacity-75 fs-7 mb-0" }, Me = { class: "row g-3" }, Ee = { class: "col-3" }, Ue = { class: "card bg-white bg-opacity-20 border-0 text-center" }, Qe = { class: "card-body p-3" }, je = { class: "fw-bold text-white fs-6" }, qe = { class: "col-3" }, Ve = { class: "card bg-white bg-opacity-20 border-0 text-center" }, ze = { class: "card-body p-3" }, Je = { class: "fw-bold text-white fs-6" }, He = { class: "col-3" }, Ge = { class: "card bg-white bg-opacity-20 border-0 text-center" }, Xe = { class: "card-body p-3" }, We = { class: "fw-bold text-white fs-6" }, Ke = { class: "col-3" }, Ye = { class: "card bg-white bg-opacity-20 border-0 text-center" }, Ze = { class: "card-body p-3" }, ts = { class: "fw-bold text-white fs-6" }, es = { class: "card border-0 shadow-sm mb-3" }, ss = { class: "card-body p-4" }, as = { class: "row g-3 mb-3" }, os = { class: "col-6" }, ns = { class: "col-6" }, ls = { key: 0 }, is = { class: "position-relative mb-3" }, rs = ["disabled"], cs = { key: 0, class: "position-absolute top-50 end-0 translate-middle-y me-3" }, ds = { key: 0, class: "card bg-light-success border-success mb-3" }, us = { class: "card-body p-3" }, vs = { class: "d-flex align-items-center justify-content-between" }, ps = { class: "fw-bold text-success fs-5" }, fs = { class: "fs-7 text-success opacity-75" }, bs = { key: 0, class: "fs-7 text-success" }, ms = { class: "ms-2" }, hs = { key: 1, class: "card border-info mb-3" }, gs = { class: "card-body p-0 max-h-250px overflow-auto" }, ys = ["onClick"], ws = { class: "d-flex align-items-center justify-content-between" }, xs = { class: "fw-bold fs-6" }, ks = { class: "fs-8 text-gray-500" }, Cs = { key: 0, class: "fs-8 text-info" }, _s = { class: "card border-0 shadow-sm mb-3" }, Ss = { class: "card-body p-4" }, Is = { class: "fw-bold text-gray-800 mb-3" }, Ds = { key: 0, class: "text-center py-5" }, Ps = { key: 1, class: "row g-3" }, Fs = ["onClick"], Ts = { key: 0, class: "position-absolute top-0 start-0 w-100 h-100 d-flex align-items-center justify-content-center bg-danger bg-opacity-90 rounded z-1" }, $s = { class: "card-body p-3 text-center d-flex flex-column" }, As = { class: "mb-3" }, Ns = { class: "flex-grow-1 d-flex flex-column justify-content-between" }, Os = { class: "fw-bold text-gray-800 mb-2 fs-6" }, Ls = { class: "fw-bold text-success fs-4 mb-2" }, Rs = { class: "fs-8 text-gray-500 mb-2" }, Bs = { class: "mt-auto" }, Ms = { key: 0, class: "mb-2" }, Es = { class: "fs-8 text-info" }, Us = { class: "fs-8 text-warning" }, Qs = { class: "fs-8 text-primary" }, js = { key: 1, class: "mb-2" }, qs = { class: "fs-8 text-info" }, Vs = { key: 0, class: "position-absolute top-0 end-0 mt-2 me-2" }, zs = { class: "badge badge-circle badge-success fs-7 fw-bold w-25px h-25px d-flex align-items-center justify-content-center" }, Js = { key: 0, class: "modal d-block", style: { background: "rgba(0, 0, 0, 0.7)" }, tabindex: "-1" }, Hs = { class: "modal-dialog modal-lg modal-dialog-centered" }, Gs = { class: "modal-content border-0 shadow-lg" }, Xs = { class: "modal-header bg-gradient-primary border-0" }, Ws = { class: "modal-title fw-bold text-white" }, Ks = { class: "modal-body p-4" }, Ys = { key: 0, class: "mb-4" }, Zs = { class: "row g-3" }, ta = ["onClick"], ea = { class: "card-body p-3 text-center" }, sa = { class: "fw-bold text-gray-800 fs-5" }, aa = { class: "fs-7 text-gray-600" }, oa = { class: "fs-7 text-success" }, na = { class: "mt-2" }, la = { class: "progress", style: { height: "8px" } }, ia = { key: 1, class: "mb-4" }, ra = { class: "fw-bold text-gray-800 mb-3" }, ca = { class: "row g-3" }, da = ["onClick"], ua = { class: "card-body p-3 text-center" }, va = { class: "fw-bold text-gray-800 fs-5" }, pa = { class: "fs-6 fw-bold text-warning" }, fa = { class: "mt-2" }, ba = { key: 2, class: "mb-4" }, ma = { class: "row g-3 mb-3" }, ha = { class: "col-6" }, ga = { class: "card bg-light-info" }, ya = { class: "card-body p-3 text-center" }, wa = { class: "fw-bold text-info fs-5" }, xa = { class: "fs-7 text-info" }, ka = { class: "col-6" }, Ca = { class: "card bg-light-warning" }, _a = { class: "card-body p-3 text-center" }, Sa = { class: "fw-bold text-warning fs-5" }, Ia = { class: "fs-7 text-warning" }, Da = ["max"], Pa = { key: 0, class: "mt-3 alert alert-danger" }, Fa = { class: "row g-2 mt-3" }, Ta = ["onClick"], $a = { key: 1, class: "mt-4 card bg-light-success border-success" }, Aa = { class: "card-body p-3" }, Na = { class: "d-flex justify-content-between mb-1" }, Oa = { class: "fw-bold" }, La = { class: "d-flex justify-content-between mb-1" }, Ra = { class: "fw-bold" }, Ba = { class: "d-flex justify-content-between mb-2" }, Ma = { class: "fw-bold text-success fs-4" }, Ea = { class: "fs-8 text-gray-600" }, Ua = { class: "d-flex gap-2" }, Qa = ["disabled"], ja = ["disabled"], qa = { key: 1, class: "card border-0 shadow-lg mb-3" }, Va = { class: "card-body p-4" }, za = { class: "d-flex align-items-center justify-content-between mb-3" }, Ja = { class: "fw-bold text-gray-800 mb-0" }, Ha = { class: "d-flex gap-2" }, Ga = { key: 0, class: "mb-3" }, Xa = { class: "card-body p-3" }, Wa = { class: "d-flex align-items-center gap-3" }, Ka = { class: "flex-grow-1" }, Ya = { class: "fw-bold text-gray-800 fs-6 mb-1" }, Za = { class: "fs-8 text-gray-500" }, to = { key: 0, class: "fs-8 text-info" }, eo = { class: "d-flex align-items-center gap-2" }, so = ["onClick"], ao = { class: "fw-bold fs-5 text-center", style: { "min-width": "50px" } }, oo = ["onClick"], no = { class: "text-end" }, lo = { class: "fw-bold text-success fs-5" }, io = ["onClick"], ro = { class: "card bg-light-primary border-primary" }, co = { class: "card-body p-3" }, uo = { class: "d-flex justify-content-between align-items-center mb-2" }, vo = { class: "fw-bold fs-6" }, po = { class: "d-flex justify-content-between align-items-center mb-2" }, fo = { class: "text-gray-700 fs-6" }, bo = { class: "fw-bold fs-6" }, mo = { class: "d-flex justify-content-between align-items-center mb-3" }, ho = { class: "fw-bold text-success fs-3" }, go = { key: 0, class: "mb-3" }, yo = { key: 0, class: "alert alert-warning py-2" }, wo = ["disabled"], xo = { key: 2, class: "modal d-block", style: { background: "rgba(0, 0, 0, 0.6)" }, tabindex: "-1" }, ko = { class: "modal-dialog modal-lg modal-dialog-centered" }, Co = { class: "modal-content border-0 shadow-lg" }, _o = { class: "modal-body p-4" }, So = { class: "card bg-light-success text-center mb-4" }, Io = { class: "card-body p-4" }, Do = { class: "fw-bold text-success", style: { "font-size": "2.5rem" } }, Po = { key: 0, class: "fs-8 text-gray-600 mt-2" }, Fo = { class: "row g-3 mb-4" }, To = { class: "col-4" }, $o = { class: "col-4" }, Ao = { class: "col-4" }, No = { key: 0, class: "mb-4" }, Oo = { key: 0, class: "mt-3 card bg-light-success border-success" }, Lo = { class: "card-body p-3" }, Ro = { class: "d-flex justify-content-between align-items-center" }, Bo = { class: "text-success fw-bold fs-3" }, Mo = { key: 1, class: "mt-3 card bg-light-danger border-danger" }, Eo = { class: "card-body p-3" }, Uo = { class: "d-flex justify-content-between align-items-center" }, Qo = { class: "text-danger fw-bold fs-3" }, jo = { class: "row g-2 mt-3" }, qo = ["onClick"], Vo = { key: 1, class: "mb-4" }, zo = ["placeholder"], Jo = { key: 0, class: "mt-2 text-danger fs-7" }, Ho = ["disabled"], Go = { key: 0, class: "d-flex align-items-center justify-content-center" }, Xo = { key: 1, class: "d-flex align-items-center justify-content-center" }, Wo = { key: 3, class: "modal d-block", style: { background: "rgba(0, 0, 0, 0.6)" }, tabindex: "-1" }, Ko = { class: "modal-dialog modal-lg modal-dialog-centered" }, Yo = { class: "modal-content border-0 shadow-lg" }, Zo = { class: "modal-body p-4" }, tn = { key: 0, class: "card bg-light-success border-success mb-4" }, en = { class: "card-body p-3" }, sn = { class: "row g-3" }, an = { class: "col-6" }, on = { class: "d-flex justify-content-between" }, nn = { class: "fw-bold" }, ln = { class: "col-6" }, rn = { class: "d-flex justify-content-between" }, cn = { class: "fw-bold" }, dn = { class: "col-6" }, un = { class: "d-flex justify-content-between" }, vn = { class: "fw-bold" }, pn = { class: "col-6" }, fn = { class: "d-flex justify-content-between" }, bn = { class: "row g-3" }, mn = { key: 0, class: "col-12" }, hn = { key: 1, class: "col-6" }, gn = { key: 2, class: "col-6" }, yn = "https://backend.cloudfuelstationmis.com/api/records/v1", wn = 18, xn = {
  __name: "FuelPOS", setup(kn) {
    const F = d({}), wt = d(""), x = d({}), Y = d([]), xt = d([]), kt = d([]), H = d(!1), Z = d(!1), G = d(!1), tt = d([]), et = d([]), st = d([]), ct = d(new Map); d([]); const dt = d(!1), X = d(!1), ut = d(!1), M = d(!0), D = d("walk-in"), v = d(null), V = d(""), E = d([]); let vt = null; const L = d(null), h = d(null), T = d(null), P = d(1), g = d(0), at = d([]), ot = d([]), b = d([]), pt = d(wn), I = d("Cash"), C = d(0), $ = d(""), f = d(null), R = Fe({ transactions: 0, revenue: 0, customers: 0, fuelDispensed: 0 }), nt = O(() => b.value.reduce((s, e) => s + parseFloat(e.total || 0), 0)), lt = O(() => nt.value * (pt.value / 100)), y = O(() => nt.value + lt.value), Lt = O(() => { if (!f.value || f.value.Status !== "Open" || !b.value.length) return !1; if (D.value === "credit") { if (!v.value) return !1; if (v.value.creditAccount) { const s = parseFloat(v.value.creditAccount.AvailableCredit || 0); return y.value <= s } return !1 } return !0 }), Rt = O(() => { if (!b.value.length || G.value || D.value === "credit" && !v.value) return !1; switch (I.value) { case "Cash": return C.value >= y.value && C.value > 0; case "Card": case "Mobile Money": return $.value.trim().length >= 3; default: return !1 } }), Bt = O(() => { switch (P.value) { case 1: return h.value !== null; case 2: return T.value !== null; default: return !1 } }), Ct = O(() => { var s; return g.value > 0 && g.value <= parseFloat(((s = h.value) == null ? void 0 : s.CurrentLevel) || 0) && h.value && T.value }), Mt = O(() => { var s; return g.value === 0 ? "" : g.value > parseFloat(((s = h.value) == null ? void 0 : s.CurrentLevel) || 0) ? "border-danger" : "border-success" }), Et = O(() => C.value === 0 ? "" : C.value >= y.value ? "border-success" : C.value < y.value ? "border-warning" : ""), Ut = O(() => $.value ? $.value.length >= 3 ? "border-success" : "border-danger" : ""), Qt = () => { try { const s = localStorage.getItem("kigrama_user_data"), e = localStorage.getItem("kigrama_auth_token"); if (!s || !e) throw new Error("No authentication data found"); const a = JSON.parse(s); return F.value = a.user || {}, wt.value = e, Y.value = a.stations || [], xt.value = a.roles || [], kt.value = a.permissions || [], Y.value.length > 0 && (x.value = Y.value.find(o => o.IsPrimary === "1") || Y.value[0]), console.log("✅ Auth data loaded:", { user: F.value.name, station: x.value.StationName, roles: xt.value.length, permissions: kt.value.length }), !0 } catch (s) { return console.error("❌ Failed to load auth data:", s), !1 } }, jt = () => ({ "Content-Type": "application/json", Authorization: `Bearer ${wt.value}` }), k = async (s, e = {}) => { try { console.log(`🌐 API Call: ${e.method || "GET"} ${s}`); const a = await fetch(`${yn}${s}`, { headers: jt(), ...e }); if (!a.ok) { const c = await a.text().catch(() => "Unknown error"); throw console.error(`❌ API Error ${a.status}:`, c), new Error(`API Error: ${a.status} ${a.statusText} - ${c}`) } const o = await a.text(); if (console.log("📄 Raw response:", o.substring(0, 200) + (o.length > 200 ? "..." : "")), !o.trim()) return console.log("✅ Empty response (success)"), { success: !0 }; const n = JSON.parse(o); return console.log("✅ Parsed response:", n), n } catch (a) { throw console.error(`❌ API call failed for ${s}:`, a), a } }, U = s => { if (!(s != null && s.ProductType)) return !1; const e = s.ProductType.toLowerCase(); return e === "fuel" || e.includes("petrol") || e.includes("diesel") || e.includes("gasoline") || e.includes("kerosene") }, qt = s => { if (!s) return "ki-cube-2"; const e = s.toLowerCase(); return e.includes("fuel") || e.includes("petrol") || e.includes("diesel") ? "ki-oil-barrel" : e.includes("lubricant") || e.includes("oil") ? "ki-oil" : e.includes("gas") || e.includes("lpg") ? "ki-gas-station" : e.includes("service") ? "ki-wrench" : "ki-cube-2" }, Vt = s => { if (!s) return "text-gray-400"; const e = s.toLowerCase(); return e.includes("fuel") || e.includes("petrol") || e.includes("diesel") ? "text-success" : e.includes("lubricant") || e.includes("oil") ? "text-info" : e.includes("gas") || e.includes("lpg") ? "text-warning" : e.includes("service") ? "text-primary" : "text-gray-400" }, W = s => parseFloat(s.SellingPrice || s.UnitPrice || 0), A = s => U(s) ? et.value.filter(a => a.ProductID === s.ProductID && a.StationID === x.value.StationID && a.Status === "Active").reduce((a, o) => a + parseFloat(o.CurrentLevel || 0), 0) : parseFloat(ct.value.get(s.ProductID) || 0), ft = s => et.value.filter(e => e.ProductID === s.ProductID && e.StationID === x.value.StationID && e.Status === "Active"), zt = s => { const a = ft(s).map(o => o.TankID); return st.value.filter(o => a.includes(o.TankID) && o.Status === "Active") }, Jt = s => { const e = parseFloat(s) || 0; return e <= 0 ? "badge-danger" : e <= 100 ? "badge-warning" : e <= 500 ? "badge-info" : "badge-success" }, Ht = s => { const e = A(s), a = mt(s.ProductID) > 0; return e <= 0 ? "border-danger bg-light-danger" : a ? "border-primary bg-light-primary" : "bg-white hover-elevate-up" }, Gt = (s, e) => U(s) ? N(e) : Nt(e), _t = async () => { try { const e = (await k("/Products")).records || []; tt.value = e.filter(a => a.Status === "Active" && a.Name && a.ProductType && (parseFloat(a.UnitPrice) > 0 || parseFloat(a.SellingPrice) > 0)).sort((a, o) => a.Name.localeCompare(o.Name)), console.log(`✅ Loaded ${tt.value.length} products`) } catch (s) { throw console.error("❌ Failed to load products:", s), s } }, St = async () => { try { const s = await k(`/Tanks?StationID=${x.value.StationID}`); et.value = (s.records || []).filter(a => a.StationID === x.value.StationID && a.Status === "Active"); const e = await k(`/Pumps?StationID=${x.value.StationID}`); st.value = (e.records || []).filter(a => a.StationID === x.value.StationID && a.Status === "Active"), console.log(`✅ Loaded ${et.value.length} tanks and ${st.value.length} pumps`) } catch (s) { throw console.error("❌ Failed to load tanks and pumps:", s), s } }, It = async () => { try { const e = (await k(`/StationInventory?StationID=${x.value.StationID}`)).records || []; ct.value.clear(), e.forEach(a => { a.StationID === x.value.StationID && ct.value.set(a.ProductID, parseFloat(a.CurrentStock || 0)) }), console.log(`✅ Loaded inventory for ${e.length} products`) } catch (s) { throw console.error("❌ Failed to load station inventory:", s), s } }, Dt = async () => { try { const s = new Date().toISOString().split("T")[0], a = (await k(`/Transactions?StationID=${x.value.StationID}&TransactionDate=${s}&Status=Completed`)).records || []; R.transactions = a.length, R.revenue = a.reduce((n, c) => n + parseFloat(c.TotalAmount || 0), 0), R.customers = new Set(a.map(n => n.CustomerID).filter(Boolean)).size; let o = 0; for (const n of a) try { const m = (await k(`/TransactionItems?TransactionID=${n.TransactionID}`)).records || []; o += m.filter(Q => Q.TankID).reduce((Q, B) => Q + parseFloat(B.Quantity || 0), 0) } catch { } R.fuelDispensed = o, console.log("✅ Today stats loaded:", R) } catch (s) { console.error("❌ Failed to load today stats:", s) } }, Pt = async () => { var s; try { const e = new Date().toISOString().split("T")[0], o = (await k(`/CashDrawers?StationID=${x.value.StationID}&ShiftDate=${e}&Status=Open`)).records || []; f.value = o.find(n => n.AttendantID === F.value.id || n.Status === "Open") || null, console.log("✅ Current cash drawer:", ((s = f.value) == null ? void 0 : s.DrawerID) || "None") } catch (e) { console.error("❌ Failed to load cash drawer:", e) } }, bt = s => { D.value = s, s === "walk-in" && (v.value = null, V.value = "", E.value = []) }, Ft = () => { bt("walk-in") }, Xt = () => { v.value = null, V.value = "", E.value = [] }, z = s => s ? s.CompanyName || `${s.FirstName || ""} ${s.LastName || ""}`.trim() || s.CustomerCode || "Unknown Customer" : "", Wt = () => { vt && clearTimeout(vt), vt = setTimeout(() => { Kt() }, 500) }, Kt = async () => { try { const s = V.value.trim(); if (!s || s.length < 2) { E.value = []; return } Z.value = !0; const a = (await k("/Customers")).records || []; E.value = a.filter(o => [o.CompanyName, o.FirstName, o.LastName, o.PhoneNumber, o.CustomerCode, o.Email].filter(Boolean).join(" ").toLowerCase().includes(s.toLowerCase())).slice(0, 10); for (const o of E.value) try { const c = (await k(`/CustomerCreditAccounts?CustomerID=${o.CustomerID}`)).records || []; o.creditAccount = c.find(m => m.StationID === x.value.StationID || m.StationID === null) } catch { o.creditAccount = null } } catch (s) { console.error("❌ Customer search failed:", s) } finally { Z.value = !1 } }, Yt = s => { v.value = s, E.value = [], V.value = z(s) }, Zt = s => { if (A(s) <= 0) { _.fire({ title: "Out of Stock", text: `${s.Name} is currently out of stock`, icon: "warning", toast: !0, position: "top-end", timer: 2e3, showConfirmButton: !1 }); return } U(s) ? te(s) : re(s) }, te = s => { if (L.value = s, at.value = ft(s).filter(e => parseFloat(e.CurrentLevel) > 0), at.value.length === 0) { _.fire({ title: "No Available Tanks", text: `No tanks with ${s.Name} are currently available`, icon: "warning" }); return } h.value = null, T.value = null, P.value = 1, g.value = 0, ot.value = [], dt.value = !0 }, Tt = () => { dt.value = !1, L.value = null, h.value = null, T.value = null, P.value = 1, g.value = 0, at.value = [], ot.value = [] }, ee = s => { h.value = s, T.value = null, ot.value = st.value.filter(e => e.TankID === s.TankID && e.Status === "Active") }, se = s => { T.value = s }, ae = () => { P.value < 3 && P.value++ }, oe = () => { P.value > 1 && P.value-- }, ne = () => { const s = h.value ? parseFloat(h.value.CurrentLevel) : 0; g.value > s && (g.value = s), g.value < 0 && (g.value = 0) }, le = () => { const s = h.value ? parseFloat(h.value.CurrentLevel) : 0; return [5, 10, 20, 50, 100, 200].filter(a => a <= s).slice(0, 6) }, ie = () => { if (!Ct.value) return; const s = W(L.value), e = g.value * s; b.value.push({ product: { ...L.value }, quantity: g.value, unitPrice: s, total: e, tankInfo: { ...h.value }, pumpInfo: { ...T.value }, isFuel: !0 }), _.fire({ title: "Added to Cart", text: `${g.value}L of ${L.value.Name} added`, icon: "success", toast: !0, position: "top-end", timer: 2e3, showConfirmButton: !1 }), Tt() }, re = s => { const e = b.value.findIndex(a => a.product.ProductID === s.ProductID && !a.isFuel); if (e >= 0) { const a = b.value[e].quantity, o = A(s), n = Math.min(a + 1, o); n > a && ht(e, n) } else { const a = W(s), o = 1, n = a * o; b.value.push({ product: { ...s }, quantity: o, unitPrice: a, total: n, isFuel: !1 }) } }, mt = s => { const e = b.value.find(a => a.product.ProductID === s); return e ? e.quantity : 0 }, ht = (s, e) => { if (s < 0 || s >= b.value.length) return; const a = b.value[s], o = U(a.product) ? a.tankInfo ? parseFloat(a.tankInfo.CurrentLevel) : 0 : A(a.product), n = Math.max(0, Math.min(e, o)); if (n <= 0) { $t(s); return } a.quantity = n, a.total = a.unitPrice * n }, $t = s => { s >= 0 && s < b.value.length && (b.value.splice(s, 1), b.value.length === 0 && (M.value = !1, X.value = !1)) }, ce = async () => { if (b.value.length === 0) return; (await _.fire({ title: "Clear Cart?", text: `Remove all ${b.value.length} items from cart?`, icon: "question", showCancelButton: !0, confirmButtonText: "Yes, Clear", cancelButtonText: "Cancel", confirmButtonColor: "#f1416c", cancelButtonColor: "#6c757d" })).isConfirmed && (b.value = [], M.value = !1, X.value = !1, _.fire({ title: "Cart Cleared", icon: "success", toast: !0, position: "top-end", timer: 1500, showConfirmButton: !1 })) }, de = () => { M.value = !M.value }, ue = () => { b.value.length !== 0 && (X.value = !0) }, At = () => { X.value = !1, I.value = "Cash", C.value = 0, $.value = "" }, gt = s => { I.value = s, s === "Cash" ? ($.value = "", C.value = 0) : (C.value = 0, $.value = "") }, ve = () => { switch (I.value) { case "Card": return "Enter card transaction reference"; case "Mobile Money": return "Enter mobile money reference"; default: return "Enter reference number" } }, pe = () => { C.value < 0 && (C.value = 0) }, fe = () => { const s = y.value, e = [], a = Math.ceil(s / 1e3) * 1e3; return e.push(a), s <= 1e4 ? e.push(5e3, 1e4, 2e4) : s <= 5e4 ? e.push(5e4, 1e5) : e.push(1e5, 2e5, 5e5), [...new Set(e)].sort((o, n) => o - n).slice(0, 6) }, be = async () => {
      var e, a; G.value = !0; let s = null; try {
        console.log("🚀 Starting sale processing..."), console.log("📊 Sale summary:", { items: b.value.length, subtotal: nt.value, tax: lt.value, total: y.value, customer: D.value, payment: I.value, station: x.value.StationID, user: F.value.id }), console.log("🔍 Validating inventory availability..."); for (const c of b.value) if (c.isFuel) { const m = parseFloat(c.tankInfo.CurrentLevel); if (c.quantity > m) throw new Error(`Insufficient fuel in ${c.tankInfo.TankName}. Need: ${c.quantity}L, Available: ${m}L`); console.log(`✅ Fuel validation: ${c.product.Name} - ${c.quantity}L <= ${m}L`) } else { const m = A(c.product); if (c.quantity > m) throw new Error(`Insufficient stock for ${c.product.Name}. Need: ${c.quantity}, Available: ${m}`); console.log(`✅ Stock validation: ${c.product.Name} - ${c.quantity} <= ${m}`) } if (D.value === "credit" && v.value) if (console.log("💳 Validating customer credit..."), v.value.creditAccount) { const c = parseFloat(v.value.creditAccount.AvailableCredit || 0); if (y.value > c) throw new Error(`Insufficient credit. Need: ${p(y.value)}, Available: ${p(c)}`); console.log(`✅ Credit validation: ${p(y.value)} <= ${p(c)}`) } else throw new Error(`Customer ${z(v.value)} has no credit account`); console.log("📝 Creating main transaction..."); const o = { StationID: x.value.StationID, TransactionDate: new Date().toISOString(), TransactionType: "Sale", ReferenceParty: v.value ? z(v.value) : "Walk-in Customer", TotalAmount: y.value.toFixed(2), TaxAmount: lt.value.toFixed(2), PaymentMethod: I.value, PaymentReference: $.value || `POS-${Date.now()}`, PaymentStatus: "Paid", InvoiceNumber: ye(), Status: "Completed", HandledBy: F.value.id, CustomerID: ((e = v.value) == null ? void 0 : e.CustomerID) || null, IsCreditSale: D.value === "credit" ? "1" : "0", OutstandingAmount: D.value === "credit" ? y.value.toFixed(2) : "0.00", Notes: `POS Sale - ${I.value}`, CreatedAt: new Date().toISOString(), UpdatedAt: new Date().toISOString() }; console.log("📤 Transaction data to send:", o); const n = await k("/Transactions", { method: "POST", body: JSON.stringify(o) }); if (s = ((a = n.ids) == null ? void 0 : a[0]) || n.TransactionID || n.id, console.log("🔍 Transaction response:", n), console.log("🔍 Extracted transaction ID:", s), !s) throw console.error("❌ Failed to extract transaction ID from response:", n), new Error("Failed to create transaction - no ID returned from server"); console.log("🛒 Creating transaction items..."); for (const [c, m] of b.value.entries()) { const Q = { TransactionID: s, ProductID: m.product.ProductID, Quantity: m.quantity.toString(), UnitPrice: m.unitPrice.toFixed(2), SellingPrice: m.unitPrice.toFixed(2), TaxRate: pt.value.toString(), Subtotal: m.total.toFixed(2), PumpID: m.isFuel ? m.pumpInfo.PumpID : null, TankID: m.isFuel ? m.tankInfo.TankID : null, CreatedAt: new Date().toISOString() }; console.log(`📦 Creating item ${c + 1}/${b.value.length}:`, Q); const B = await k("/TransactionItems", { method: "POST", body: JSON.stringify(Q) }); console.log(`✅ Item ${c + 1} created:`, B) } console.log("📦 Updating inventory levels..."), await me(b.value, s), I.value === "Cash" && f.value && (console.log("💰 Updating cash drawer..."), await he(y.value)), D.value === "credit" && v.value && (console.log("💳 Processing customer credit..."), await ge(v.value, y.value)), await _.fire({
          title: "Sale Completed!", html: `
        <div class="text-center">
          <div class="fs-2 fw-bold text-success mb-2">${p(y.value)}</div>
          <div class="text-gray-600 mb-2">${I.value} Payment</div>
          <div class="fs-8 text-gray-500">Transaction #${s}</div>
        </div>
      `, icon: "success", confirmButtonText: "Continue", timer: 3e3
        }), b.value = [], M.value = !1, At(), Ft(), await Ot()
      } catch (o) { if (console.error("❌ Sale processing failed:", o), await _.fire({ title: "Sale Failed", text: o.message || "An error occurred while processing the sale", icon: "error" }), s) { console.log("🔄 Rolling back transaction:", s); try { await k(`/Transactions/${s}`, { method: "PATCH", body: JSON.stringify({ Status: "Cancelled", Notes: `Transaction cancelled due to error: ${o.message}`, UpdatedAt: new Date().toISOString() }) }), console.log("✅ Transaction rolled back successfully") } catch (n) { console.error("❌ Failed to rollback transaction:", n) } } } finally { G.value = !1 }
    }, me = async (s, e) => { var a; console.log("🔄 Starting inventory updates for transaction:", e); for (const [o, n] of s.entries()) try { if (console.log(`📦 Updating item ${o + 1}/${s.length}:`, { product: n.product.Name, quantity: n.quantity, isFuel: n.isFuel }), n.isFuel) { console.log("⛽ Updating fuel systems..."); const B = Math.max(0, parseFloat(n.tankInfo.CurrentLevel) - n.quantity); console.log(`🛢️ Tank ${n.tankInfo.TankName}: ${n.tankInfo.CurrentLevel}L → ${B}L`), await k(`/Tanks/${n.tankInfo.TankID}`, { method: "PATCH", body: JSON.stringify({ CurrentLevel: B.toFixed(2), UpdatedAt: new Date().toISOString() }) }); const K = parseFloat(n.pumpInfo.MeterReading || 0) + n.quantity; console.log(`⛽ Pump ${n.pumpInfo.PumpName}: ${n.pumpInfo.MeterReading}L → ${K}L`), await k(`/Pumps/${n.pumpInfo.PumpID}`, { method: "PATCH", body: JSON.stringify({ MeterReading: K.toFixed(2), UpdatedAt: new Date().toISOString() }) }) } console.log("📊 Updating station inventory..."); const m = (a = (await k(`/StationInventory?StationID=${x.value.StationID}&ProductID=${n.product.ProductID}`)).records) == null ? void 0 : a[0]; if (m) { const B = parseFloat(m.CurrentStock || 0), K = Math.max(0, B - n.quantity); console.log(`📦 Inventory ${n.product.Name}: ${B} → ${K}`), await k(`/StationInventory/${m.InventoryID}`, { method: "PATCH", body: JSON.stringify({ CurrentStock: K.toFixed(2), LastUpdated: new Date().toISOString() }) }) } else console.warn(`⚠️ No inventory record found for product ${n.product.ProductID}`); console.log("📋 Creating inventory history..."); const Q = await k("/InventoryHistory", { method: "POST", body: JSON.stringify({ StationID: x.value.StationID, ProductID: n.product.ProductID, TankID: n.isFuel ? n.tankInfo.TankID : null, PumpID: n.isFuel ? n.pumpInfo.PumpID : null, TransactionID: e, ChangeType: n.isFuel ? "Fuel Sale" : "Product Sale", PreviousQuantity: "0", QuantityChange: (-n.quantity).toString(), NewQuantity: "0", UnitPrice: n.unitPrice.toString(), TotalValue: n.total.toString(), ReasonForChange: "POS Sale", RecordedBy: F.value.id, CreatedAt: new Date().toISOString() }) }); console.log(`✅ Item ${o + 1} inventory updated successfully`) } catch (c) { throw console.error(`❌ Failed to update inventory for item ${o + 1} (${n.product.Name}):`, c), new Error(`Inventory update failed for ${n.product.Name}: ${c.message}`) } console.log("✅ All inventory updates completed successfully") }, he = async s => { try { if (!f.value) return; const a = parseFloat(f.value.CashSales || 0) + s, o = parseFloat(f.value.OpeningBalance) + a; await k(`/CashDrawers/${f.value.DrawerID}`, { method: "PATCH", body: JSON.stringify({ CashSales: a.toFixed(2), ExpectedCash: o.toFixed(2) }) }), f.value.CashSales = a.toFixed(2), f.value.ExpectedCash = o.toFixed(2) } catch (e) { console.error("❌ Failed to update cash drawer:", e) } }, ge = async (s, e) => { try { if (!s.creditAccount) return; const a = parseFloat(s.creditAccount.CurrentBalance || 0), o = parseFloat(s.creditAccount.CreditLimit || 0), n = a + e, c = o - n; await k(`/CustomerCreditAccounts/${s.creditAccount.CreditAccountID}`, { method: "PATCH", body: JSON.stringify({ CurrentBalance: n.toFixed(2), AvailableCredit: c.toFixed(2), LastPurchaseDate: new Date().toISOString(), UpdatedAt: new Date().toISOString() }) }), s.creditAccount.CurrentBalance = n.toFixed(2), s.creditAccount.AvailableCredit = c.toFixed(2) } catch (a) { console.error("❌ Failed to process customer credit:", a) } }, ye = () => { const s = new Date, e = s.getFullYear().toString().slice(-2), a = (s.getMonth() + 1).toString().padStart(2, "0"), o = s.getDate().toString().padStart(2, "0"), n = s.getTime().toString().slice(-6); return `INV-${x.value.StationID}-${e}${a}${o}-${n}` }, we = () => { ut.value = !0 }, xe = () => { ut.value = !1 }, yt = () => f.value ? parseFloat(f.value.OpeningBalance || 0) + parseFloat(f.value.CashSales || 0) : 0, ke = async () => { var s; try { const { value: e } = await _.fire({ title: "Open Cash Drawer", input: "number", inputLabel: "Opening Balance (UGX)", inputValue: 1e5, inputValidator: a => { if (!a || a < 0) return "Please enter a valid opening balance" } }); if (e) { const a = { StationID: x.value.StationID, ShiftDate: new Date().toISOString().split("T")[0], ShiftType: Se(), AttendantID: F.value.id, OpeningBalance: parseFloat(e).toFixed(2), ClosingBalance: "0.00", ExpectedCash: parseFloat(e).toFixed(2), ActualCash: "0.00", Variance: "0.00", CashSales: "0.00", CashPayouts: "0.00", Status: "Open", OpenedBy: F.value.id, OpenedAt: new Date().toISOString(), CreatedAt: new Date().toISOString() }, o = await k("/CashDrawers", { method: "POST", body: JSON.stringify(a) }), n = ((s = o.ids) == null ? void 0 : s[0]) || o.DrawerID || o.id; if (console.log("🔍 Cash drawer response:", o), console.log("🔍 Extracted drawer ID:", n), !n) throw console.error("❌ Failed to extract drawer ID from response:", o), new Error("Failed to create cash drawer - no ID returned from server"); f.value = { ...a, DrawerID: n }, await _.fire({ title: "Cash Drawer Opened", text: `Opening balance: ${p(e)}`, icon: "success" }) } } catch (e) { console.error("❌ Failed to open cash drawer:", e), await _.fire({ title: "Error", text: "Failed to open cash drawer", icon: "error" }) } }, Ce = async () => {
      try {
        const { value: s } = await _.fire({ title: "Close Cash Drawer", input: "number", inputLabel: "Actual Cash Count (UGX)", inputValue: yt(), inputValidator: e => { if (!e || e < 0) return "Please enter the actual cash count" } }); if (s) {
          const e = yt(), a = parseFloat(s) - e; await k(`/CashDrawers/${f.value.DrawerID}`, { method: "PATCH", body: JSON.stringify({ ClosingBalance: parseFloat(s).toFixed(2), ActualCash: parseFloat(s).toFixed(2), Variance: a.toFixed(2), Status: "Closed", ClosedBy: F.value.id, ClosedAt: new Date().toISOString() }) }), f.value.Status = "Closed", await _.fire({
            title: "Cash Drawer Closed", html: `
          <div>Expected: ${p(e)}</div>
          <div>Actual: ${p(s)}</div>
          <div>Variance: ${p(a)}</div>
        `, icon: a === 0 ? "success" : "warning"
          })
        }
      } catch (s) { console.error("❌ Failed to close cash drawer:", s), await _.fire({ title: "Error", text: "Failed to close cash drawer", icon: "error" }) }
    }, _e = async () => { await _.fire({ title: "Cash Reconciliation", text: "Reconciliation feature coming soon", icon: "info" }) }, Se = () => { const s = new Date().getHours(); return s >= 6 && s < 14 ? "Morning" : s >= 14 && s < 22 ? "Afternoon" : "Night" }, p = s => { const e = parseFloat(s) || 0; return new Intl.NumberFormat("en-UG", { style: "currency", currency: "UGX", minimumFractionDigits: 0, maximumFractionDigits: 0 }).format(e) }, Ie = s => { const e = parseFloat(s) || 0; return e >= 1e6 ? `${(e / 1e6).toFixed(1)}M` : e >= 1e3 ? `${(e / 1e3).toFixed(1)}K` : p(e) }, N = s => { const e = parseFloat(s) || 0; return e >= 1e3 ? `${(e / 1e3).toFixed(1)}kL` : `${e.toFixed(0)}L` }, Nt = s => { const e = parseFloat(s) || 0; return e >= 1e3 ? `${(e / 1e3).toFixed(1)}k` : `${e.toFixed(0)}` }, Ot = async () => { try { H.value = !0, await _.fire({ title: "Refreshing...", text: "Updating system data", icon: "info", toast: !0, position: "top-end", timer: 1e3, showConfirmButton: !1 }), await Promise.all([_t(), St(), It(), Dt(), Pt()]), await _.fire({ title: "Data Refreshed", icon: "success", toast: !0, position: "top-end", timer: 2e3, showConfirmButton: !1 }) } catch (s) { console.error("❌ Data refresh failed:", s), await _.fire({ title: "Refresh Failed", text: "Could not refresh system data", icon: "error" }) } finally { H.value = !1 } }, De = async () => { try { if (H.value = !0, !Qt()) throw new Error("Authentication failed"); await Promise.all([_t(), St(), It(), Dt(), Pt()]), await _.fire({ title: "POS System Ready", text: `Welcome ${F.value.name}! Connected to ${x.value.StationName}`, icon: "success", toast: !0, position: "top-end", timer: 3e3, showConfirmButton: !1 }), console.log("✅ POS System initialized successfully") } catch (s) { console.error("❌ POS initialization failed:", s), await _.fire({ title: "Initialization Failed", text: s.message || "Unable to initialize POS system", icon: "error", confirmButtonText: "Login Again" }), window.location.href = "/login" } finally { H.value = !1 } }; return Te(async () => { console.log("🚀 Bulletproof Fuel Dispensing POS System Loading..."), await De() }), (s, e) => (r(), i("div", Ae, [t("div", Ne, [t("div", Oe, [t("div", Le, [t("div", Re, [e[10] || (e[10] = t("div", { class: "symbol symbol-50px symbol-circle bg-white bg-opacity-20" }, [t("i", { class: "ki-duotone ki-oil-barrel fs-1 text-white" }, [t("span", { class: "path1" }), t("span", { class: "path2" })])], -1)), t("div", null, [e[9] || (e[9] = t("h2", { class: "text-white fw-bold fs-3 mb-0" }, "Fuel Dispensing POS", -1)), t("p", Be, l(F.value.name || "Attendant") + " • " + l(x.value.StationName || "Station"), 1)])]), t("div", { class: "d-flex gap-2" }, [t("button", { onClick: we, class: "btn btn-light-success btn-sm" }, e[11] || (e[11] = [t("i", { class: "ki-duotone ki-dollar fs-3" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1), w(" Cash Drawer ")])), t("button", { onClick: Ot, class: "btn btn-light-info btn-sm" }, e[12] || (e[12] = [t("i", { class: "ki-duotone ki-arrows-circle fs-3" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1), w(" Refresh ")]))])]), t("div", Me, [t("div", Ee, [t("div", Ue, [t("div", Qe, [e[13] || (e[13] = t("i", { class: "ki-duotone ki-dollar fs-2x text-white mb-2" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1)), t("div", je, l(p(R.revenue)), 1), e[14] || (e[14] = t("div", { class: "text-white opacity-75 fs-8" }, "Today's Revenue", -1))])])]), t("div", qe, [t("div", Ve, [t("div", ze, [e[15] || (e[15] = t("i", { class: "ki-duotone ki-oil-barrel fs-2x text-white mb-2" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1)), t("div", Je, l(R.fuelDispensed.toFixed(0)) + "L ", 1), e[16] || (e[16] = t("div", { class: "text-white opacity-75 fs-8" }, "Fuel Dispensed", -1))])])]), t("div", He, [t("div", Ge, [t("div", Xe, [e[17] || (e[17] = t("i", { class: "ki-duotone ki-basket fs-2x text-white mb-2" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1)), t("div", We, l(R.transactions), 1), e[18] || (e[18] = t("div", { class: "text-white opacity-75 fs-8" }, "Transactions", -1))])])]), t("div", Ke, [t("div", Ye, [t("div", Ze, [e[19] || (e[19] = t("i", { class: "ki-duotone ki-profile-user fs-2x text-white mb-2" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1)), t("div", ts, l(R.customers), 1), e[20] || (e[20] = t("div", { class: "text-white opacity-75 fs-8" }, "Customers", -1))])])])])])]), t("div", es, [t("div", ss, [t("div", { class: "d-flex align-items-center justify-content-between mb-3" }, [e[22] || (e[22] = t("h5", { class: "fw-bold text-gray-800 mb-0" }, [t("i", { class: "ki-duotone ki-profile-user text-info fs-1 me-2" }, [t("span", { class: "path1" }), t("span", { class: "path2" })]), w(" Customer Selection ")], -1)), t("button", { onClick: Ft, class: "btn btn-light-danger btn-sm" }, e[21] || (e[21] = [t("i", { class: "ki-duotone ki-arrows-circle fs-4 me-1" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1), w(" Reset ")]))]), t("div", as, [t("div", os, [t("button", { onClick: e[0] || (e[0] = a => bt("walk-in")), class: S(["btn w-100 h-60px", D.value === "walk-in" ? "btn-success" : "btn-light-success"]) }, e[23] || (e[23] = [J('<div class="d-flex align-items-center" data-v-bb1fd538><i class="ki-duotone ki-user-tick fs-2 me-3" data-v-bb1fd538><span class="path1" data-v-bb1fd538></span><span class="path2" data-v-bb1fd538></span></i><div class="text-start" data-v-bb1fd538><div class="fw-bold fs-6" data-v-bb1fd538>Walk-in Customer</div><div class="fs-8 opacity-75" data-v-bb1fd538>Cash/Card payment</div></div></div>', 1)]), 2)]), t("div", ns, [t("button", { onClick: e[1] || (e[1] = a => bt("credit")), class: S(["btn w-100 h-60px", D.value === "credit" ? "btn-info" : "btn-light-info"]) }, e[24] || (e[24] = [J('<div class="d-flex align-items-center" data-v-bb1fd538><i class="ki-duotone ki-address-book fs-2 me-3" data-v-bb1fd538><span class="path1" data-v-bb1fd538></span><span class="path2" data-v-bb1fd538></span></i><div class="text-start" data-v-bb1fd538><div class="fw-bold fs-6" data-v-bb1fd538>Credit Customer</div><div class="fs-8 opacity-75" data-v-bb1fd538>Account billing</div></div></div>', 1)]), 2)])]), D.value === "credit" ? (r(), i("div", ls, [t("div", is, [it(t("input", { "onUpdate:modelValue": e[2] || (e[2] = a => V.value = a), onInput: Wt, type: "text", class: S(["form-control form-control-lg ps-5", { "border-success": v.value }]), placeholder: "Search by name, phone, or customer code...", disabled: Z.value }, null, 42, rs), [[rt, V.value]]), e[26] || (e[26] = t("i", { class: "ki-duotone ki-magnifier position-absolute top-50 start-0 translate-middle-y ms-3 fs-3 text-gray-500" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1)), Z.value ? (r(), i("div", cs, e[25] || (e[25] = [t("div", { class: "spinner-border spinner-border-sm text-primary" }, null, -1)]))) : u("", !0)]), v.value ? (r(), i("div", ds, [t("div", us, [t("div", vs, [t("div", null, [t("div", ps, l(z(v.value)), 1), t("div", fs, l(v.value.CustomerCode) + " • " + l(v.value.PhoneNumber), 1), v.value.creditAccount ? (r(), i("div", bs, [w(" Available Credit: " + l(p(v.value.creditAccount.AvailableCredit)) + " ", 1), t("span", ms, "Balance: " + l(p(v.value.creditAccount.CurrentBalance)), 1)])) : u("", !0)]), t("button", { onClick: Xt, class: "btn btn-icon btn-light-danger btn-sm" }, e[27] || (e[27] = [t("i", { class: "ki-duotone ki-cross fs-2" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1)]))])])])) : u("", !0), E.value.length && !v.value ? (r(), i("div", hs, [t("div", gs, [(r(!0), i(j, null, q(E.value.slice(0, 5), a => (r(), i("div", { key: a.CustomerID, onClick: o => Yt(a), class: "p-3 border-bottom border-light cursor-pointer hover-bg-light" }, [t("div", ws, [t("div", null, [t("div", xs, l(z(a)), 1), t("div", ks, l(a.PhoneNumber) + " • " + l(a.CustomerCode), 1), a.creditAccount ? (r(), i("div", Cs, " Credit: " + l(p(a.creditAccount.AvailableCredit)), 1)) : u("", !0)]), e[28] || (e[28] = t("i", { class: "ki-duotone ki-arrow-right fs-3 text-info" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1))])], 8, ys))), 128))])])) : u("", !0)])) : u("", !0)])]), t("div", _s, [t("div", Ss, [t("h5", Is, [e[29] || (e[29] = t("i", { class: "ki-duotone ki-oil-barrel text-primary fs-1 me-2" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1)), w(" Products & Fuel (" + l(tt.value.length) + " items) ", 1)]), H.value ? (r(), i("div", Ds, e[30] || (e[30] = [t("div", { class: "spinner-border spinner-border-lg text-primary mb-3" }, null, -1), t("div", { class: "fw-bold text-gray-600" }, "Loading inventory data...", -1)]))) : (r(), i("div", Ps, [(r(!0), i(j, null, q(tt.value, a => (r(), i("div", { key: a.ProductID, class: "col-6 col-md-4 col-lg-3" }, [t("div", { onClick: o => Zt(a), class: S(["card h-100 cursor-pointer position-relative shadow-sm border-0", Ht(a)]), style: { "min-height": "200px", transition: "all 0.2s ease" } }, [A(a) <= 0 ? (r(), i("div", Ts, e[31] || (e[31] = [J('<div class="text-center text-white" data-v-bb1fd538><i class="ki-duotone ki-information fs-2x mb-2" data-v-bb1fd538><span class="path1" data-v-bb1fd538></span><span class="path2" data-v-bb1fd538></span></i><div class="fw-bold" data-v-bb1fd538>OUT OF STOCK</div></div>', 1)]))) : u("", !0), t("div", $s, [t("div", As, [t("i", { class: S(["ki-duotone", qt(a.ProductType), "fs-3x", Vt(a.ProductType)]) }, e[32] || (e[32] = [t("span", { class: "path1" }, null, -1), t("span", { class: "path2" }, null, -1)]), 2)]), t("div", Ns, [t("div", null, [t("h6", Os, l(a.Name), 1), t("div", Ls, l(p(W(a))), 1), t("div", Rs, l(a.ProductType), 1)]), t("div", Bs, [U(a) ? (r(), i("div", Ms, [t("div", Es, l(ft(a).length) + " Tank(s) ", 1), t("div", Us, l(zt(a).length) + " Pump(s) ", 1), t("div", Qs, " Total: " + l(N(A(a))), 1)])) : (r(), i("div", js, [t("div", qs, " In Stock: " + l(Nt(A(a))), 1)])), t("span", { class: S(["badge", "badge-sm", Jt(A(a))]) }, l(U(a) ? "Fuel" : "Stock") + ": " + l(Gt(a, A(a))), 3)])]), mt(a.ProductID) > 0 ? (r(), i("div", Vs, [t("span", zs, l(mt(a.ProductID)), 1)])) : u("", !0)])], 10, Fs)]))), 128))]))])]), dt.value && L.value ? (r(), i("div", Js, [t("div", Hs, [t("div", Gs, [t("div", Xs, [t("h3", Ws, [e[33] || (e[33] = t("i", { class: "ki-duotone ki-oil-barrel fs-1 me-2" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1)), w(" Fuel Dispensing: " + l(L.value.Name), 1)]), t("button", { onClick: Tt, class: "btn btn-icon btn-light btn-sm" }, e[34] || (e[34] = [t("i", { class: "ki-duotone ki-cross fs-2" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1)]))]), t("div", Ks, [P.value === 1 ? (r(), i("div", Ys, [e[36] || (e[36] = t("h5", { class: "fw-bold text-gray-800 mb-3" }, "Select Tank", -1)), t("div", Zs, [(r(!0), i(j, null, q(at.value, a => { var o; return r(), i("div", { key: a.TankID, class: "col-6" }, [t("div", { onClick: n => ee(a), class: S(["card cursor-pointer h-100", ((o = h.value) == null ? void 0 : o.TankID) === a.TankID ? "border-primary bg-light-primary" : "border-light"]) }, [t("div", ea, [e[35] || (e[35] = t("i", { class: "ki-duotone ki-oil-barrel fs-2x text-primary mb-2" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1)), t("div", sa, l(a.TankName), 1), t("div", aa, " Capacity: " + l(N(a.Capacity)), 1), t("div", oa, " Available: " + l(N(a.CurrentLevel)), 1), t("div", na, [t("div", la, [t("div", { class: "progress-bar bg-success", style: $e({ width: Math.min(parseFloat(a.CurrentLevel) / parseFloat(a.Capacity) * 100, 100) + "%" }) }, null, 4)])])])], 10, ta)]) }), 128))])])) : u("", !0), P.value === 2 && h.value ? (r(), i("div", ia, [t("h5", ra, " Select Pump (Tank: " + l(h.value.TankName) + ") ", 1), t("div", ca, [(r(!0), i(j, null, q(ot.value, a => { var o; return r(), i("div", { key: a.PumpID, class: "col-6" }, [t("div", { onClick: n => se(a), class: S(["card cursor-pointer h-100", ((o = T.value) == null ? void 0 : o.PumpID) === a.PumpID ? "border-warning bg-light-warning" : "border-light"]) }, [t("div", ua, [e[37] || (e[37] = t("i", { class: "ki-duotone ki-gas-station fs-2x text-warning mb-2" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1)), t("div", va, l(a.PumpName), 1), e[38] || (e[38] = t("div", { class: "fs-7 text-gray-600" }, "Meter Reading:", -1)), t("div", pa, l(N(a.MeterReading)), 1), t("div", fa, [t("span", { class: S(["badge", a.Status === "Active" ? "badge-success" : "badge-danger"]) }, l(a.Status), 3)])])], 10, da)]) }), 128))])])) : u("", !0), P.value === 3 && T.value ? (r(), i("div", ba, [e[45] || (e[45] = t("h5", { class: "fw-bold text-gray-800 mb-3" }, "Dispense Quantity", -1)), t("div", ma, [t("div", ha, [t("div", ga, [t("div", ya, [t("div", wa, l(h.value.TankName), 1), t("div", xa, " Available: " + l(N(h.value.CurrentLevel)), 1)])])]), t("div", ka, [t("div", Ca, [t("div", _a, [t("div", Sa, l(T.value.PumpName), 1), t("div", Ia, " Meter: " + l(N(T.value.MeterReading)), 1)])])])]), e[46] || (e[46] = t("label", { class: "form-label fw-bold fs-4 mb-3" }, "Quantity to Dispense (Liters)", -1)), it(t("input", { "onUpdate:modelValue": e[3] || (e[3] = a => g.value = a), onInput: ne, type: "number", step: "0.01", min: "0.01", max: h.value.CurrentLevel, class: S(["form-control form-control-lg text-center fw-bold", Mt.value]), style: { "font-size": "2rem", height: "80px" }, placeholder: "Enter liters..." }, null, 42, Da), [[rt, g.value, void 0, { number: !0 }]]), g.value > parseFloat(h.value.CurrentLevel) ? (r(), i("div", Pa, [e[39] || (e[39] = t("i", { class: "ki-duotone ki-information fs-2 me-2" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1)), w(" Insufficient fuel. Maximum: " + l(N(h.value.CurrentLevel)), 1)])) : u("", !0), t("div", Fa, [(r(!0), i(j, null, q(le(), a => (r(), i("div", { key: a, class: "col-4" }, [t("button", { onClick: o => g.value = a, class: "btn btn-light-primary w-100 fs-6" }, l(a) + "L ", 9, Ta)]))), 128))]), g.value > 0 && g.value <= parseFloat(h.value.CurrentLevel) ? (r(), i("div", $a, [t("div", Aa, [e[43] || (e[43] = t("h6", { class: "fw-bold text-success mb-2" }, "Dispense Summary", -1)), t("div", Na, [e[40] || (e[40] = t("span", null, "Quantity:", -1)), t("span", Oa, l(g.value) + "L", 1)]), t("div", La, [e[41] || (e[41] = t("span", null, "Unit Price:", -1)), t("span", Ra, l(p(W(L.value))), 1)]), t("div", Ba, [e[42] || (e[42] = t("span", null, "Total:", -1)), t("span", Ma, l(p(g.value * W(L.value))), 1)]), e[44] || (e[44] = t("div", { class: "separator my-2" }, null, -1)), t("div", Ea, " Tank after: " + l(N(parseFloat(h.value.CurrentLevel) - g.value)) + " / " + l(N(h.value.Capacity)), 1)])])) : u("", !0)])) : u("", !0), t("div", Ua, [P.value > 1 ? (r(), i("button", { key: 0, onClick: oe, class: "btn btn-light-secondary" }, e[47] || (e[47] = [t("i", { class: "ki-duotone ki-arrow-left fs-3 me-1" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1), w(" Back ")]))) : u("", !0), P.value < 3 ? (r(), i("button", { key: 1, onClick: ae, disabled: !Bt.value, class: "btn btn-primary flex-grow-1" }, e[48] || (e[48] = [w(" Next Step "), t("i", { class: "ki-duotone ki-arrow-right fs-3 ms-1" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1)]), 8, Qa)) : u("", !0), P.value === 3 ? (r(), i("button", { key: 2, onClick: ie, disabled: !Ct.value, class: "btn btn-success flex-grow-1" }, e[49] || (e[49] = [t("i", { class: "ki-duotone ki-check-circle fs-3 me-1" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1), w(" Add to Cart ")]), 8, ja)) : u("", !0)])])])])])) : u("", !0), b.value.length > 0 ? (r(), i("div", qa, [t("div", Va, [t("div", za, [t("h5", Ja, [e[50] || (e[50] = t("i", { class: "ki-duotone ki-basket text-warning fs-1 me-2" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1)), w(" Shopping Cart (" + l(b.value.length) + " items) ", 1)]), t("div", Ha, [t("button", { onClick: ce, class: "btn btn-light-danger btn-sm" }, e[51] || (e[51] = [t("i", { class: "ki-duotone ki-trash fs-3 me-1" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1), w(" Clear ")])), t("button", { onClick: de, class: "btn btn-light-primary btn-sm" }, [t("i", { class: S(["ki-duotone", M.value ? "ki-up" : "ki-down", "fs-3"]) }, e[52] || (e[52] = [t("span", { class: "path1" }, null, -1), t("span", { class: "path2" }, null, -1)]), 2), w(" " + l(M.value ? "Collapse" : "Expand"), 1)])])]), M.value ? (r(), i("div", Ga, [(r(!0), i(j, null, q(b.value, (a, o) => (r(), i("div", { key: `cart-${a.product.ProductID}-${o}`, class: "card bg-light mb-2" }, [t("div", Xa, [t("div", Wa, [t("div", Ka, [t("div", Ya, l(a.product.Name), 1), t("div", Za, l(p(a.unitPrice)) + " each", 1), a.tankInfo ? (r(), i("div", to, l(a.tankInfo.TankName) + " → " + l(a.pumpInfo.PumpName), 1)) : u("", !0)]), t("div", eo, [t("button", { onClick: n => ht(o, a.quantity - 1), class: "btn btn-icon btn-light-danger btn-sm w-35px h-35px" }, e[53] || (e[53] = [t("i", { class: "ki-duotone ki-minus fs-4" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1)]), 8, so), t("span", ao, l(a.quantity) + l(U(a.product) ? "L" : ""), 1), t("button", { onClick: n => ht(o, a.quantity + 1), class: "btn btn-icon btn-light-primary btn-sm w-35px h-35px" }, e[54] || (e[54] = [t("i", { class: "ki-duotone ki-plus fs-4" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1)]), 8, oo)]), t("div", no, [t("div", lo, l(p(a.total)), 1), t("button", { onClick: n => $t(o), class: "btn btn-icon btn-light-danger btn-xs mt-1" }, e[55] || (e[55] = [t("i", { class: "ki-duotone ki-trash fs-5" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1)]), 8, io)])])])]))), 128))])) : u("", !0), t("div", ro, [t("div", co, [t("div", uo, [e[56] || (e[56] = t("span", { class: "text-gray-700 fs-6" }, "Subtotal:", -1)), t("span", vo, l(p(nt.value)), 1)]), t("div", po, [t("span", fo, "Tax (" + l(pt.value) + "%):", 1), t("span", bo, l(p(lt.value)), 1)]), e[60] || (e[60] = t("div", { class: "separator my-2" }, null, -1)), t("div", mo, [e[57] || (e[57] = t("span", { class: "fw-bold text-gray-800 fs-4" }, "Total:", -1)), t("span", ho, l(p(y.value)), 1)]), D.value === "credit" && v.value && v.value.creditAccount ? (r(), i("div", go, [y.value > parseFloat(v.value.creditAccount.AvailableCredit) ? (r(), i("div", yo, [e[58] || (e[58] = t("i", { class: "ki-duotone ki-information fs-3 me-2" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1)), t("small", null, " Exceeds credit by " + l(p(y.value - parseFloat(v.value.creditAccount.AvailableCredit))), 1)])) : u("", !0)])) : u("", !0), t("button", { onClick: ue, disabled: !Lt.value, class: "btn btn-primary w-100 h-60px fs-4 fw-bold" }, e[59] || (e[59] = [t("i", { class: "ki-duotone ki-credit-cart fs-1 me-2" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1), w(" Proceed to Payment ")]), 8, wo)])])])])) : u("", !0), X.value ? (r(), i("div", xo, [t("div", ko, [t("div", Co, [t("div", { class: "modal-header bg-gradient-primary border-0" }, [e[62] || (e[62] = t("h3", { class: "modal-title fw-bold text-white" }, [t("i", { class: "ki-duotone ki-credit-cart fs-1 me-2" }, [t("span", { class: "path1" }), t("span", { class: "path2" })]), w(" Payment Processing ")], -1)), t("button", { onClick: At, class: "btn btn-icon btn-light btn-sm" }, e[61] || (e[61] = [t("i", { class: "ki-duotone ki-cross fs-2" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1)]))]), t("div", _o, [t("div", So, [t("div", Io, [e[63] || (e[63] = t("div", { class: "fs-7 text-gray-600 mb-1" }, "Total Amount", -1)), t("div", Do, l(p(y.value)), 1), D.value === "credit" && v.value ? (r(), i("div", Po, " Customer: " + l(z(v.value)), 1)) : u("", !0)])]), t("div", Fo, [t("div", To, [t("button", { onClick: e[4] || (e[4] = a => gt("Cash")), class: S(["btn w-100 h-100px", I.value === "Cash" ? "btn-success" : "btn-light-success"]) }, e[64] || (e[64] = [J('<div class="text-center" data-v-bb1fd538><i class="ki-duotone ki-dollar fs-3x mb-3" data-v-bb1fd538><span class="path1" data-v-bb1fd538></span><span class="path2" data-v-bb1fd538></span></i><div class="fw-bold fs-5" data-v-bb1fd538>Cash</div></div>', 1)]), 2)]), t("div", $o, [t("button", { onClick: e[5] || (e[5] = a => gt("Card")), class: S(["btn w-100 h-100px", I.value === "Card" ? "btn-info" : "btn-light-info"]) }, e[65] || (e[65] = [J('<div class="text-center" data-v-bb1fd538><i class="ki-duotone ki-credit-cart fs-3x mb-3" data-v-bb1fd538><span class="path1" data-v-bb1fd538></span><span class="path2" data-v-bb1fd538></span></i><div class="fw-bold fs-5" data-v-bb1fd538>Card</div></div>', 1)]), 2)]), t("div", Ao, [t("button", { onClick: e[6] || (e[6] = a => gt("Mobile Money")), class: S(["btn w-100 h-100px", I.value === "Mobile Money" ? "btn-warning" : "btn-light-warning"]) }, e[66] || (e[66] = [J('<div class="text-center" data-v-bb1fd538><i class="ki-duotone ki-phone fs-3x mb-3" data-v-bb1fd538><span class="path1" data-v-bb1fd538></span><span class="path2" data-v-bb1fd538></span></i><div class="fw-bold fs-5" data-v-bb1fd538>Mobile</div></div>', 1)]), 2)])]), I.value === "Cash" ? (r(), i("div", No, [e[69] || (e[69] = t("label", { class: "form-label fw-bold fs-4 mb-3" }, "Cash Received", -1)), it(t("input", { "onUpdate:modelValue": e[7] || (e[7] = a => C.value = a), onInput: pe, type: "number", step: "1000", min: "0", class: S(["form-control form-control-lg text-center fw-bold", Et.value]), style: { "font-size": "2rem", height: "80px" }, placeholder: "Enter amount..." }, null, 34), [[rt, C.value, void 0, { number: !0 }]]), C.value >= y.value && C.value > 0 ? (r(), i("div", Oo, [t("div", Lo, [t("div", Ro, [e[67] || (e[67] = t("span", { class: "text-success fw-bold fs-5" }, "Change:", -1)), t("span", Bo, l(p(C.value - y.value)), 1)])])])) : u("", !0), C.value > 0 && C.value < y.value ? (r(), i("div", Mo, [t("div", Eo, [t("div", Uo, [e[68] || (e[68] = t("span", { class: "text-danger fw-bold fs-5" }, "Still Need:", -1)), t("span", Qo, l(p(y.value - C.value)), 1)])])])) : u("", !0), t("div", jo, [(r(!0), i(j, null, q(fe(), a => (r(), i("div", { key: a, class: "col-4" }, [t("button", { onClick: o => C.value = a, class: "btn btn-light-primary w-100 fs-6" }, l(Ie(a)), 9, qo)]))), 128))])])) : u("", !0), I.value !== "Cash" ? (r(), i("div", Vo, [e[70] || (e[70] = t("label", { class: "form-label fw-bold fs-4 mb-3" }, "Payment Reference", -1)), it(t("input", { "onUpdate:modelValue": e[8] || (e[8] = a => $.value = a), type: "text", class: S(["form-control form-control-lg", Ut.value]), style: { height: "80px", "font-size": "1.2rem" }, placeholder: ve(), maxlength: "50" }, null, 10, zo), [[rt, $.value]]), $.value.length > 0 && $.value.length < 3 ? (r(), i("div", Jo, " Reference must be at least 3 characters ")) : u("", !0)])) : u("", !0), t("button", { onClick: be, disabled: !Rt.value || G.value, class: "btn btn-primary w-100 fw-bold", style: { height: "80px", "font-size": "1.5rem" } }, [G.value ? (r(), i("div", Go, e[71] || (e[71] = [t("div", { class: "spinner-border spinner-border-sm me-2" }, null, -1), w(" Processing Sale... ")]))) : (r(), i("div", Xo, e[72] || (e[72] = [t("i", { class: "ki-duotone ki-check-circle fs-1 me-2" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1), w(" Complete Sale ")])))], 8, Ho)])])])])) : u("", !0), ut.value ? (r(), i("div", Wo, [t("div", Ko, [t("div", Yo, [t("div", { class: "modal-header bg-gradient-success border-0" }, [e[74] || (e[74] = t("h3", { class: "modal-title fw-bold text-white" }, [t("i", { class: "ki-duotone ki-dollar fs-1 me-2" }, [t("span", { class: "path1" }), t("span", { class: "path2" })]), w(" Cash Drawer Management ")], -1)), t("button", { onClick: xe, class: "btn btn-icon btn-light btn-sm" }, e[73] || (e[73] = [t("i", { class: "ki-duotone ki-cross fs-2" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1)]))]), t("div", Zo, [f.value ? (r(), i("div", tn, [t("div", en, [e[79] || (e[79] = t("h6", { class: "fw-bold text-success mb-2" }, "Current Shift Drawer", -1)), t("div", sn, [t("div", an, [t("div", on, [e[75] || (e[75] = t("span", null, "Opening:", -1)), t("span", nn, l(p(f.value.OpeningBalance)), 1)])]), t("div", ln, [t("div", rn, [e[76] || (e[76] = t("span", null, "Cash Sales:", -1)), t("span", cn, l(p(f.value.CashSales)), 1)])]), t("div", dn, [t("div", un, [e[77] || (e[77] = t("span", null, "Expected:", -1)), t("span", vn, l(p(yt())), 1)])]), t("div", pn, [t("div", fn, [e[78] || (e[78] = t("span", null, "Status:", -1)), t("span", { class: S(["fw-bold", f.value.Status === "Open" ? "text-success" : "text-danger"]) }, l(f.value.Status), 3)])])])])])) : u("", !0), t("div", bn, [!f.value || f.value.Status === "Closed" ? (r(), i("div", mn, [t("button", { onClick: ke, class: "btn btn-success w-100 h-60px fs-4" }, e[80] || (e[80] = [t("i", { class: "ki-duotone ki-plus fs-1 me-2" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1), w(" Open New Cash Drawer ")]))])) : u("", !0), f.value && f.value.Status === "Open" ? (r(), i("div", hn, [t("button", { onClick: Ce, class: "btn btn-danger w-100 h-60px fs-5" }, e[81] || (e[81] = [t("i", { class: "ki-duotone ki-lock fs-1 me-2" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1), w(" Close Drawer ")]))])) : u("", !0), f.value && f.value.Status === "Open" ? (r(), i("div", gn, [t("button", { onClick: _e, class: "btn btn-warning w-100 h-60px fs-5" }, e[82] || (e[82] = [t("i", { class: "ki-duotone ki-calculator fs-1 me-2" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1), w(" Reconcile ")]))])) : u("", !0)])])])])])) : u("", !0)]))
  }
}, _n = Pe(xn, [["__scopeId", "data-v-bb1fd538"]]); export { _n as default };
