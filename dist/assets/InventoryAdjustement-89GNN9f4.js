import { _ as jt, r as C, a as ct, c as P, o as Vt, S as O, n as ut, d as v, e, f as d, i as R, t as l, h, w as S, x as G, F as et, k as at, s as Ut, g as L, j as st, v as W, p } from "./index-Fk_fMhvq.js"; import { i as vt } from "./index-Bn9PLWWT.js"; const Ot = { class: "d-flex flex-column gap-7" }, Rt = { class: "card card-flush shadow-sm" }, Lt = { class: "card-header border-0 pt-7" }, Mt = { class: "card-toolbar" }, Qt = { class: "d-flex align-items-center gap-3" }, $t = { class: "badge badge-light-primary fs-7 px-4 py-2" }, Et = { class: "row g-6 g-xl-9" }, Bt = { class: "col-6 col-lg-3" }, Ht = { class: "card card-flush h-100 shadow-sm" }, Jt = { class: "card-body d-flex flex-column justify-content-between" }, qt = { class: "d-flex align-items-center mb-4" }, Gt = { class: "flex-grow-1" }, Wt = { class: "fs-2hx fw-bold text-gray-800" }, zt = { class: "col-6 col-lg-3" }, Yt = { class: "card card-flush h-100 shadow-sm" }, Kt = { class: "card-body d-flex flex-column justify-content-between" }, Xt = { class: "d-flex align-items-center mb-4" }, Zt = { class: "flex-grow-1" }, te = { class: "fs-2hx fw-bold text-gray-800" }, ee = { class: "col-6 col-lg-3" }, ae = { class: "card card-flush h-100 shadow-sm" }, se = { class: "card-body d-flex flex-column justify-content-between" }, oe = { class: "d-flex align-items-center mb-4" }, ne = { class: "flex-grow-1" }, le = { class: "fs-2hx fw-bold text-gray-800" }, ie = { class: "col-6 col-lg-3" }, re = { class: "card card-flush h-100 shadow-sm" }, de = { class: "card-body d-flex flex-column justify-content-between" }, ce = { class: "d-flex align-items-center mb-4" }, ue = { class: "flex-grow-1" }, ve = { class: "fs-2hx fw-bold text-gray-800" }, pe = { class: "card card-flush shadow-sm" }, me = { class: "card-body p-0" }, ge = { class: "nav nav-stretch nav-pills nav-pills-custom border-transparent fs-5 fw-bold" }, ye = { class: "nav-item" }, he = { class: "nav-item" }, fe = { class: "nav-item" }, be = { class: "nav-item" }, xe = { class: "tab-content" }, we = { class: "row g-6" }, ke = { class: "col-12" }, Ce = { class: "card card-flush shadow-sm" }, Se = { class: "card-header border-0 pt-6" }, Ie = { class: "card-toolbar" }, De = ["disabled"], _e = { class: "card-body" }, Pe = { key: 0, class: "text-center py-20" }, Te = { key: 1, class: "text-center py-20" }, Fe = { key: 2, class: "row g-6" }, Ne = { class: "card card-bordered h-100 shadow-sm hover-elevate-up" }, Ae = { class: "card-body text-center position-relative" }, je = { class: "position-absolute top-0 end-0 m-4" }, Ve = { class: "card-title mb-3 text-gray-800" }, Ue = { class: "fs-1 fw-bold text-gray-900 mb-3" }, Oe = { class: "mb-4" }, Re = { class: "fs-4 fw-bold text-success" }, Le = { class: "mb-4" }, Me = { class: "text-muted fs-7" }, Qe = { class: "row g-6" }, $e = { class: "col-12 col-xl-8" }, Ee = { class: "card card-flush shadow-sm" }, Be = { class: "card-body" }, He = { class: "mb-8" }, Je = ["value"], qe = { key: 0, class: "invalid-feedback" }, Ge = { key: 0, class: "alert alert-dismissible bg-light-info border border-info mb-8" }, We = { class: "d-flex align-items-center" }, ze = { class: "flex-grow-1" }, Ye = { class: "row" }, Ke = { class: "col-6" }, Xe = { class: "fs-5 fw-bold text-gray-800" }, Ze = { class: "col-6" }, ta = { class: "fs-5 fw-bold text-success" }, ea = { class: "mb-8" }, aa = { class: "row g-6" }, sa = { class: "col-12 col-md-6" }, oa = { key: 0, class: "invalid-feedback" }, na = { class: "col-12 col-md-6" }, la = { class: "input-group input-group-lg input-group-solid" }, ia = { key: 0, class: "invalid-feedback" }, ra = { class: "mb-8" }, da = { class: "row g-6" }, ca = { class: "col-12" }, ua = { key: 0, class: "invalid-feedback" }, va = { class: "col-12 col-md-6" }, pa = { class: "col-12 col-md-6" }, ma = { key: 1, class: "alert alert-dismissible bg-light-primary border border-primary mb-8" }, ga = { class: "row text-center g-4" }, ya = { class: "col-3" }, ha = { class: "fs-5 fw-bold text-gray-800" }, fa = { class: "fs-7 text-success" }, ba = { class: "col-3" }, xa = { class: "col-3" }, wa = { class: "fs-5 fw-bold text-gray-800" }, ka = { class: "fs-7 text-primary" }, Ca = { class: "col-3" }, Sa = { class: "fs-7 text-muted" }, Ia = { class: "text-center" }, Da = ["disabled"], _a = { key: 0, class: "spinner-border spinner-border-sm me-3" }, Pa = { key: 1, class: "ki-duotone ki-check fs-2 me-3" }, Ta = { class: "col-12 col-xl-4" }, Fa = { class: "card card-flush shadow-sm h-100" }, Na = { class: "card-body" }, Aa = { class: "d-grid gap-4" }, ja = { class: "row g-6" }, Va = { class: "col-12" }, Ua = { class: "card card-flush shadow-sm" }, Oa = { class: "card-body" }, Ra = { key: 0, class: "text-center py-20" }, La = { key: 1, class: "table-responsive" }, Ma = { class: "table table-rounded table-hover table-striped border gy-7 gs-7" }, Qa = { class: "fw-bold text-gray-800" }, $a = { class: "fs-7 text-muted" }, Ea = { class: "d-flex align-items-center" }, Ba = { class: "fw-bold text-gray-800" }, Ha = { class: "badge badge-light-primary" }, Ja = { class: "text-end fw-bold" }, qa = { class: "text-end" }, Ga = { class: "text-end fw-bold" }, Wa = { class: "text-end" }, za = { class: "text-gray-800" }, Ya = { key: 0, class: "fs-7 text-muted" }, Ka = { class: "row g-6" }, Xa = { class: "col-12 col-xl-8" }, Za = { class: "card card-flush shadow-sm h-100" }, ts = { class: "card-body" }, es = { class: "col-12 col-xl-4" }, as = { class: "card card-flush shadow-sm h-100" }, ss = { class: "card-body" }, os = { class: "d-flex flex-column gap-6" }, ns = { class: "d-flex align-items-center justify-content-between" }, ls = { class: "d-flex align-items-center" }, is = { class: "fs-5 fw-bold text-gray-800" }, rs = { class: "d-flex align-items-center justify-content-between" }, ds = { class: "d-flex align-items-center" }, cs = { class: "fs-5 fw-bold text-gray-800" }, us = { class: "d-flex align-items-center justify-content-between" }, vs = { class: "d-flex align-items-center" }, ps = { class: "d-flex align-items-center justify-content-between" }, ms = { class: "d-flex align-items-center" }, gs = { class: "fs-5 fw-bold text-gray-800" }, ys = { class: "col-12" }, hs = { class: "card card-flush shadow-sm" }, fs = { class: "card-body" }, bs = "https://backend.cloudfuelstationmis.com/api/records/v1", xs = { __name: "InventoryAdjustement", setup(ws) { const pt = () => { try { return JSON.parse(localStorage.getItem("kigrama_user_data") || "{}") } catch { return {} } }, mt = () => localStorage.getItem("kigrama_auth_token") || "", ot = C(pt()), gt = C(mt()), b = C("current"), T = C(!1), V = C([]), M = C([]), F = C([]), I = C([]), B = C([]), z = C(null), Y = C(null), o = ct({ ProductID: "", ChangeType: "", QuantityChange: "", ReasonForChange: "", Notes: "", BatchNumber: "", MeasurementMethod: "Manual Count" }), u = ct({}), N = P(() => ot.value.user || {}), yt = P(() => ot.value.stations || []), nt = P(() => yt.value[0] || null), k = P(() => { var a; return ((a = nt.value) == null ? void 0 : a.StationID) || null }), x = P(() => o.ProductID ? V.value.find(a => a.ProductID == o.ProductID) : null), Q = P(() => { if (!F.value.length) return M.value; const a = F.value.map(t => t.ProductID); return M.value.filter(t => !a.includes(t.ProductID)) }), U = P(() => { if (!F.value.length) return V.value; const a = F.value.map(t => t.ProductID); return V.value.filter(t => !a.includes(t.ProductID)) }), ht = P(() => { var a; return o.ProductID && o.ChangeType && o.QuantityChange && ((a = o.ReasonForChange) == null ? void 0 : a.length) >= 10 }), ft = P(() => { const a = U.value.length, t = U.value.reduce((i, r) => i + parseFloat(r.CurrentStock || 0), 0), n = U.value.filter(i => parseFloat(i.CurrentStock || 0) < 100).length, s = I.value.filter(i => new Date(i.ChangeDate) > new Date(Date.now() - 7 * 24 * 60 * 60 * 1e3)).length; return { totalProducts: a, totalStock: t, lowStockItems: n, recentAdjustments: s, lastUpdate: new Date().toLocaleString() } }), A = P(() => { const a = new Date(Date.now() - 2592e6), t = I.value.filter(m => new Date(m.ChangeDate) > a), n = t.filter(m => parseFloat(m.TotalValue || 0) > 0).reduce((m, f) => m + parseFloat(f.TotalValue || 0), 0), s = t.filter(m => parseFloat(m.TotalValue || 0) < 0).reduce((m, f) => m + parseFloat(f.TotalValue || 0), 0), i = U.value.reduce((m, f) => { const $ = Q.value.find(w => w.ProductID === f.ProductID), q = parseFloat(($ == null ? void 0 : $.UnitPrice) || 0), _ = parseFloat(f.CurrentStock || 0); return m + q * _ }, 0), r = n + s, c = n + s, y = i > 0 ? (Math.abs(s) / i * 100).toFixed(2) : 0; return { totalInventoryValue: i, adjustmentImpact: r, totalGains: n, totalLosses: s, netImpact: c, lossRatio: y } }), D = async (a, t = {}) => { try { const n = await fetch(`${bs}${a}`, { headers: { "Content-Type": "application/json", Authorization: `Bearer ${gt.value}`, ...t.headers }, ...t }); if (!n.ok) { let r = "Unknown error"; try { r = await n.text() } catch { r = `HTTP ${n.status} ${n.statusText}` } throw new Error(`API Error: ${n.status} ${n.statusText} - ${r}`) } const s = n.headers.get("content-length"), i = n.headers.get("content-type"); if (s === "0" || n.status === 204) return {}; if (i && i.includes("application/json")) try { const r = await n.text(); return r.trim() ? JSON.parse(r) : {} } catch (r) { return console.warn("Failed to parse JSON response:", r), {} } return {} } catch (n) { throw console.error("API Error:", n), n } }, bt = a => { var c; const t = Math.abs(parseFloat(a.QuantityChange || 0)), n = t * parseFloat(Z()), s = { largeQuantityAdjustment: t > 1e3, highValueAdjustment: n > 5e5, offHoursActivity: new Date().getHours() < 6 || new Date().getHours() > 22, emptyOrVagueReason: !((c = a.ReasonForChange) != null && c.trim()) || a.ReasonForChange.length < 10, frequentAdjustments: It(), unusualPattern: t > 5e3 }, i = Object.values(s).filter(Boolean).length, r = Math.min(i * 15, 100); return { riskScore: r, riskLevel: r >= 75 ? "CRITICAL" : r >= 50 ? "HIGH" : r >= 25 ? "MEDIUM" : "LOW", flags: Object.keys(s).filter(y => s[y]), isSuspicious: i > 0, severity: r >= 75 ? "Critical" : r >= 50 ? "High" : r >= 25 ? "Medium" : "Low" } }, H = async (a, t, n = null) => { var i; const s = new Date().toISOString(); try { await D("/AuditLogs", { method: "POST", body: JSON.stringify({ TableName: t.tableName || "StationInventory", RecordID: ((i = t.recordId) == null ? void 0 : i.toString()) || null, Action: a, OldValues: JSON.stringify(t.oldValues || {}), NewValues: JSON.stringify(t.newValues || {}), UserID: N.value.id, IPAddress: "client_ip_placeholder", UserAgent: navigator.userAgent, Timestamp: s, AdditionalInfo: JSON.stringify({ stationId: k.value, productId: t.productId, details: t.details || {} }) }) }) } catch (r) { console.error("Failed to log to AuditLogs:", r) } if (n != null && n.isSuspicious) try { await D("/FraudDetectionLogs", { method: "POST", body: JSON.stringify({ DetectionRuleID: null, TransactionID: null, StationID: k.value, UserID: N.value.id, RiskScore: n.riskScore.toString(), Severity: n.severity, FraudType: "Inventory Adjustment", Description: `Suspicious inventory adjustment: ${n.flags.join(", ")}`, DetectedAt: s, Status: "Open", ResolvedBy: null, ResolvedAt: null, Notes: `Product: ${t.productName}, Change: ${t.quantityChange}, Reason: ${t.reason}`, CreatedAt: s, UpdatedAt: s }) }) } catch (r) { console.error("Failed to log to FraudDetectionLogs:", r) } }, xt = async () => { if (k.value) try { const a = await D(`/Tanks?StationID=${k.value}`); F.value = a.records || [], console.log("Loaded station tanks:", F.value.length), await H("VIEW_STATION_TANKS", { tableName: "Tanks", details: { recordCount: F.value.length } }) } catch (a) { console.error("Failed to load station tanks:", a), F.value = [] } }, K = async () => { if (!k.value) { O.fire({ title: "No Station Assigned", text: "You are not assigned to any station", icon: "warning", confirmButtonColor: "#f1416c" }); return } T.value = !0; try { const a = await D(`/StationInventory?StationID=${k.value}`); V.value = a.records || [], console.log("Loaded station inventory:", V.value.length), await H("VIEW_STATION_INVENTORY", { tableName: "StationInventory", details: { recordCount: V.value.length } }) } catch (a) { console.error("Failed to load station inventory:", a), V.value = [], O.fire({ title: "Load Failed", text: "Failed to load station inventory data", icon: "error", confirmButtonColor: "#f1416c" }) } finally { T.value = !1 } }, wt = async () => { try { const a = await D("/users"); B.value = a.records || [], console.log("Loaded users:", B.value.length) } catch (a) { console.error("Failed to load users:", a), B.value = [] } }, kt = async () => { try { const a = await D("/Products"); M.value = a.records || [], console.log("Loaded products:", M.value.length) } catch (a) { console.error("Failed to load products:", a), M.value = [] } }, X = async () => { if (k.value) try { const a = await D(`/InventoryHistory?StationID=${k.value}&limit=100`); I.value = (a.records || []).sort((t, n) => new Date(n.ChangeDate) - new Date(t.ChangeDate)), console.log("Loaded adjustment history:", I.value.length), await H("VIEW_ADJUSTMENT_HISTORY", { tableName: "InventoryHistory", details: { recordCount: I.value.length } }) } catch (a) { console.error("Failed to load adjustment history:", a), I.value = [] } }, Ct = () => { var t; Object.keys(u).forEach(n => { u[n] = "" }); let a = !0; return o.ProductID || (u.ProductID = "Product selection is required", a = !1), o.ChangeType || (u.ChangeType = "Adjustment type is required", a = !1), !o.QuantityChange || o.QuantityChange === "0" ? (u.QuantityChange = "Quantity change is required and cannot be zero", a = !1) : isNaN(parseFloat(o.QuantityChange)) && (u.QuantityChange = "Quantity change must be a valid number", a = !1), (t = o.ReasonForChange) != null && t.trim() ? o.ReasonForChange.trim().length < 10 && (u.ReasonForChange = "Reason must be at least 10 characters", a = !1) : (u.ReasonForChange = "Reason is required", a = !1), a }, St = async () => { var s, i, r; if (!Ct()) return; const a = parseFloat(o.QuantityChange), t = parseFloat(((s = x.value) == null ? void 0 : s.CurrentStock) || 0), n = t + a; if (n < 0) { O.fire({ title: "Invalid Adjustment", text: "Adjustment would result in negative stock. Please check your values.", icon: "error", confirmButtonColor: "#f1416c" }); return } T.value = !0, console.log("Starting adjustment creation with data:", { productId: o.ProductID, changeType: o.ChangeType, quantityChange: a, newStock: n, stationId: k.value }); try { const c = Q.value.find(w => w.ProductID == o.ProductID), y = parseFloat((c == null ? void 0 : c.UnitPrice) || 0), m = a * y, f = new Date().toISOString(), $ = bt({ ...o, QuantityChange: a, totalValue: m }), q = { StationID: k.value, ProductID: parseInt(o.ProductID), TankID: null, PumpID: null, TransactionID: null, TransferID: null, ChangeDate: f, ChangeType: o.ChangeType, PreviousQuantity: t.toString(), QuantityChange: a.toString(), NewQuantity: n.toString(), UnitPrice: y.toString(), TotalValue: m.toString(), ReasonForChange: o.ReasonForChange, AdjustmentCategory: o.ChangeType, BatchNumber: o.BatchNumber || null, ExpiryDate: null, QualityCheck: "Passed", MeasurementMethod: o.MeasurementMethod, MeasurementDetails: o.Notes || null, AuthorizedBy: (i = N.value.id) == null ? void 0 : i.toString(), RecordedBy: (r = N.value.id) == null ? void 0 : r.toString(), VerifiedBy: null, Notes: o.Notes || null, AdditionalProperties: JSON.stringify({ fraudRisk: $.riskLevel, userAgent: navigator.userAgent, clientTimestamp: f }), CreatedAt: f }; let _ = {}; try { console.log("Creating inventory history with data:", q), _ = await D("/InventoryHistory", { method: "POST", body: JSON.stringify(q) }), console.log("History creation response:", _) } catch (w) { console.error("Failed to create inventory history:", w) } try { if (x.value) { console.log("Updating existing inventory record:", x.value.InventoryID); const w = await D(`/StationInventory/${x.value.InventoryID}`, { method: "PATCH", body: JSON.stringify({ CurrentStock: n.toString(), LastUpdated: f }) }); console.log("Inventory update response:", w) } else { console.log("Creating new inventory record for product:", o.ProductID); const w = await D("/StationInventory", { method: "POST", body: JSON.stringify({ StationID: k.value, ProductID: parseInt(o.ProductID), CurrentStock: n.toString(), LastUpdated: f }) }); console.log("Inventory creation response:", w) } } catch (w) { throw console.error("Failed to update station inventory:", w), new Error("Failed to update inventory record") } await H("CREATE_INVENTORY_ADJUSTMENT", { tableName: "InventoryHistory", recordId: (_ == null ? void 0 : _.id) || (_ == null ? void 0 : _.HistoryID) || null, productId: o.ProductID, productName: c == null ? void 0 : c.Name, quantityChange: a.toString(), reason: o.ReasonForChange, notes: o.Notes, oldValues: { CurrentStock: t }, newValues: { CurrentStock: n }, details: { changeType: o.ChangeType, measurementMethod: o.MeasurementMethod, batchNumber: o.BatchNumber, totalValue: m } }, $), await O.fire({ title: "Adjustment Created!", text: `${c == null ? void 0 : c.Name} stock adjusted by ${a >= 0 ? "+" : ""}${a} units`, icon: "success", toast: !0, position: "top-end", timer: 3e3, showConfirmButton: !1 }), Object.assign(o, { ProductID: "", ChangeType: "", QuantityChange: "", ReasonForChange: "", Notes: "", BatchNumber: "", MeasurementMethod: "Manual Count" }), Object.assign(u, {}); try { await Promise.all([K(), X()]), ut(() => { lt() }), b.value = "history" } catch (w) { console.error("Failed to refresh data after adjustment:", w), O.fire({ title: "Refresh Warning", text: "Adjustment created successfully, but failed to refresh display. Please refresh manually.", icon: "warning", confirmButtonColor: "#3699ff" }) } } catch (c) { console.error("Adjustment creation error:", c); let y = "Failed to create inventory adjustment"; c.message.includes("Failed to update inventory record") ? y = "Failed to update inventory record. Please try again." : c.message.includes("API Error: 401") ? y = "Authentication failed. Please login again." : c.message.includes("API Error: 403") ? y = "Access denied. You may not have permission to make adjustments." : c.message.includes("API Error: 500") ? y = "Server error. Please contact support if this continues." : c.message && (y = c.message), await O.fire({ title: "Adjustment Failed", text: y, icon: "error", confirmButtonColor: "#f1416c" }) } finally { T.value = !1 } }, lt = () => { if (z.value) { const a = vt(z.value), t = [], n = []; for (let i = 29; i >= 0; i--) { const r = new Date(Date.now() - i * 24 * 60 * 60 * 1e3); t.push(r.toISOString().split("T")[0]); const y = I.value.filter(m => m.ChangeDate && m.ChangeDate.split("T")[0] === r.toISOString().split("T")[0]).reduce((m, f) => m + parseFloat(f.TotalValue || 0), 0); n.push(y) } const s = { title: { text: "Daily Financial Impact", left: "center", textStyle: { fontSize: 16, fontWeight: "bold" } }, tooltip: { trigger: "axis", formatter: function (i) { const r = i[0].value; return `${i[0].name}<br/>Impact: ${g(r)}` } }, xAxis: { type: "category", data: t, axisLabel: { formatter: function (i) { return new Date(i).toLocaleDateString("en-US", { month: "short", day: "numeric" }) } } }, yAxis: { type: "value", axisLabel: { formatter: function (i) { return g(i) } } }, series: [{ data: n, type: "line", smooth: !0, areaStyle: { color: { type: "linear", x: 0, y: 0, x2: 0, y2: 1, colorStops: [{ offset: 0, color: "rgba(54, 153, 255, 0.3)" }, { offset: 1, color: "rgba(54, 153, 255, 0.05)" }] } }, lineStyle: { color: "#3699ff", width: 3 }, itemStyle: { color: "#3699ff" } }] }; a.setOption(s) } if (Y.value) { const a = vt(Y.value), t = Q.value.map(s => { const i = U.value.find(y => y.ProductID === s.ProductID), c = parseFloat((i == null ? void 0 : i.CurrentStock) || 0) * parseFloat(s.UnitPrice || 0); return { name: s.Name, value: c } }).filter(s => s.value > 0), n = { title: { text: "Inventory Value by Product", left: "center", textStyle: { fontSize: 16, fontWeight: "bold" } }, tooltip: { trigger: "item", formatter: function (s) { return `${s.name}<br/>Value: ${g(s.value)}<br/>Percentage: ${s.percent}%` } }, series: [{ type: "pie", radius: ["40%", "70%"], data: t, emphasis: { itemStyle: { shadowBlur: 10, shadowOffsetX: 0, shadowColor: "rgba(0, 0, 0, 0.5)" } } }] }; a.setOption(n) } }, it = a => { const t = M.value.find(n => n.ProductID === a); return (t == null ? void 0 : t.Name) || "Unknown Product" }, Z = () => { if (!o.ProductID) return 0; const a = Q.value.find(t => t.ProductID == o.ProductID); return parseFloat((a == null ? void 0 : a.UnitPrice) || 0) }, It = () => I.value.filter(t => t.ProductID == o.ProductID && new Date(t.ChangeDate) > new Date(Date.now() - 864e5)).length >= 3, rt = () => !x.value || !o.QuantityChange ? 0 : parseFloat(x.value.CurrentStock) + parseFloat(o.QuantityChange), tt = a => { const t = Q.value.find(i => i.ProductID === a.ProductID), n = parseFloat((t == null ? void 0 : t.UnitPrice) || 0), s = parseFloat(a.CurrentStock || 0); return n * s }, E = () => { if (!o.QuantityChange) return 0; const a = Z(); return parseFloat(o.QuantityChange) * a }, Dt = () => { if (!x.value || !o.QuantityChange) return 0; const a = rt(), t = Z(); return a * t }, _t = () => { u.ProductID = "" }, J = (a, t) => { o.ChangeType = a, o.ReasonForChange = t, u.ChangeType = "", u.ReasonForChange = "" }, Pt = a => { const t = parseFloat(a || 0); return t > 500 ? "Optimal" : t > 100 ? "Low" : "Critical" }, dt = a => { const t = parseFloat(a || 0); return t > 500 ? "badge-success" : t > 100 ? "badge-warning" : "badge-danger" }, Tt = a => { if (!a) return "Unknown User"; if (N.value.id && N.value.id == a) return N.value.name || N.value.email || `User #${a}`; const t = B.value.find(n => n.id == a); return t ? t.name || t.email || t.username || `User #${a}` : `User #${a}` }, j = a => parseFloat(a || 0).toLocaleString("en-US", { minimumFractionDigits: 2, maximumFractionDigits: 2 }), Ft = a => a ? new Date(a).toLocaleString("en-US", { year: "numeric", month: "short", day: "numeric", hour: "2-digit", minute: "2-digit" }) : "N/A", Nt = a => a ? new Date(a).toLocaleDateString("en-US", { year: "numeric", month: "short", day: "numeric" }) : "N/A", At = a => a ? new Date(a).toLocaleTimeString("en-US", { hour: "2-digit", minute: "2-digit" }) : "N/A", g = a => new Intl.NumberFormat("en-UG", { style: "currency", currency: "UGX", minimumFractionDigits: 0 }).format(a || 0); return Vt(async () => { if (!k.value) { O.fire({ title: "Station Required", text: "You must be assigned to a station to manage inventory", icon: "warning", confirmButtonColor: "#f1416c" }); return } await xt(), await Promise.all([wt(), kt(), K(), X()]), ut(() => { lt() }) }), (a, t) => { var n; return p(), v("div", Ot, [e("div", Rt, [e("div", Lt, [t[17] || (t[17] = d('<div class="card-title" data-v-e51e940a><div class="d-flex align-items-center" data-v-e51e940a><div class="symbol symbol-50px me-4" data-v-e51e940a><div class="symbol-label bg-light-primary" data-v-e51e940a><i class="ki-duotone ki-cube-2 fs-2hx text-primary" data-v-e51e940a><span class="path1" data-v-e51e940a></span><span class="path2" data-v-e51e940a></span><span class="path3" data-v-e51e940a></span></i></div></div><div data-v-e51e940a><h1 class="fw-bold text-gray-900 mb-1" data-v-e51e940a>Non-Fuel Inventory Management</h1><div class="text-muted fs-6" data-v-e51e940a>Station-level inventory control for lubricants, gas, and other products</div></div></div></div>', 1)), e("div", Mt, [e("div", Qt, [e("div", $t, [t[15] || (t[15] = e("i", { class: "ki-duotone ki-geolocation fs-6 me-1" }, [e("span", { class: "path1" }), e("span", { class: "path2" })], -1)), R(" " + l(((n = nt.value) == null ? void 0 : n.Name) || "No Station Selected"), 1)]), t[16] || (t[16] = e("div", { class: "badge badge-light-success fs-7 px-4 py-2" }, [e("i", { class: "ki-duotone ki-check-circle fs-6 me-1" }, [e("span", { class: "path1" }), e("span", { class: "path2" })]), R(" Online ")], -1))])])])]), t[93] || (t[93] = d('<div class="alert alert-dismissible bg-light-info border border-info d-flex align-items-center" data-v-e51e940a><div class="symbol symbol-40px me-4" data-v-e51e940a><div class="symbol-label bg-info" data-v-e51e940a><i class="ki-duotone ki-information-5 fs-2 text-white" data-v-e51e940a><span class="path1" data-v-e51e940a></span><span class="path2" data-v-e51e940a></span><span class="path3" data-v-e51e940a></span></i></div></div><div class="flex-grow-1" data-v-e51e940a><h6 class="mb-1 text-gray-800" data-v-e51e940a>Non-Fuel Products Only</h6><div class="text-gray-700" data-v-e51e940a>This view manages lubricants, gas cylinders, and other non-fuel products. Fuel products (petrol, diesel, kerosene) are managed separately through the fuel management system.</div></div></div>', 1)), e("div", Et, [e("div", Bt, [e("div", Ht, [e("div", Jt, [e("div", qt, [t[19] || (t[19] = d('<div class="symbol symbol-40px me-3" data-v-e51e940a><div class="symbol-label bg-light-success" data-v-e51e940a><i class="ki-duotone ki-arrow-up fs-1 text-success" data-v-e51e940a><span class="path1" data-v-e51e940a></span><span class="path2" data-v-e51e940a></span></i></div></div>', 1)), e("div", Gt, [e("div", Wt, l(g(A.value.totalInventoryValue)), 1), t[18] || (t[18] = e("div", { class: "fs-7 text-muted" }, "Total Inventory Value", -1))])]), t[20] || (t[20] = e("div", { class: "progress h-6px bg-light-success" }, [e("div", { class: "progress-bar bg-success", style: { width: "85%" } })], -1))])])]), e("div", zt, [e("div", Yt, [e("div", Kt, [e("div", Xt, [t[22] || (t[22] = d('<div class="symbol symbol-40px me-3" data-v-e51e940a><div class="symbol-label bg-light-warning" data-v-e51e940a><i class="ki-duotone ki-chart-line-up fs-1 text-warning" data-v-e51e940a><span class="path1" data-v-e51e940a></span><span class="path2" data-v-e51e940a></span></i></div></div>', 1)), e("div", Zt, [e("div", te, l(g(Math.abs(A.value.adjustmentImpact))), 1), t[21] || (t[21] = e("div", { class: "fs-7 text-muted" }, "30-Day Adjustment Impact", -1))])]), t[23] || (t[23] = e("div", { class: "progress h-6px bg-light-warning" }, [e("div", { class: "progress-bar bg-warning", style: { width: "65%" } })], -1))])])]), e("div", ee, [e("div", ae, [e("div", se, [e("div", oe, [t[25] || (t[25] = d('<div class="symbol symbol-40px me-3" data-v-e51e940a><div class="symbol-label bg-light-danger" data-v-e51e940a><i class="ki-duotone ki-arrow-down fs-1 text-danger" data-v-e51e940a><span class="path1" data-v-e51e940a></span><span class="path2" data-v-e51e940a></span></i></div></div>', 1)), e("div", ne, [e("div", le, l(g(A.value.totalLosses)), 1), t[24] || (t[24] = e("div", { class: "fs-7 text-muted" }, "Total Losses (30 Days)", -1))])]), t[26] || (t[26] = e("div", { class: "progress h-6px bg-light-danger" }, [e("div", { class: "progress-bar bg-danger", style: { width: "25%" } })], -1))])])]), e("div", ie, [e("div", re, [e("div", de, [e("div", ce, [t[28] || (t[28] = d('<div class="symbol symbol-40px me-3" data-v-e51e940a><div class="symbol-label bg-light-info" data-v-e51e940a><i class="ki-duotone ki-abstract-39 fs-1 text-info" data-v-e51e940a><span class="path1" data-v-e51e940a></span><span class="path2" data-v-e51e940a></span></i></div></div>', 1)), e("div", ue, [e("div", ve, l(ft.value.totalProducts), 1), t[27] || (t[27] = e("div", { class: "fs-7 text-muted" }, "Non-Fuel Products", -1))])]), t[29] || (t[29] = e("div", { class: "progress h-6px bg-light-info" }, [e("div", { class: "progress-bar bg-info", style: { width: "95%" } })], -1))])])])]), e("div", pe, [e("div", me, [e("ul", ge, [e("li", ye, [e("a", { class: h(["nav-link text-center py-4 px-6", { active: b.value === "current" }]), onClick: t[0] || (t[0] = s => b.value = "current"), href: "#" }, t[30] || (t[30] = [d('<span class="nav-icon mb-3" data-v-e51e940a><i class="ki-duotone ki-element-7 fs-2hx" data-v-e51e940a><span class="path1" data-v-e51e940a></span><span class="path2" data-v-e51e940a></span></i></span><span class="nav-text" data-v-e51e940a>Non-Fuel Stock</span>', 2)]), 2)]), e("li", he, [e("a", { class: h(["nav-link text-center py-4 px-6", { active: b.value === "adjust" }]), onClick: t[1] || (t[1] = s => b.value = "adjust"), href: "#" }, t[31] || (t[31] = [d('<span class="nav-icon mb-3" data-v-e51e940a><i class="ki-duotone ki-pencil fs-2hx" data-v-e51e940a><span class="path1" data-v-e51e940a></span><span class="path2" data-v-e51e940a></span></i></span><span class="nav-text" data-v-e51e940a>Make Adjustment</span>', 2)]), 2)]), e("li", fe, [e("a", { class: h(["nav-link text-center py-4 px-6", { active: b.value === "history" }]), onClick: t[2] || (t[2] = s => b.value = "history"), href: "#" }, t[32] || (t[32] = [d('<span class="nav-icon mb-3" data-v-e51e940a><i class="ki-duotone ki-time fs-2hx" data-v-e51e940a><span class="path1" data-v-e51e940a></span><span class="path2" data-v-e51e940a></span></i></span><span class="nav-text" data-v-e51e940a>History</span>', 2)]), 2)]), e("li", be, [e("a", { class: h(["nav-link text-center py-4 px-6", { active: b.value === "analytics" }]), onClick: t[3] || (t[3] = s => b.value = "analytics"), href: "#" }, t[33] || (t[33] = [d('<span class="nav-icon mb-3" data-v-e51e940a><i class="ki-duotone ki-chart-pie fs-2hx" data-v-e51e940a><span class="path1" data-v-e51e940a></span><span class="path2" data-v-e51e940a></span><span class="path3" data-v-e51e940a></span></i></span><span class="nav-text" data-v-e51e940a>Analytics</span>', 2)]), 2)])])])]), e("div", xe, [S(e("div", we, [e("div", ke, [e("div", Ce, [e("div", Se, [t[35] || (t[35] = e("h3", { class: "card-title fw-bold text-gray-900" }, "Non-Fuel Station Inventory", -1)), e("div", Ie, [e("button", { class: "btn btn-sm btn-light-primary", onClick: K, disabled: T.value }, t[34] || (t[34] = [e("i", { class: "ki-duotone ki-arrows-circle fs-2" }, [e("span", { class: "path1" }), e("span", { class: "path2" })], -1), R(" Refresh Data ")]), 8, De)])]), e("div", _e, [T.value ? (p(), v("div", Pe, t[36] || (t[36] = [e("div", { class: "spinner-border spinner-border-lg text-primary", role: "status" }, null, -1), e("div", { class: "mt-5 fs-6 text-muted" }, "Loading inventory data...", -1)]))) : U.value.length ? (p(), v("div", Fe, [(p(!0), v(et, null, at(U.value, s => (p(), v("div", { key: s.InventoryID, class: "col-12 col-md-6 col-xl-4" }, [e("div", Ne, [e("div", Ae, [e("div", je, [e("div", { class: h(["badge badge-circle badge-lg", dt(s.CurrentStock)]) }, t[38] || (t[38] = [e("i", { class: "ki-duotone ki-abstract-39 fs-4" }, [e("span", { class: "path1" }), e("span", { class: "path2" })], -1)]), 2)]), t[42] || (t[42] = d('<div class="symbol symbol-75px mx-auto mb-5" data-v-e51e940a><div class="symbol-label bg-light-primary" data-v-e51e940a><i class="ki-duotone ki-abstract-39 fs-2x text-primary" data-v-e51e940a><span class="path1" data-v-e51e940a></span><span class="path2" data-v-e51e940a></span></i></div></div>', 1)), e("h5", Ve, l(it(s.ProductID)), 1), e("div", Ue, [R(l(j(s.CurrentStock)) + " ", 1), t[39] || (t[39] = e("span", { class: "fs-6 text-muted" }, "units", -1))]), e("div", Oe, [t[40] || (t[40] = e("div", { class: "fs-6 text-muted" }, "Current Value", -1)), e("div", Re, l(g(tt(s))), 1)]), e("div", Le, [e("span", { class: h(["badge badge-lg", dt(s.CurrentStock)]) }, l(Pt(s.CurrentStock)), 3)]), e("div", Me, [t[41] || (t[41] = e("i", { class: "ki-duotone ki-time fs-6 me-1" }, [e("span", { class: "path1" }), e("span", { class: "path2" })], -1)), R(" Updated: " + l(Ft(s.LastUpdated)), 1)])])])]))), 128))])) : (p(), v("div", Te, t[37] || (t[37] = [d('<div class="symbol symbol-100px mx-auto mb-7" data-v-e51e940a><div class="symbol-label bg-light-warning" data-v-e51e940a><i class="ki-duotone ki-information fs-3x text-warning" data-v-e51e940a><span class="path1" data-v-e51e940a></span><span class="path2" data-v-e51e940a></span><span class="path3" data-v-e51e940a></span></i></div></div><h4 class="text-muted" data-v-e51e940a>No non-fuel inventory records found</h4><p class="text-muted" data-v-e51e940a>This view shows only non-fuel products. Fuel products are managed separately.</p>', 3)])))])])])], 512), [[G, b.value === "current"]]), S(e("div", Qe, [e("div", $e, [e("div", Ee, [t[68] || (t[68] = e("div", { class: "card-header border-0 pt-6" }, [e("h3", { class: "card-title fw-bold text-gray-900" }, "Create Inventory Adjustment"), e("div", { class: "card-toolbar" }, [e("span", { class: "badge badge-light-info" }, "Step-by-Step Process")])], -1)), e("div", Be, [e("form", { onSubmit: Ut(St, ["prevent"]), novalidate: "" }, [e("div", He, [t[44] || (t[44] = d('<div class="d-flex align-items-center mb-4" data-v-e51e940a><div class="symbol symbol-30px me-3" data-v-e51e940a><div class="symbol-label bg-primary" data-v-e51e940a><span class="text-white fw-bold fs-6" data-v-e51e940a>1</span></div></div><h5 class="mb-0 text-gray-800" data-v-e51e940a>Select Product</h5></div>', 1)), S(e("select", { "onUpdate:modelValue": t[4] || (t[4] = s => o.ProductID = s), class: h(["form-select form-select-lg form-select-solid", { "is-invalid": u.ProductID }]), onChange: _t }, [t[43] || (t[43] = e("option", { value: "" }, "Choose a non-fuel product to adjust...", -1)), (p(!0), v(et, null, at(Q.value, s => (p(), v("option", { key: s.ProductID, value: s.ProductID }, l(s.Name) + " - " + l(s.ProductType) + " (" + l(g(s.UnitPrice)) + "/unit) ", 9, Je))), 128))], 34), [[st, o.ProductID]]), u.ProductID ? (p(), v("div", qe, l(u.ProductID), 1)) : L("", !0)]), x.value ? (p(), v("div", Ge, [e("div", We, [t[48] || (t[48] = d('<div class="symbol symbol-50px me-4" data-v-e51e940a><div class="symbol-label bg-info" data-v-e51e940a><i class="ki-duotone ki-information-5 fs-2 text-white" data-v-e51e940a><span class="path1" data-v-e51e940a></span><span class="path2" data-v-e51e940a></span><span class="path3" data-v-e51e940a></span></i></div></div>', 1)), e("div", ze, [t[47] || (t[47] = e("h6", { class: "mb-1 text-gray-800" }, "Current Stock Information", -1)), e("div", Ye, [e("div", Ke, [t[45] || (t[45] = e("div", { class: "fs-7 text-muted" }, "Current Stock", -1)), e("div", Xe, l(j(x.value.CurrentStock)) + " units", 1)]), e("div", Ze, [t[46] || (t[46] = e("div", { class: "fs-7 text-muted" }, "Current Value", -1)), e("div", ta, l(g(tt(x.value))), 1)])])])])])) : L("", !0), e("div", ea, [t[55] || (t[55] = d('<div class="d-flex align-items-center mb-4" data-v-e51e940a><div class="symbol symbol-30px me-3" data-v-e51e940a><div class="symbol-label bg-warning" data-v-e51e940a><span class="text-white fw-bold fs-6" data-v-e51e940a>2</span></div></div><h5 class="mb-0 text-gray-800" data-v-e51e940a>Adjustment Details</h5></div>', 1)), e("div", aa, [e("div", sa, [t[50] || (t[50] = e("label", { class: "required form-label fw-semibold" }, "Adjustment Type", -1)), S(e("select", { "onUpdate:modelValue": t[5] || (t[5] = s => o.ChangeType = s), class: h(["form-select form-select-lg form-select-solid", { "is-invalid": u.ChangeType }]) }, t[49] || (t[49] = [d('<option value="" data-v-e51e940a>Select adjustment type...</option><option value="Physical Count" data-v-e51e940a>Physical Count Adjustment</option><option value="Loss Adjustment" data-v-e51e940a>Loss/Shrinkage</option><option value="Found Inventory" data-v-e51e940a>Found Inventory</option><option value="Quality Control" data-v-e51e940a>Quality Control</option><option value="Transfer Correction" data-v-e51e940a>Transfer Correction</option><option value="System Correction" data-v-e51e940a>System Correction</option><option value="Delivery" data-v-e51e940a>Delivery Received</option><option value="Other" data-v-e51e940a>Other</option>', 9)]), 2), [[st, o.ChangeType]]), u.ChangeType ? (p(), v("div", oa, l(u.ChangeType), 1)) : L("", !0)]), e("div", na, [t[53] || (t[53] = e("label", { class: "required form-label fw-semibold" }, "Quantity Change", -1)), e("div", la, [t[51] || (t[51] = e("span", { class: "input-group-text" }, "±", -1)), S(e("input", { "onUpdate:modelValue": t[6] || (t[6] = s => o.QuantityChange = s), type: "number", step: "0.01", class: h(["form-control form-control-lg form-control-solid", { "is-invalid": u.QuantityChange }]), placeholder: "Enter adjustment amount" }, null, 2), [[W, o.QuantityChange]]), t[52] || (t[52] = e("span", { class: "input-group-text" }, "units", -1))]), u.QuantityChange ? (p(), v("div", ia, l(u.QuantityChange), 1)) : L("", !0), t[54] || (t[54] = e("div", { class: "form-text" }, "Use negative numbers for stock reductions", -1))])])]), e("div", ra, [t[61] || (t[61] = d('<div class="d-flex align-items-center mb-4" data-v-e51e940a><div class="symbol symbol-30px me-3" data-v-e51e940a><div class="symbol-label bg-success" data-v-e51e940a><span class="text-white fw-bold fs-6" data-v-e51e940a>3</span></div></div><h5 class="mb-0 text-gray-800" data-v-e51e940a>Documentation &amp; Details</h5></div>', 1)), e("div", da, [e("div", ca, [t[56] || (t[56] = e("label", { class: "required form-label fw-semibold" }, "Reason for Adjustment", -1)), S(e("input", { "onUpdate:modelValue": t[7] || (t[7] = s => o.ReasonForChange = s), type: "text", class: h(["form-control form-control-lg form-control-solid", { "is-invalid": u.ReasonForChange }]), placeholder: "Provide a detailed explanation for this adjustment" }, null, 2), [[W, o.ReasonForChange]]), u.ReasonForChange ? (p(), v("div", ua, l(u.ReasonForChange), 1)) : L("", !0)]), e("div", va, [t[57] || (t[57] = e("label", { class: "form-label fw-semibold" }, "Additional Notes", -1)), S(e("textarea", { "onUpdate:modelValue": t[8] || (t[8] = s => o.Notes = s), class: "form-control form-control-solid", rows: "4", placeholder: "Any additional observations, batch numbers, or supporting information..." }, null, 512), [[W, o.Notes]])]), e("div", pa, [t[59] || (t[59] = e("label", { class: "form-label fw-semibold" }, "Batch Number", -1)), S(e("input", { "onUpdate:modelValue": t[9] || (t[9] = s => o.BatchNumber = s), type: "text", class: "form-control form-control-lg form-control-solid", placeholder: "Optional batch or lot number" }, null, 512), [[W, o.BatchNumber]]), t[60] || (t[60] = e("label", { class: "form-label fw-semibold mt-4" }, "Measurement Method", -1)), S(e("select", { "onUpdate:modelValue": t[10] || (t[10] = s => o.MeasurementMethod = s), class: "form-select form-select-solid" }, t[58] || (t[58] = [d('<option value="Manual Count" data-v-e51e940a>Manual Count</option><option value="Tank Dipping" data-v-e51e940a>Tank Dipping</option><option value="Meter Reading" data-v-e51e940a>Meter Reading</option><option value="Electronic Gauge" data-v-e51e940a>Electronic Gauge</option><option value="Calculated" data-v-e51e940a>Calculated</option><option value="System Generated" data-v-e51e940a>System Generated</option>', 6)]), 512), [[st, o.MeasurementMethod]])])])]), x.value && o.QuantityChange ? (p(), v("div", ma, [t[66] || (t[66] = d('<div class="d-flex align-items-center mb-4" data-v-e51e940a><div class="symbol symbol-40px me-3" data-v-e51e940a><div class="symbol-label bg-primary" data-v-e51e940a><i class="ki-duotone ki-chart-pie fs-2 text-white" data-v-e51e940a><span class="path1" data-v-e51e940a></span><span class="path2" data-v-e51e940a></span><span class="path3" data-v-e51e940a></span></i></div></div><h6 class="mb-0 text-gray-800" data-v-e51e940a>Financial Impact Preview</h6></div>', 1)), e("div", ga, [e("div", ya, [t[62] || (t[62] = e("div", { class: "fs-7 text-muted" }, "Current Stock", -1)), e("div", ha, l(j(x.value.CurrentStock)), 1), e("div", fa, l(g(tt(x.value))), 1)]), e("div", ba, [t[63] || (t[63] = e("div", { class: "fs-7 text-muted" }, "Adjustment", -1)), e("div", { class: h(["fs-5 fw-bold", parseFloat(o.QuantityChange) >= 0 ? "text-success" : "text-danger"]) }, l(parseFloat(o.QuantityChange) >= 0 ? "+" : "") + l(j(o.QuantityChange)), 3), e("div", { class: h(["fs-7", parseFloat(o.QuantityChange) >= 0 ? "text-success" : "text-danger"]) }, l(g(E())), 3)]), e("div", xa, [t[64] || (t[64] = e("div", { class: "fs-7 text-muted" }, "New Stock", -1)), e("div", wa, l(j(rt())), 1), e("div", ka, l(g(Dt())), 1)]), e("div", Ca, [t[65] || (t[65] = e("div", { class: "fs-7 text-muted" }, "Net Impact", -1)), e("div", { class: h(["fs-5 fw-bold", E() >= 0 ? "text-success" : "text-danger"]) }, l(E() >= 0 ? "+" : "") + l(g(E())), 3), e("div", Sa, l(E() >= 0 ? "Value Added" : "Value Lost"), 1)])])])) : L("", !0), e("div", Ia, [e("button", { type: "submit", class: "btn btn-primary btn-lg px-12", disabled: T.value || !ht.value }, [T.value ? (p(), v("span", _a)) : (p(), v("i", Pa, t[67] || (t[67] = [e("span", { class: "path1" }, null, -1), e("span", { class: "path2" }, null, -1)]))), R(" " + l(T.value ? "Processing Adjustment..." : "Create Adjustment"), 1)], 8, Da)])], 32)])])]), e("div", Ta, [e("div", Fa, [t[73] || (t[73] = e("div", { class: "card-header border-0 pt-6" }, [e("h3", { class: "card-title fw-bold text-gray-900" }, "Quick Actions")], -1)), e("div", Na, [e("div", Aa, [e("button", { class: "btn btn-light-success btn-lg text-start", onClick: t[11] || (t[11] = s => J("Physical Count", "Monthly physical stock count verification")) }, t[69] || (t[69] = [d('<div class="d-flex align-items-center" data-v-e51e940a><div class="symbol symbol-40px me-4" data-v-e51e940a><div class="symbol-label bg-success" data-v-e51e940a><i class="ki-duotone ki-search-list fs-2 text-white" data-v-e51e940a><span class="path1" data-v-e51e940a></span><span class="path2" data-v-e51e940a></span><span class="path3" data-v-e51e940a></span></i></div></div><div data-v-e51e940a><div class="fw-bold" data-v-e51e940a>Physical Count</div><div class="fs-7 text-muted" data-v-e51e940a>Stock verification</div></div></div>', 1)])), e("button", { class: "btn btn-light-warning btn-lg text-start", onClick: t[12] || (t[12] = s => J("Loss Adjustment", "Stock loss due to evaporation or spillage")) }, t[70] || (t[70] = [d('<div class="d-flex align-items-center" data-v-e51e940a><div class="symbol symbol-40px me-4" data-v-e51e940a><div class="symbol-label bg-warning" data-v-e51e940a><i class="ki-duotone ki-arrow-down fs-2 text-white" data-v-e51e940a><span class="path1" data-v-e51e940a></span><span class="path2" data-v-e51e940a></span></i></div></div><div data-v-e51e940a><div class="fw-bold" data-v-e51e940a>Record Loss</div><div class="fs-7 text-muted" data-v-e51e940a>Evaporation, spillage</div></div></div>', 1)])), e("button", { class: "btn btn-light-info btn-lg text-start", onClick: t[13] || (t[13] = s => J("Delivery", "Stock replenishment from supplier delivery")) }, t[71] || (t[71] = [d('<div class="d-flex align-items-center" data-v-e51e940a><div class="symbol symbol-40px me-4" data-v-e51e940a><div class="symbol-label bg-info" data-v-e51e940a><i class="ki-duotone ki-truck fs-2 text-white" data-v-e51e940a><span class="path1" data-v-e51e940a></span><span class="path2" data-v-e51e940a></span><span class="path3" data-v-e51e940a></span><span class="path4" data-v-e51e940a></span></i></div></div><div data-v-e51e940a><div class="fw-bold" data-v-e51e940a>New Delivery</div><div class="fs-7 text-muted" data-v-e51e940a>Supplier replenishment</div></div></div>', 1)])), e("button", { class: "btn btn-light-primary btn-lg text-start", onClick: t[14] || (t[14] = s => J("Transfer Correction", "Correction for inter-station transfer discrepancy")) }, t[72] || (t[72] = [d('<div class="d-flex align-items-center" data-v-e51e940a><div class="symbol symbol-40px me-4" data-v-e51e940a><div class="symbol-label bg-primary" data-v-e51e940a><i class="ki-duotone ki-arrows-loop fs-2 text-white" data-v-e51e940a><span class="path1" data-v-e51e940a></span><span class="path2" data-v-e51e940a></span></i></div></div><div data-v-e51e940a><div class="fw-bold" data-v-e51e940a>Transfer Fix</div><div class="fs-7 text-muted" data-v-e51e940a>Discrepancy correction</div></div></div>', 1)]))])])])])], 512), [[G, b.value === "adjust"]]), S(e("div", ja, [e("div", Va, [e("div", Ua, [e("div", { class: "card-header border-0 pt-6" }, [t[75] || (t[75] = e("h3", { class: "card-title fw-bold text-gray-900" }, "Adjustment History", -1)), e("div", { class: "card-toolbar" }, [e("button", { class: "btn btn-sm btn-light-primary", onClick: X }, t[74] || (t[74] = [e("i", { class: "ki-duotone ki-arrows-circle fs-2" }, [e("span", { class: "path1" }), e("span", { class: "path2" })], -1), R(" Refresh ")]))])]), e("div", Oa, [I.value.length ? (p(), v("div", La, [e("table", Ma, [t[78] || (t[78] = e("thead", { class: "bg-light" }, [e("tr", { class: "fw-semibold fs-6 text-gray-800 border-bottom-2 border-gray-200" }, [e("th", { class: "min-w-150px" }, "Date & Time"), e("th", { class: "min-w-150px" }, "Product"), e("th", { class: "min-w-100px" }, "Type"), e("th", { class: "min-w-100px text-end" }, "Previous Stock"), e("th", { class: "min-w-100px text-end" }, "Change"), e("th", { class: "min-w-100px text-end" }, "New Stock"), e("th", { class: "min-w-120px text-end" }, "Financial Impact"), e("th", { class: "min-w-200px" }, "Reason"), e("th", { class: "min-w-100px" }, "User")])], -1)), e("tbody", null, [(p(!0), v(et, null, at(I.value, s => (p(), v("tr", { key: s.HistoryID, class: "hover-bg-light" }, [e("td", null, [e("div", Qa, l(Nt(s.ChangeDate)), 1), e("div", $a, l(At(s.ChangeDate)), 1)]), e("td", null, [e("div", Ea, [t[77] || (t[77] = d('<div class="symbol symbol-30px me-3" data-v-e51e940a><div class="symbol-label bg-light-primary" data-v-e51e940a><i class="ki-duotone ki-abstract-39 fs-6 text-primary" data-v-e51e940a><span class="path1" data-v-e51e940a></span><span class="path2" data-v-e51e940a></span></i></div></div>', 1)), e("div", Ba, l(it(s.ProductID)), 1)])]), e("td", null, [e("span", Ha, l(s.ChangeType), 1)]), e("td", Ja, l(j(s.PreviousQuantity)), 1), e("td", qa, [e("span", { class: h(["fw-bold", parseFloat(s.QuantityChange) >= 0 ? "text-success" : "text-danger"]) }, l(parseFloat(s.QuantityChange) >= 0 ? "+" : "") + l(j(s.QuantityChange)), 3)]), e("td", Ga, l(j(s.NewQuantity)), 1), e("td", Wa, [e("span", { class: h(["fw-bold", parseFloat(s.TotalValue || 0) >= 0 ? "text-success" : "text-danger"]) }, l(g(s.TotalValue || 0)), 3)]), e("td", null, [e("div", za, l(s.ReasonForChange || "N/A"), 1), s.Notes ? (p(), v("div", Ya, l(s.Notes), 1)) : L("", !0)]), e("td", null, l(Tt(s.RecordedBy)), 1)]))), 128))])])])) : (p(), v("div", Ra, t[76] || (t[76] = [d('<div class="symbol symbol-100px mx-auto mb-7" data-v-e51e940a><div class="symbol-label bg-light-info" data-v-e51e940a><i class="ki-duotone ki-file-deleted fs-3x text-info" data-v-e51e940a><span class="path1" data-v-e51e940a></span><span class="path2" data-v-e51e940a></span></i></div></div><h4 class="text-muted" data-v-e51e940a>No adjustment history found</h4><p class="text-muted" data-v-e51e940a>Your adjustment history will appear here once you make adjustments.</p>', 3)])))])])])], 512), [[G, b.value === "history"]]), S(e("div", Ka, [e("div", Xa, [e("div", Za, [t[79] || (t[79] = e("div", { class: "card-header border-0 pt-6" }, [e("h3", { class: "card-title fw-bold text-gray-900" }, "Financial Impact Trends"), e("div", { class: "card-toolbar" }, [e("span", { class: "badge badge-light-info" }, "30-Day Overview")])], -1)), e("div", ts, [e("div", { ref_key: "financialChart", ref: z, style: { width: "100%", height: "400px" } }, null, 512)])])]), e("div", es, [e("div", as, [t[91] || (t[91] = e("div", { class: "card-header border-0 pt-6" }, [e("h3", { class: "card-title fw-bold text-gray-900" }, "Key Metrics")], -1)), e("div", ss, [e("div", os, [e("div", ns, [e("div", ls, [t[81] || (t[81] = d('<div class="symbol symbol-40px me-3" data-v-e51e940a><div class="symbol-label bg-light-success" data-v-e51e940a><i class="ki-duotone ki-arrow-up fs-2 text-success" data-v-e51e940a><span class="path1" data-v-e51e940a></span><span class="path2" data-v-e51e940a></span></i></div></div>', 1)), e("div", null, [t[80] || (t[80] = e("div", { class: "fs-6 text-muted" }, "Total Gains", -1)), e("div", is, l(g(A.value.totalGains)), 1)])])]), t[88] || (t[88] = e("div", { class: "separator" }, null, -1)), e("div", rs, [e("div", ds, [t[83] || (t[83] = d('<div class="symbol symbol-40px me-3" data-v-e51e940a><div class="symbol-label bg-light-danger" data-v-e51e940a><i class="ki-duotone ki-arrow-down fs-2 text-danger" data-v-e51e940a><span class="path1" data-v-e51e940a></span><span class="path2" data-v-e51e940a></span></i></div></div>', 1)), e("div", null, [t[82] || (t[82] = e("div", { class: "fs-6 text-muted" }, "Total Losses", -1)), e("div", cs, l(g(Math.abs(A.value.totalLosses))), 1)])])]), t[89] || (t[89] = e("div", { class: "separator" }, null, -1)), e("div", us, [e("div", vs, [t[85] || (t[85] = d('<div class="symbol symbol-40px me-3" data-v-e51e940a><div class="symbol-label bg-light-primary" data-v-e51e940a><i class="ki-duotone ki-chart-line-up fs-2 text-primary" data-v-e51e940a><span class="path1" data-v-e51e940a></span><span class="path2" data-v-e51e940a></span></i></div></div>', 1)), e("div", null, [t[84] || (t[84] = e("div", { class: "fs-6 text-muted" }, "Net Impact", -1)), e("div", { class: h(["fs-5 fw-bold", A.value.netImpact >= 0 ? "text-success" : "text-danger"]) }, l(g(A.value.netImpact)), 3)])])]), t[90] || (t[90] = e("div", { class: "separator" }, null, -1)), e("div", ps, [e("div", ms, [t[87] || (t[87] = d('<div class="symbol symbol-40px me-3" data-v-e51e940a><div class="symbol-label bg-light-warning" data-v-e51e940a><i class="ki-duotone ki-percentage fs-2 text-warning" data-v-e51e940a><span class="path1" data-v-e51e940a></span><span class="path2" data-v-e51e940a></span></i></div></div>', 1)), e("div", null, [t[86] || (t[86] = e("div", { class: "fs-6 text-muted" }, "Loss Ratio", -1)), e("div", gs, l(A.value.lossRatio) + "%", 1)])])])])])])]), e("div", ys, [e("div", hs, [t[92] || (t[92] = e("div", { class: "card-header border-0 pt-6" }, [e("h3", { class: "card-title fw-bold text-gray-900" }, "Product Performance Overview")], -1)), e("div", fs, [e("div", { ref_key: "productChart", ref: Y, style: { width: "100%", height: "300px" } }, null, 512)])])])], 512), [[G, b.value === "analytics"]])])]) } } }, Ss = jt(xs, [["__scopeId", "data-v-e51e940a"]]); export { Ss as default };
