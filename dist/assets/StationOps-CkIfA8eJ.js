import { _ as yt, r as v, a as wt, c, o as _t, q as St, d, g as H, e as t, f as m, t as n, F as T, k as P, i as $, h as S, y as k, S as y, p as u } from "./index-Fk_fMhvq.js"; const xt = { class: "d-flex flex-column gap-5 p-4" }, kt = { key: 0, class: "position-fixed top-0 start-0 w-100 h-100 d-flex align-items-center justify-content-center", style: { background: "rgba(0, 0, 0, 0.7)", "z-index": "9999" } }, Dt = { class: "card shadow-lg", style: { "max-width": "500px", width: "90%" } }, Ct = { class: "card-body p-6" }, It = { class: "text-gray-700 mb-4" }, Tt = { class: "row g-3" }, Pt = ["onClick", "disabled"], $t = { class: "flex-grow-1" }, At = { class: "fw-bold text-gray-900 mb-1" }, Ot = { class: "text-gray-600 mb-0" }, Et = { key: 1, class: "card card-flush bg-gradient-primary" }, Mt = { class: "card-body p-6" }, Bt = { class: "d-flex align-items-center justify-content-between" }, Nt = { class: "d-flex align-items-center gap-4" }, Ft = { class: "fw-bold text-white mb-1 fs-2" }, Rt = { class: "text-white opacity-75 mb-0 fs-5" }, Ut = { class: "text-end" }, Ht = { class: "text-white opacity-75 mb-0 mt-1 fs-6" }, jt = { class: "row g-4" }, Lt = { class: "col-6 col-lg-3" }, qt = { class: "card-body p-4 text-center" }, Vt = ["disabled"], zt = { class: "col-6 col-lg-3" }, Yt = { class: "card card-flush bg-light-info h-100" }, Jt = { class: "card-body p-4 text-center" }, Gt = ["disabled"], Xt = { class: "row g-4" }, Kt = { class: "col-6 col-lg-3" }, Qt = { class: "card card-flush bg-light-primary h-100" }, Wt = { class: "card-body p-4 text-center" }, Zt = { class: "fw-bold text-gray-900 mb-1" }, ta = { class: "progress h-6px mt-2" }, aa = { class: "col-6 col-lg-3" }, sa = { class: "card card-flush bg-light-success h-100" }, ea = { class: "card-body p-4 text-center" }, na = { class: "fw-bold text-gray-900 mb-1" }, oa = { class: "progress h-6px mt-2" }, ia = { class: "col-6 col-lg-3" }, la = { class: "card card-flush bg-light-warning h-100" }, ra = { class: "card-body p-4 text-center" }, ca = { class: "fw-bold text-gray-900 mb-1" }, da = { class: "progress h-6px mt-2" }, ua = { class: "col-6 col-lg-3" }, ha = { class: "card-body p-4 text-center" }, pa = { class: "fw-bold text-gray-900 mb-1" }, va = { class: "progress h-6px mt-2" }, fa = { class: "row g-5" }, ga = { class: "col-12 col-lg-8" }, ba = { class: "card card-flush h-100" }, ma = { class: "card-header py-4" }, ya = { class: "card-toolbar" }, wa = { class: "badge badge-light-success fw-bold" }, _a = { class: "card-body" }, Sa = { class: "chart-container", style: { height: "280px" } }, xa = { class: "d-flex align-items-end justify-content-between h-100 gap-1" }, ka = { class: "text-gray-600 fw-semibold" }, Da = { class: "mt-4 p-3 bg-light-info rounded" }, Ca = { class: "text-gray-800 mt-2 mb-0 fw-semibold" }, Ia = { class: "col-12 col-lg-4" }, Ta = { class: "card card-flush h-100" }, Pa = { class: "card-body" }, $a = { class: "payment-chart mb-4" }, Aa = { class: "d-flex justify-content-between align-items-center mb-1" }, Oa = { class: "fw-semibold text-gray-800" }, Ea = { class: "fw-bold text-gray-900" }, Ma = { class: "progress h-8px" }, Ba = { class: "d-flex justify-content-between py-2" }, Na = { class: "fw-bold text-success fs-5" }, Fa = { class: "card card-flush" }, Ra = { class: "card-header py-4" }, Ua = { class: "card-toolbar" }, Ha = ["disabled"], ja = { class: "card-body" }, La = { class: "row g-4" }, qa = { class: "col-12 col-md-6" }, Va = { class: "fw-bold mb-3 text-gray-800" }, za = { class: "row g-2" }, Ya = { class: "card card-flush bg-light-success h-100" }, Ja = { class: "card-body p-3 text-center" }, Ga = { class: "fw-bold mb-1" }, Xa = { class: "badge badge-success" }, Ka = { class: "mt-2" }, Qa = { class: "text-gray-600" }, Wa = { class: "col-12 col-md-6" }, Za = { class: "fw-bold mb-3 text-gray-800" }, ts = { class: "row g-2" }, as = { class: "card card-flush bg-light-info h-100" }, ss = { class: "card-body p-3 text-center" }, es = { class: "fw-bold mb-1" }, ns = { class: "progress h-6px mb-2" }, os = { class: "text-gray-600" }, is = { key: 2, class: "position-fixed top-0 start-0 w-100 h-100 d-flex align-items-center justify-content-center", style: { background: "rgba(0, 0, 0, 0.5)", "z-index": "9998" } }, ls = { class: "card shadow" }, rs = { class: "card-body text-center p-5" }, cs = { class: "fw-bold" }, ds = "https://backend.cloudfuelstationmis.com/api/records/v1", us = {
  __name: "StationOps", setup(hs) {
    const l = v(!1), D = v("Loading..."), I = v(!1), f = v({}), C = v([]), h = v({}), E = v([]), M = v([]), o = v({}), p = v("Not Clocked In"), i = wt({ totalSales: 0, totalTransactions: 0, cashBalance: 0, variance: 0 }), B = v({}), A = v({}), J = ["vexa256@gmail.com", "atimothy@ecsahc.org"], N = c(() => { var s; return J.includes((s = f.value.email) == null ? void 0 : s.toLowerCase()) }), G = c(() => o.value.DrawerID ? o.value.Status === "Open" ? "Shift Active" : "Shift Closed" : "No Active Shift"), X = c(() => o.value.DrawerID ? o.value.Status === "Open" ? "success" : "primary" : "secondary"), K = c(() => { if (!o.value.OpenedAt) return "0h 0m"; const s = new Date(o.value.OpenedAt), e = new Date - s, r = Math.floor(e / (1e3 * 60 * 60)), b = Math.floor(e % (1e3 * 60 * 60) / (1e3 * 60)); return `${r}h ${b}m` }), Q = c(() => o.value.DrawerID ? o.value.Status === "Open" ? "bg-light-danger" : "bg-light-secondary" : "bg-light-success"), W = c(() => o.value.DrawerID ? o.value.Status === "Open" ? "ki-stop text-danger" : "ki-check-circle text-secondary" : "ki-play text-success"), Z = c(() => o.value.DrawerID ? o.value.Status === "Open" ? "End Shift" : "Shift Closed" : "Start Shift"), tt = c(() => o.value.DrawerID ? o.value.Status === "Open" ? "btn-danger" : "btn-secondary" : "btn-success"), F = c(() => { const s = Math.abs(i.variance); return s > 1e5 ? "danger" : s > 5e4 ? "warning" : "success" }), at = c(() => Math.min(100, i.totalSales / 5e6 * 100)), st = c(() => Math.min(100, i.totalTransactions / 200 * 100)), j = c(() => Object.values(B.value).reduce((s, a) => s + a, 0)), R = c(() => { let s = 0, a = 0; for (const [e, r] of Object.entries(A.value)) r > s && (s = r, a = parseInt(e)); return a }), et = c(() => { const s = new Date().getHours(), a = R.value; return Math.abs(i.variance) > 1e5 ? `Critical variance detected! Review transactions around ${a}:00. Immediate supervisor notification required.` : s >= 6 && s <= 9 ? `Morning peak detected at ${a}:00. Recommend ensuring all dispensers operational for rush hour.` : s >= 17 && s <= 19 ? `Evening rush approaching. Peak historical activity at ${a}:00. Monitor cash levels closely.` : `Performance tracking normal. Peak sales historically at ${a}:00. Current variance within acceptable limits.` }), nt = () => ({ Authorization: `Bearer ${localStorage.getItem("kigrama_auth_token") || "demo_token"}`, "Content-Type": "application/json" }), g = async (s, a = {}) => { try { const e = await fetch(`${ds}${s}`, { headers: nt(), ...a }); if (!e.ok) throw new Error(`API Error: ${e.status}`); return await e.json() } catch (e) { throw console.error("API Call Error:", e), e } }, ot = () => { try { const s = localStorage.getItem("kigrama_user_data"); if (s) { const a = JSON.parse(s); f.value = a.user || {} } return f.value.id ? !0 : (w("Authentication Error", "User not properly authenticated"), !1) } catch { return w("Data Error", "Failed to load user data"), !1 } }, it = async () => { try { if (N.value) { const s = await g("/Stations"); C.value = s.records || [] } else { const a = (await g(`/UserStations?UserID=${f.value.id}`)).records || []; if (a.length === 0) { w("No Stations", "No stations assigned to your account. Contact your manager."); return } const e = a.map(async b => { try { return { ...await g(`/Stations/${b.StationID}`), userStationData: b } } catch (_) { return console.error(`Failed to fetch station ${b.StationID}:`, _), null } }), r = await Promise.all(e); C.value = r.filter(b => b !== null) } if (C.value.length === 1) await U(C.value[0]); else if (f.value.PrimaryStationID && !N.value) { const s = C.value.find(a => a.StationID === f.value.PrimaryStationID); s ? await U(s) : I.value = !0 } else I.value = !0 } catch (s) { console.error("Error fetching stations:", s), w("Station Loading Error", "Failed to load available stations") } }, U = async s => { if (!(!s || l.value)) { l.value = !0, D.value = `Loading ${s.StationName}...`, I.value = !1; try { h.value = s, await Promise.all([L(), lt(), rt(), q()]), await y.fire({ title: "Station Selected!", text: `Now managing ${s.StationName}`, icon: "success", toast: !0, position: "top-end", timer: 3e3, showConfirmButton: !1 }) } catch (a) { console.error("Error selecting station:", a), w("Station Selection Error", "Failed to load station data") } finally { l.value = !1 } } }, L = async () => { try { const [s, a] = await Promise.all([g(`/Pumps?StationID=${h.value.StationID}`), g(`/Tanks?StationID=${h.value.StationID}`)]); E.value = s.records || [], M.value = a.records || [] } catch (s) { console.error("Error fetching station equipment:", s) } }, lt = async () => { try { const s = new Date().toISOString().split("T")[0], a = await g(`/CashDrawers?StationID=${h.value.StationID}&ShiftDate=${s}`); a.records && a.records.length > 0 ? o.value = a.records[0] : o.value = {} } catch (s) { console.error("Error fetching active shift:", s), o.value = {} } }, rt = async () => { try { const s = new Date().toISOString().split("T")[0], a = await g(`/Attendance?UserID=${f.value.id}&AttendanceDate=${s}`); if (a.records && a.records.length > 0) { const e = a.records[0]; p.value = e.Status || "Not Clocked In" } else p.value = "Not Clocked In" } catch (s) { console.error("Error fetching attendance:", s), p.value = "Not Clocked In" } }, q = async () => { try { const s = new Date().toISOString().split("T")[0], e = (await g(`/Transactions?StationID=${h.value.StationID}&TransactionDate=${s}`)).records || []; i.totalTransactions = e.length, i.totalSales = e.reduce((_, O) => _ + parseFloat(O.TotalAmount || 0), 0), i.cashBalance = parseFloat(o.value.ActualCash || 0), i.variance = parseFloat(o.value.Variance || 0); const r = {}, b = {}; e.forEach(_ => { const O = _.PaymentMethod || "Unknown"; r[O] = (r[O] || 0) + parseFloat(_.TotalAmount || 0); const Y = new Date(_.TransactionDate).getHours(); b[Y] = (b[Y] || 0) + parseFloat(_.TotalAmount || 0) }), B.value = r, A.value = b } catch (s) { console.error("Error fetching today statistics:", s) } }, ct = async () => { o.value.DrawerID ? o.value.Status === "Open" && await ut() : await dt() }, dt = async () => { if ((await y.fire({ title: "Start New Shift", text: "This will begin a new shift session. Are you ready?", icon: "question", showCancelButton: !0, confirmButtonText: "Start Shift", cancelButtonText: "Cancel", confirmButtonColor: "#50cd89" })).isConfirmed) { l.value = !0, D.value = "Starting shift..."; try { const a = { StationID: h.value.StationID, ShiftDate: new Date().toISOString().split("T")[0], ShiftType: ft(), AttendantID: f.value.id, OpeningBalance: "0", ExpectedCash: "0", ActualCash: "0", Variance: "0", CashSales: "0", CashPayouts: "0", Status: "Open", OpenedBy: f.value.id, OpenedAt: new Date().toISOString() }, e = await g("/CashDrawers", { method: "POST", body: JSON.stringify(a) }); o.value = e, await y.fire({ title: "Shift Started!", text: "Your shift has been successfully started", icon: "success", toast: !0, position: "top-end", timer: 3e3, showConfirmButton: !1 }), p.value !== "Present" && await V() } catch (a) { w("Failed to start shift", a.message) } finally { l.value = !1 } } }, ut = async () => {
      if ((await y.fire({
        title: "End Shift Confirmation", html: `
      <div class="text-start">
        <p><strong>Cash Variance:</strong> ${x(i.variance)}</p>
        <p><strong>Total Sales:</strong> ${x(i.totalSales)}</p>
        <p><strong>Transactions:</strong> ${i.totalTransactions}</p>
        <br>
        <p>Are you sure you want to end your shift?</p>
      </div>
    `, icon: "warning", showCancelButton: !0, confirmButtonText: "Yes, End Shift", cancelButtonText: "Cancel", confirmButtonColor: "#f1416c"
      })).isConfirmed) { l.value = !0, D.value = "Ending shift..."; try { const a = { Status: "Closed", ClosedBy: f.value.id, ClosedAt: new Date().toISOString() }; await g(`/CashDrawers/${o.value.DrawerID}`, { method: "PATCH", body: JSON.stringify(a) }), o.value.Status = "Closed", await y.fire({ title: "Shift Ended Successfully!", text: "Your shift has been completed", icon: "success", confirmButtonColor: "#50cd89" }) } catch (a) { w("Failed to end shift", a.message) } finally { l.value = !1 } }
    }, V = async () => { l.value = !0, D.value = p.value === "Present" ? "Clocking out..." : "Clocking in..."; try { if (p.value === "Present") p.value = "Completed"; else { const s = { StationID: h.value.StationID, UserID: f.value.id, AttendanceDate: new Date().toISOString().split("T")[0], TimeIn: new Date().toISOString(), Status: "Present" }; await g("/Attendance", { method: "POST", body: JSON.stringify(s) }), p.value = "Present" } await y.fire({ title: p.value === "Present" ? "Clocked In!" : "Clocked Out!", text: `You have been successfully ${p.value === "Present" ? "clocked in" : "clocked out"}`, icon: "success", toast: !0, position: "top-end", timer: 3e3, showConfirmButton: !1 }) } catch (s) { w("Clock in/out failed", s.message) } finally { l.value = !1 } }, ht = async () => { l.value = !0, D.value = "Refreshing equipment status..."; try { await L(), await y.fire({ title: "Status Updated!", text: "Equipment status has been refreshed", icon: "success", toast: !0, position: "top-end", timer: 2e3, showConfirmButton: !1 }) } catch (s) { w("Refresh failed", s.message) } finally { l.value = !1 } }, pt = () => { y.fire({ title: "Navigate to Readings", text: "This would navigate to the readings view", icon: "info" }) }, vt = () => { y.fire({ title: "Navigate to Incidents", text: "This would navigate to the incident reporting view", icon: "info" }) }, ft = () => { const s = new Date().getHours(); return s >= 6 && s < 14 ? "Morning" : s >= 14 && s < 22 ? "Afternoon" : "Night" }, gt = s => { const a = A.value[s] || 0, e = Math.max(...Object.values(A.value), 1); return Math.max(10, a / e * 200) }, z = s => Math.round(parseFloat(s.CurrentLevel || 0) / parseFloat(s.Capacity || 1) * 100), bt = s => ({ Cash: "bg-success", Card: "bg-primary", "Mobile Money": "bg-warning", Credit: "bg-info" })[s] || "bg-secondary", mt = s => { const a = j.value; return a > 0 ? s / a * 100 : 0 }, x = s => new Intl.NumberFormat("en-UG", { style: "currency", currency: "UGX", minimumFractionDigits: 0 }).format(s || 0), w = (s, a) => { y.fire({ title: s, text: a, icon: "error", confirmButtonColor: "#f1416c" }) }; return _t(async () => { ot() && await it() }), St(() => h.value.StationID, s => { if (s) { const a = setInterval(async () => { h.value.StationID === s ? await q() : clearInterval(a) }, 3e4) } }), (s, a) => (u(), d("div", xt, [I.value ? (u(), d("div", kt, [t("div", Dt, [a[3] || (a[3] = m('<div class="card-header bg-primary" data-v-ea86af46><h3 class="card-title text-white fw-bold mb-0" data-v-ea86af46><i class="ki-duotone ki-shop fs-2 text-white me-2" data-v-ea86af46><span class="path1" data-v-ea86af46></span><span class="path2" data-v-ea86af46></span><span class="path3" data-v-ea86af46></span></i> Select Your Station </h3></div>', 1)), t("div", Ct, [t("p", It, n(N.value ? "Select a station to manage:" : "Choose your working station:"), 1), t("div", Tt, [(u(!0), d(T, null, P(C.value, e => (u(), d("div", { key: e.StationID, class: "col-12" }, [t("button", { onClick: r => U(e), disabled: l.value, class: "btn btn-light-primary btn-lg w-100 text-start d-flex align-items-center gap-3 p-4", style: { "border-radius": "12px" } }, [a[1] || (a[1] = m('<div class="symbol symbol-50px" data-v-ea86af46><div class="symbol-label bg-primary" data-v-ea86af46><i class="ki-duotone ki-shop fs-2 text-white" data-v-ea86af46><span class="path1" data-v-ea86af46></span><span class="path2" data-v-ea86af46></span><span class="path3" data-v-ea86af46></span></i></div></div>', 1)), t("div", $t, [t("h6", At, n(e.StationName), 1), t("p", Ot, n(e.Location), 1)]), a[2] || (a[2] = t("i", { class: "ki-duotone ki-arrow-right fs-2 text-primary" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1))], 8, Pt)]))), 128))])])])])) : H("", !0), h.value.StationID ? (u(), d("div", Et, [t("div", Mt, [t("div", Bt, [t("div", Nt, [a[4] || (a[4] = m('<div class="symbol symbol-60px" data-v-ea86af46><div class="symbol-label bg-white bg-opacity-20" data-v-ea86af46><i class="ki-duotone ki-shop fs-2x text-white" data-v-ea86af46><span class="path1" data-v-ea86af46></span><span class="path2" data-v-ea86af46></span><span class="path3" data-v-ea86af46></span></i></div></div>', 1)), t("div", null, [t("h1", Ft, n(h.value.StationName), 1), t("p", Rt, n(h.value.Location) + " • " + n(G.value), 1)])]), t("div", Ut, [t("button", { onClick: a[0] || (a[0] = e => I.value = !0), class: "btn btn-white btn-sm mb-2" }, a[5] || (a[5] = [t("i", { class: "ki-duotone ki-switch fs-2" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1), $(" Switch Station ")])), t("div", { class: S(["badge badge-lg", `badge-light-${X.value}`]) }, n(p.value), 3), t("p", Ht, n(K.value), 1)])])])])) : H("", !0), t("div", jt, [t("div", Lt, [t("div", { class: S(["card card-flush h-100", Q.value]) }, [t("div", qt, [t("i", { class: S(["ki-duotone fs-3x mb-3", W.value]) }, a[6] || (a[6] = [t("span", { class: "path1" }, null, -1), t("span", { class: "path2" }, null, -1)]), 2), t("button", { onClick: ct, disabled: l.value, class: S(["btn btn-lg w-100 fw-bold", tt.value]) }, n(Z.value), 11, Vt)])], 2)]), t("div", zt, [t("div", Yt, [t("div", Jt, [a[7] || (a[7] = t("i", { class: "ki-duotone ki-time fs-3x text-info mb-3" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1)), t("button", { onClick: V, disabled: l.value, class: "btn btn-info btn-lg w-100 fw-bold" }, n(p.value === "Present" ? "Clock Out" : "Clock In"), 9, Gt)])])]), t("div", { class: "col-6 col-lg-3" }, [t("div", { class: "card card-flush bg-light-warning h-100" }, [t("div", { class: "card-body p-4 text-center" }, [a[8] || (a[8] = t("i", { class: "ki-duotone ki-chart-line-up fs-3x text-warning mb-3" }, [t("span", { class: "path1" }), t("span", { class: "path2" }), t("span", { class: "path3" })], -1)), t("button", { onClick: pt, class: "btn btn-warning btn-lg w-100 fw-bold" }, " Take Readings ")])])]), t("div", { class: "col-6 col-lg-3" }, [t("div", { class: "card card-flush bg-light-danger h-100" }, [t("div", { class: "card-body p-4 text-center" }, [a[9] || (a[9] = t("i", { class: "ki-duotone ki-information fs-3x text-danger mb-3" }, [t("span", { class: "path1" }), t("span", { class: "path2" }), t("span", { class: "path3" })], -1)), t("button", { onClick: vt, class: "btn btn-danger btn-lg w-100 fw-bold" }, " Report Issue ")])])])]), t("div", Xt, [t("div", Kt, [t("div", Qt, [t("div", Wt, [a[10] || (a[10] = t("i", { class: "ki-duotone ki-chart-line-up fs-3x text-primary mb-3" }, [t("span", { class: "path1" }), t("span", { class: "path2" }), t("span", { class: "path3" })], -1)), t("h2", Zt, n(x(i.totalSales)), 1), a[11] || (a[11] = t("p", { class: "text-gray-600 fw-semibold mb-0" }, "Today's Sales", -1)), t("div", ta, [t("div", { class: "progress-bar bg-primary", style: k(`width: ${at.value}%`) }, null, 4)])])])]), t("div", aa, [t("div", sa, [t("div", ea, [a[12] || (a[12] = m('<i class="ki-duotone ki-basket fs-3x text-success mb-3" data-v-ea86af46><span class="path1" data-v-ea86af46></span><span class="path2" data-v-ea86af46></span><span class="path3" data-v-ea86af46></span><span class="path4" data-v-ea86af46></span></i>', 1)), t("h2", na, n(i.totalTransactions), 1), a[13] || (a[13] = t("p", { class: "text-gray-600 fw-semibold mb-0" }, "Transactions", -1)), t("div", oa, [t("div", { class: "progress-bar bg-success", style: k(`width: ${st.value}%`) }, null, 4)])])])]), t("div", ia, [t("div", la, [t("div", ra, [a[14] || (a[14] = m('<i class="ki-duotone ki-wallet fs-3x text-warning mb-3" data-v-ea86af46><span class="path1" data-v-ea86af46></span><span class="path2" data-v-ea86af46></span><span class="path3" data-v-ea86af46></span><span class="path4" data-v-ea86af46></span></i>', 1)), t("h2", ca, n(x(i.cashBalance)), 1), a[15] || (a[15] = t("p", { class: "text-gray-600 fw-semibold mb-0" }, "Cash Balance", -1)), t("div", da, [t("div", { class: "progress-bar bg-warning", style: k(`width: ${Math.min(100, Math.abs(i.cashBalance) / 1e6 * 100)}%`) }, null, 4)])])])]), t("div", ua, [t("div", { class: S(["card card-flush", `bg-light-${F.value}`]) }, [t("div", ha, [t("i", { class: S(["ki-duotone ki-arrow-up-down fs-3x mb-3", `text-${F.value}`]) }, a[16] || (a[16] = [t("span", { class: "path1" }, null, -1), t("span", { class: "path2" }, null, -1)]), 2), t("h2", pa, n(x(Math.abs(i.variance))), 1), a[17] || (a[17] = t("p", { class: "text-gray-600 fw-semibold mb-0" }, "Cash Variance", -1)), t("div", va, [t("div", { class: S(["progress-bar", `bg-${F.value}`]), style: k(`width: ${Math.min(100, Math.abs(i.variance) / 5e4 * 100)}%`) }, null, 6)])])], 2)])]), t("div", fa, [t("div", ga, [t("div", ba, [t("div", ma, [a[18] || (a[18] = m('<h3 class="card-title fw-bold" data-v-ea86af46><i class="ki-duotone ki-chart-line fs-2 text-primary me-2" data-v-ea86af46><span class="path1" data-v-ea86af46></span><span class="path2" data-v-ea86af46></span><span class="path3" data-v-ea86af46></span></i> Hourly Sales Performance </h3>', 1)), t("div", ya, [t("div", wa, " Peak: " + n(R.value) + ":00 ", 1)])]), t("div", _a, [t("div", Sa, [t("div", xa, [(u(), d(T, null, P(24, e => t("div", { key: e - 1, class: "d-flex flex-column align-items-center", style: { flex: "1" } }, [t("div", { class: S(["bg-primary rounded-top mb-2 transition-all", { "bg-success": e - 1 === R.value }]), style: k(`height: ${gt(e - 1)}px; width: 100%; max-width: 20px;`) }, null, 6), t("small", ka, n(e - 1), 1)])), 64))])]), t("div", Da, [a[19] || (a[19] = m('<div class="d-flex align-items-center gap-2" data-v-ea86af46><i class="ki-duotone ki-artificial-intelligence fs-2 text-info" data-v-ea86af46><span class="path1" data-v-ea86af46></span><span class="path2" data-v-ea86af46></span><span class="path3" data-v-ea86af46></span></i><div class="badge badge-info fw-bold" data-v-ea86af46>AI Insight</div></div>', 1)), t("p", Ca, n(et.value), 1)])])])]), t("div", Ia, [t("div", Ta, [a[22] || (a[22] = m('<div class="card-header py-4" data-v-ea86af46><h3 class="card-title fw-bold" data-v-ea86af46><i class="ki-duotone ki-chart-pie fs-2 text-success me-2" data-v-ea86af46><span class="path1" data-v-ea86af46></span><span class="path2" data-v-ea86af46></span><span class="path3" data-v-ea86af46></span></i> Payment Methods </h3></div>', 1)), t("div", Pa, [t("div", $a, [(u(!0), d(T, null, P(B.value, (e, r) => (u(), d("div", { key: r, class: "mb-3" }, [t("div", Aa, [t("span", Oa, n(r), 1), t("span", Ea, n(x(e)), 1)]), t("div", Ma, [t("div", { class: S(["progress-bar", bt(r)]), style: k(`width: ${mt(e)}%`) }, null, 6)])]))), 128))]), a[21] || (a[21] = t("div", { class: "separator my-4" }, null, -1)), t("div", Ba, [a[20] || (a[20] = t("span", { class: "fw-bold text-gray-800" }, "Total Collected:", -1)), t("span", Na, n(x(j.value)), 1)])])])])]), t("div", Fa, [t("div", Ra, [a[24] || (a[24] = t("h3", { class: "card-title fw-bold" }, [t("i", { class: "ki-duotone ki-abstract-26 fs-2 text-danger me-2" }, [t("span", { class: "path1" }), t("span", { class: "path2" })]), $(" Equipment Status Overview ")], -1)), t("div", Ua, [t("button", { onClick: ht, disabled: l.value, class: "btn btn-sm btn-light-primary" }, a[23] || (a[23] = [t("i", { class: "ki-duotone ki-arrows-circle fs-2" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1), $(" Refresh ")]), 8, Ha)])]), t("div", ja, [t("div", La, [t("div", qa, [t("h6", Va, [a[25] || (a[25] = t("i", { class: "ki-duotone ki-abstract-26 fs-1 text-primary me-2" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1)), $(" Fuel Dispensers (" + n(E.value.length) + ") ", 1)]), t("div", za, [(u(!0), d(T, null, P(E.value, e => (u(), d("div", { key: e.PumpID, class: "col-6 col-lg-4" }, [t("div", Ya, [t("div", Ja, [a[26] || (a[26] = t("i", { class: "ki-duotone ki-abstract-26 fs-2x text-success mb-2" }, [t("span", { class: "path1" }), t("span", { class: "path2" })], -1)), t("h6", Ga, n(e.PumpName), 1), t("span", Xa, n(e.Status), 1), t("div", Ka, [t("small", Qa, n(Math.round(85 + Math.random() * 15)) + "% Uptime", 1)])])])]))), 128))])]), t("div", Wa, [t("h6", Za, [a[27] || (a[27] = m('<i class="ki-duotone ki-bucket fs-1 text-info me-2" data-v-ea86af46><span class="path1" data-v-ea86af46></span><span class="path2" data-v-ea86af46></span><span class="path3" data-v-ea86af46></span><span class="path4" data-v-ea86af46></span></i>', 1)), $(" Storage Tanks (" + n(M.value.length) + ") ", 1)]), t("div", ts, [(u(!0), d(T, null, P(M.value, e => (u(), d("div", { key: e.TankID, class: "col-6 col-lg-4" }, [t("div", as, [t("div", ss, [a[28] || (a[28] = m('<i class="ki-duotone ki-bucket fs-2x text-info mb-2" data-v-ea86af46><span class="path1" data-v-ea86af46></span><span class="path2" data-v-ea86af46></span><span class="path3" data-v-ea86af46></span><span class="path4" data-v-ea86af46></span></i>', 1)), t("h6", es, n(e.TankName), 1), t("div", ns, [t("div", { class: "progress-bar bg-info", style: k(`width: ${z(e)}%`) }, null, 4)]), t("small", os, n(z(e)) + "% Full", 1)])])]))), 128))])])])])]), l.value ? (u(), d("div", is, [t("div", ls, [t("div", rs, [a[29] || (a[29] = t("div", { class: "spinner-border text-primary mb-3", style: { width: "3rem", height: "3rem" } }, null, -1)), t("h6", cs, n(D.value), 1)])])])) : H("", !0)]))
  }
}, vs = yt(us, [["__scopeId", "data-v-ea86af46"]]); export { vs as default };
